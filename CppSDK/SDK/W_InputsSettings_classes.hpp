#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InputsSettings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_InputsSettings.W_InputsSettings_C
// 0x0100 (0x03D0 - 0x02D0)
class UW_InputsSettings_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_Selector_C*                          Selector_Horizontal;                               // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Selector_C*                          Selector_Vertical;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Slider_C*                            Slider_Camera;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Bannier_C*                           W_Bannier;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Bannier_C*                           W_Bannier_1;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Bannier_C*                           W_Bannier_2;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Bannier_C*                           W_Bannier_3;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Bannier_C*                           W_Bannier_4;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Bannier_C*                           W_Bannier_5;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_1;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_2;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_3;                                        // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_4;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_5;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_6;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_7;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_8;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_9;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_10;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_11;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_12;                                       // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_13;                                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_14;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_15;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_16;                                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_17;                                       // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeyMap_C*                            W_KeyMap_18;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class APC_C*                                  PC_Ref;                                            // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 Mec_Ref;                                           // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USave_Settings_C*                       Save_Ref;                                          // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__W_InputsSettings_Slider_Camera_K2Node_ComponentBoundEvent_1_On_Confirm_Value__DelegateSignature(double Value);
	void BndEvt__W_InputsSettings_W_Selector_2_K2Node_ComponentBoundEvent_4_On_Value_Change__DelegateSignature(int32 Index_0);
	void BndEvt__W_InputsSettings_W_Selector_3_K2Node_ComponentBoundEvent_3_On_Value_Change__DelegateSignature(int32 Index_0);
	void Construct();
	void ExecuteUbergraph_W_InputsSettings(int32 EntryPoint);
	void Save_Settings();
	void Set_Default_Modes();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_InputsSettings_C">();
	}
	static class UW_InputsSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_InputsSettings_C>();
	}
};
static_assert(alignof(UW_InputsSettings_C) == 0x000008, "Wrong alignment on UW_InputsSettings_C");
static_assert(sizeof(UW_InputsSettings_C) == 0x0003D0, "Wrong size on UW_InputsSettings_C");
static_assert(offsetof(UW_InputsSettings_C, UberGraphFrame) == 0x0002D0, "Member 'UW_InputsSettings_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, Selector_Horizontal) == 0x0002D8, "Member 'UW_InputsSettings_C::Selector_Horizontal' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, Selector_Vertical) == 0x0002E0, "Member 'UW_InputsSettings_C::Selector_Vertical' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, Slider_Camera) == 0x0002E8, "Member 'UW_InputsSettings_C::Slider_Camera' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_Bannier) == 0x0002F0, "Member 'UW_InputsSettings_C::W_Bannier' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_Bannier_1) == 0x0002F8, "Member 'UW_InputsSettings_C::W_Bannier_1' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_Bannier_2) == 0x000300, "Member 'UW_InputsSettings_C::W_Bannier_2' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_Bannier_3) == 0x000308, "Member 'UW_InputsSettings_C::W_Bannier_3' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_Bannier_4) == 0x000310, "Member 'UW_InputsSettings_C::W_Bannier_4' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_Bannier_5) == 0x000318, "Member 'UW_InputsSettings_C::W_Bannier_5' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap) == 0x000320, "Member 'UW_InputsSettings_C::W_KeyMap' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_1) == 0x000328, "Member 'UW_InputsSettings_C::W_KeyMap_1' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_2) == 0x000330, "Member 'UW_InputsSettings_C::W_KeyMap_2' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_3) == 0x000338, "Member 'UW_InputsSettings_C::W_KeyMap_3' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_4) == 0x000340, "Member 'UW_InputsSettings_C::W_KeyMap_4' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_5) == 0x000348, "Member 'UW_InputsSettings_C::W_KeyMap_5' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_6) == 0x000350, "Member 'UW_InputsSettings_C::W_KeyMap_6' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_7) == 0x000358, "Member 'UW_InputsSettings_C::W_KeyMap_7' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_8) == 0x000360, "Member 'UW_InputsSettings_C::W_KeyMap_8' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_9) == 0x000368, "Member 'UW_InputsSettings_C::W_KeyMap_9' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_10) == 0x000370, "Member 'UW_InputsSettings_C::W_KeyMap_10' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_11) == 0x000378, "Member 'UW_InputsSettings_C::W_KeyMap_11' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_12) == 0x000380, "Member 'UW_InputsSettings_C::W_KeyMap_12' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_13) == 0x000388, "Member 'UW_InputsSettings_C::W_KeyMap_13' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_14) == 0x000390, "Member 'UW_InputsSettings_C::W_KeyMap_14' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_15) == 0x000398, "Member 'UW_InputsSettings_C::W_KeyMap_15' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_16) == 0x0003A0, "Member 'UW_InputsSettings_C::W_KeyMap_16' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_17) == 0x0003A8, "Member 'UW_InputsSettings_C::W_KeyMap_17' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, W_KeyMap_18) == 0x0003B0, "Member 'UW_InputsSettings_C::W_KeyMap_18' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, PC_Ref) == 0x0003B8, "Member 'UW_InputsSettings_C::PC_Ref' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, Mec_Ref) == 0x0003C0, "Member 'UW_InputsSettings_C::Mec_Ref' has a wrong offset!");
static_assert(offsetof(UW_InputsSettings_C, Save_Ref) == 0x0003C8, "Member 'UW_InputsSettings_C::Save_Ref' has a wrong offset!");

}

