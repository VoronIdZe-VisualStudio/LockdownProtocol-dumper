#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemSlot

#include "Basic.hpp"

#include "Str_ItemState_structs.hpp"
#include "Str_Item_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ItemSlot.ItemSlot_C.Get Key
// 0x0008 (0x0008 - 0x0000)
struct ItemSlot_C_Get_Key final
{
public:
	class AActor*                                 Key;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Get_Key) == 0x000008, "Wrong alignment on ItemSlot_C_Get_Key");
static_assert(sizeof(ItemSlot_C_Get_Key) == 0x000008, "Wrong size on ItemSlot_C_Get_Key");
static_assert(offsetof(ItemSlot_C_Get_Key, Key) == 0x000000, "Member 'ItemSlot_C_Get_Key::Key' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Get Name
// 0x0018 (0x0018 - 0x0000)
struct ItemSlot_C_Get_Name final
{
public:
	class AMec_C*                                 Mec;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Get_Name) == 0x000008, "Wrong alignment on ItemSlot_C_Get_Name");
static_assert(sizeof(ItemSlot_C_Get_Name) == 0x000018, "Wrong size on ItemSlot_C_Get_Name");
static_assert(offsetof(ItemSlot_C_Get_Name, Mec) == 0x000000, "Member 'ItemSlot_C_Get_Name::Mec' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Get_Name, Name_0) == 0x000008, "Member 'ItemSlot_C_Get_Name::Name_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Get State
// 0x000C (0x000C - 0x0000)
struct ItemSlot_C_Get_State final
{
public:
	struct FStr_ItemState                         State;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In;                                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Get_State) == 0x000004, "Wrong alignment on ItemSlot_C_Get_State");
static_assert(sizeof(ItemSlot_C_Get_State) == 0x00000C, "Wrong size on ItemSlot_C_Get_State");
static_assert(offsetof(ItemSlot_C_Get_State, State) == 0x000000, "Member 'ItemSlot_C_Get_State::State' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Get_State, In) == 0x000008, "Member 'ItemSlot_C_Get_State::In' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Update Mesh
// 0x0010 (0x0010 - 0x0000)
struct ItemSlot_C_Update_Mesh final
{
public:
	struct FStr_Item                              K2Node_MakeStruct_Str_Item;                        // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Update_Mesh) == 0x000008, "Wrong alignment on ItemSlot_C_Update_Mesh");
static_assert(sizeof(ItemSlot_C_Update_Mesh) == 0x000010, "Wrong size on ItemSlot_C_Update_Mesh");
static_assert(offsetof(ItemSlot_C_Update_Mesh, K2Node_MakeStruct_Str_Item) == 0x000000, "Member 'ItemSlot_C_Update_Mesh::K2Node_MakeStruct_Str_Item' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Delete Item
// 0x0001 (0x0001 - 0x0000)
struct ItemSlot_C_Delete_Item final
{
public:
	bool                                          Call_Take_Item;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Delete_Item) == 0x000001, "Wrong alignment on ItemSlot_C_Delete_Item");
static_assert(sizeof(ItemSlot_C_Delete_Item) == 0x000001, "Wrong size on ItemSlot_C_Delete_Item");
static_assert(offsetof(ItemSlot_C_Delete_Item, Call_Take_Item) == 0x000000, "Member 'ItemSlot_C_Delete_Item::Call_Take_Item' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Force Item
// 0x000C (0x000C - 0x0000)
struct ItemSlot_C_Force_Item final
{
public:
	struct FStr_ItemState                         Item_State_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Call_Place_Item;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Force_Item) == 0x000004, "Wrong alignment on ItemSlot_C_Force_Item");
static_assert(sizeof(ItemSlot_C_Force_Item) == 0x00000C, "Wrong size on ItemSlot_C_Force_Item");
static_assert(offsetof(ItemSlot_C_Force_Item, Item_State_0) == 0x000000, "Member 'ItemSlot_C_Force_Item::Item_State_0' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Force_Item, Call_Place_Item) == 0x000008, "Member 'ItemSlot_C_Force_Item::Call_Place_Item' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Set State
// 0x000C (0x000C - 0x0000)
struct ItemSlot_C_Set_State final
{
public:
	struct FStr_ItemState                         Item_State_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update_Mesh_0;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Set_State) == 0x000004, "Wrong alignment on ItemSlot_C_Set_State");
static_assert(sizeof(ItemSlot_C_Set_State) == 0x00000C, "Wrong size on ItemSlot_C_Set_State");
static_assert(offsetof(ItemSlot_C_Set_State, Item_State_0) == 0x000000, "Member 'ItemSlot_C_Set_State::Item_State_0' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Set_State, Update_Mesh_0) == 0x000008, "Member 'ItemSlot_C_Set_State::Update_Mesh_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Lock
// 0x0001 (0x0001 - 0x0000)
struct ItemSlot_C_Lock final
{
public:
	bool                                          Locked_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Lock) == 0x000001, "Wrong alignment on ItemSlot_C_Lock");
static_assert(sizeof(ItemSlot_C_Lock) == 0x000001, "Wrong size on ItemSlot_C_Lock");
static_assert(offsetof(ItemSlot_C_Lock, Locked_0) == 0x000000, "Member 'ItemSlot_C_Lock::Locked_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Check State
// 0x0020 (0x0020 - 0x0000)
struct ItemSlot_C_Check_State final
{
public:
	bool                                          Item_In_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Locked_0;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_ItemState                         State;                                             // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_Item                              K2Node_MakeStruct_Str_Item;                        // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Check_State) == 0x000008, "Wrong alignment on ItemSlot_C_Check_State");
static_assert(sizeof(ItemSlot_C_Check_State) == 0x000020, "Wrong size on ItemSlot_C_Check_State");
static_assert(offsetof(ItemSlot_C_Check_State, Item_In_0) == 0x000000, "Member 'ItemSlot_C_Check_State::Item_In_0' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Check_State, Locked_0) == 0x000001, "Member 'ItemSlot_C_Check_State::Locked_0' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Check_State, State) == 0x000004, "Member 'ItemSlot_C_Check_State::State' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Check_State, K2Node_MakeStruct_Str_Item) == 0x000010, "Member 'ItemSlot_C_Check_State::K2Node_MakeStruct_Str_Item' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.UserConstructionScript
// 0x0350 (0x0350 - 0x0000)
struct ItemSlot_C_UserConstructionScript final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0000(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0108(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AItemDynamicMesh_C*                     K2Node_DynamicCast_AsItem_Dynamic_Mesh;            // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemDynamicMesh_C*                     K2Node_DynamicCast_AsItem_Dynamic_Mesh_1;          // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x0228(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AInteraction_C*                         K2Node_DynamicCast_AsInteraction;                  // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInteraction_C*                         K2Node_DynamicCast_AsInteraction_1;                // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1; // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_UserConstructionScript) == 0x000008, "Wrong alignment on ItemSlot_C_UserConstructionScript");
static_assert(sizeof(ItemSlot_C_UserConstructionScript) == 0x000350, "Wrong size on ItemSlot_C_UserConstructionScript");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000000, "Member 'ItemSlot_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000100, "Member 'ItemSlot_C_UserConstructionScript::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000108, "Member 'ItemSlot_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, K2Node_DynamicCast_AsItem_Dynamic_Mesh) == 0x000208, "Member 'ItemSlot_C_UserConstructionScript::K2Node_DynamicCast_AsItem_Dynamic_Mesh' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'ItemSlot_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, K2Node_DynamicCast_AsItem_Dynamic_Mesh_1) == 0x000218, "Member 'ItemSlot_C_UserConstructionScript::K2Node_DynamicCast_AsItem_Dynamic_Mesh_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000220, "Member 'ItemSlot_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x000228, "Member 'ItemSlot_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, K2Node_DynamicCast_AsInteraction) == 0x000328, "Member 'ItemSlot_C_UserConstructionScript::K2Node_DynamicCast_AsInteraction' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_2) == 0x000330, "Member 'ItemSlot_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, K2Node_DynamicCast_AsInteraction_1) == 0x000338, "Member 'ItemSlot_C_UserConstructionScript::K2Node_DynamicCast_AsInteraction_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_3) == 0x000340, "Member 'ItemSlot_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000344, "Member 'ItemSlot_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1) == 0x000348, "Member 'ItemSlot_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_0_Net Trigger__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_0_Net_Trigger__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         State;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_0_Net_Trigger__DelegateSignature) == 0x000008, "Wrong alignment on ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_0_Net_Trigger__DelegateSignature");
static_assert(sizeof(ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_0_Net_Trigger__DelegateSignature) == 0x000010, "Wrong size on ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_0_Net_Trigger__DelegateSignature");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_0_Net_Trigger__DelegateSignature, Source) == 0x000000, "Member 'ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_0_Net_Trigger__DelegateSignature::Source' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_0_Net_Trigger__DelegateSignature, State) == 0x000008, "Member 'ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_0_Net_Trigger__DelegateSignature::State' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_1_Net Trigger__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         State;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature) == 0x000008, "Wrong alignment on ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature");
static_assert(sizeof(ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature) == 0x000010, "Wrong size on ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature, Source) == 0x000000, "Member 'ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature::Source' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature, State) == 0x000008, "Member 'ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature::State' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Update
// 0x000C (0x000C - 0x0000)
struct ItemSlot_C_Update final
{
public:
	bool                                          Item_In_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Locked_0;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_ItemState                         State;                                             // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Update) == 0x000004, "Wrong alignment on ItemSlot_C_Update");
static_assert(sizeof(ItemSlot_C_Update) == 0x00000C, "Wrong size on ItemSlot_C_Update");
static_assert(offsetof(ItemSlot_C_Update, Item_In_0) == 0x000000, "Member 'ItemSlot_C_Update::Item_In_0' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Update, Locked_0) == 0x000001, "Member 'ItemSlot_C_Update::Locked_0' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Update, State) == 0x000004, "Member 'ItemSlot_C_Update::State' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_2_Focus__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_2_Focus__DelegateSignature final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_2_Focus__DelegateSignature) == 0x000001, "Wrong alignment on ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_2_Focus__DelegateSignature");
static_assert(sizeof(ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_2_Focus__DelegateSignature) == 0x000001, "Wrong size on ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_2_Focus__DelegateSignature");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_2_Focus__DelegateSignature, TRUE_0) == 0x000000, "Member 'ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_2_Focus__DelegateSignature::TRUE_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_3_Focusable__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_3_Focusable__DelegateSignature final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_3_Focusable__DelegateSignature) == 0x000001, "Wrong alignment on ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_3_Focusable__DelegateSignature");
static_assert(sizeof(ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_3_Focusable__DelegateSignature) == 0x000001, "Wrong size on ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_3_Focusable__DelegateSignature");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_3_Focusable__DelegateSignature, TRUE_0) == 0x000000, "Member 'ItemSlot_C_BndEvt__ItemSlot_In_K2Node_ComponentBoundEvent_3_Focusable__DelegateSignature::TRUE_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_4_Focus__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_4_Focus__DelegateSignature final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_4_Focus__DelegateSignature) == 0x000001, "Wrong alignment on ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_4_Focus__DelegateSignature");
static_assert(sizeof(ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_4_Focus__DelegateSignature) == 0x000001, "Wrong size on ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_4_Focus__DelegateSignature");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_4_Focus__DelegateSignature, TRUE_0) == 0x000000, "Member 'ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_4_Focus__DelegateSignature::TRUE_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_5_Focusable__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_5_Focusable__DelegateSignature final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_5_Focusable__DelegateSignature) == 0x000001, "Wrong alignment on ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_5_Focusable__DelegateSignature");
static_assert(sizeof(ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_5_Focusable__DelegateSignature) == 0x000001, "Wrong size on ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_5_Focusable__DelegateSignature");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_5_Focusable__DelegateSignature, TRUE_0) == 0x000000, "Member 'ItemSlot_C_BndEvt__ItemSlot_Out_K2Node_ComponentBoundEvent_5_Focusable__DelegateSignature::TRUE_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.All Sound
// 0x0010 (0x0010 - 0x0000)
struct ItemSlot_C_All_Sound final
{
public:
	bool                                          Place_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UData_Item_C*                           Data;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_All_Sound) == 0x000008, "Wrong alignment on ItemSlot_C_All_Sound");
static_assert(sizeof(ItemSlot_C_All_Sound) == 0x000010, "Wrong size on ItemSlot_C_All_Sound");
static_assert(offsetof(ItemSlot_C_All_Sound, Place_0) == 0x000000, "Member 'ItemSlot_C_All_Sound::Place_0' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_All_Sound, Data) == 0x000008, "Member 'ItemSlot_C_All_Sound::Data' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Hit Sphere
// 0x0008 (0x0008 - 0x0000)
struct ItemSlot_C_Hit_Sphere final
{
public:
	struct FStr_ItemState                         State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Hit_Sphere) == 0x000004, "Wrong alignment on ItemSlot_C_Hit_Sphere");
static_assert(sizeof(ItemSlot_C_Hit_Sphere) == 0x000008, "Wrong size on ItemSlot_C_Hit_Sphere");
static_assert(offsetof(ItemSlot_C_Hit_Sphere, State) == 0x000000, "Member 'ItemSlot_C_Hit_Sphere::State' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Set Sphere Collision
// 0x0001 (0x0001 - 0x0000)
struct ItemSlot_C_Set_Sphere_Collision final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Set_Sphere_Collision) == 0x000001, "Wrong alignment on ItemSlot_C_Set_Sphere_Collision");
static_assert(sizeof(ItemSlot_C_Set_Sphere_Collision) == 0x000001, "Wrong size on ItemSlot_C_Set_Sphere_Collision");
static_assert(offsetof(ItemSlot_C_Set_Sphere_Collision, TRUE_0) == 0x000000, "Member 'ItemSlot_C_Set_Sphere_Collision::TRUE_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.BndEvt__ItemSlot_Take_K2Node_ComponentBoundEvent_6_Local Trigger__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemSlot_C_BndEvt__ItemSlot_Take_K2Node_ComponentBoundEvent_6_Local_Trigger__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         State;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_BndEvt__ItemSlot_Take_K2Node_ComponentBoundEvent_6_Local_Trigger__DelegateSignature) == 0x000008, "Wrong alignment on ItemSlot_C_BndEvt__ItemSlot_Take_K2Node_ComponentBoundEvent_6_Local_Trigger__DelegateSignature");
static_assert(sizeof(ItemSlot_C_BndEvt__ItemSlot_Take_K2Node_ComponentBoundEvent_6_Local_Trigger__DelegateSignature) == 0x000010, "Wrong size on ItemSlot_C_BndEvt__ItemSlot_Take_K2Node_ComponentBoundEvent_6_Local_Trigger__DelegateSignature");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_Take_K2Node_ComponentBoundEvent_6_Local_Trigger__DelegateSignature, Source) == 0x000000, "Member 'ItemSlot_C_BndEvt__ItemSlot_Take_K2Node_ComponentBoundEvent_6_Local_Trigger__DelegateSignature::Source' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_Take_K2Node_ComponentBoundEvent_6_Local_Trigger__DelegateSignature, State) == 0x000008, "Member 'ItemSlot_C_BndEvt__ItemSlot_Take_K2Node_ComponentBoundEvent_6_Local_Trigger__DelegateSignature::State' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.BndEvt__ItemSlot_Place_K2Node_ComponentBoundEvent_7_Local Trigger__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemSlot_C_BndEvt__ItemSlot_Place_K2Node_ComponentBoundEvent_7_Local_Trigger__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         State;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_BndEvt__ItemSlot_Place_K2Node_ComponentBoundEvent_7_Local_Trigger__DelegateSignature) == 0x000008, "Wrong alignment on ItemSlot_C_BndEvt__ItemSlot_Place_K2Node_ComponentBoundEvent_7_Local_Trigger__DelegateSignature");
static_assert(sizeof(ItemSlot_C_BndEvt__ItemSlot_Place_K2Node_ComponentBoundEvent_7_Local_Trigger__DelegateSignature) == 0x000010, "Wrong size on ItemSlot_C_BndEvt__ItemSlot_Place_K2Node_ComponentBoundEvent_7_Local_Trigger__DelegateSignature");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_Place_K2Node_ComponentBoundEvent_7_Local_Trigger__DelegateSignature, Source) == 0x000000, "Member 'ItemSlot_C_BndEvt__ItemSlot_Place_K2Node_ComponentBoundEvent_7_Local_Trigger__DelegateSignature::Source' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_BndEvt__ItemSlot_Place_K2Node_ComponentBoundEvent_7_Local_Trigger__DelegateSignature, State) == 0x000008, "Member 'ItemSlot_C_BndEvt__ItemSlot_Place_K2Node_ComponentBoundEvent_7_Local_Trigger__DelegateSignature::State' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Other Interaction
// 0x0018 (0x0018 - 0x0000)
struct ItemSlot_C_Other_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State_0;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Other_Interaction) == 0x000008, "Wrong alignment on ItemSlot_C_Other_Interaction");
static_assert(sizeof(ItemSlot_C_Other_Interaction) == 0x000018, "Wrong size on ItemSlot_C_Other_Interaction");
static_assert(offsetof(ItemSlot_C_Other_Interaction, Index_0) == 0x000000, "Member 'ItemSlot_C_Other_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Other_Interaction, Source) == 0x000008, "Member 'ItemSlot_C_Other_Interaction::Source' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Other_Interaction, Item_State_0) == 0x000010, "Member 'ItemSlot_C_Other_Interaction::Item_State_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Local Interaction
// 0x0018 (0x0018 - 0x0000)
struct ItemSlot_C_Local_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State_0;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Local_Interaction) == 0x000008, "Wrong alignment on ItemSlot_C_Local_Interaction");
static_assert(sizeof(ItemSlot_C_Local_Interaction) == 0x000018, "Wrong size on ItemSlot_C_Local_Interaction");
static_assert(offsetof(ItemSlot_C_Local_Interaction, Index_0) == 0x000000, "Member 'ItemSlot_C_Local_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Local_Interaction, Source) == 0x000008, "Member 'ItemSlot_C_Local_Interaction::Source' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Local_Interaction, Item_State_0) == 0x000010, "Member 'ItemSlot_C_Local_Interaction::Item_State_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Net Interaction
// 0x0018 (0x0018 - 0x0000)
struct ItemSlot_C_Net_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State_0;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Net_Interaction) == 0x000008, "Wrong alignment on ItemSlot_C_Net_Interaction");
static_assert(sizeof(ItemSlot_C_Net_Interaction) == 0x000018, "Wrong size on ItemSlot_C_Net_Interaction");
static_assert(offsetof(ItemSlot_C_Net_Interaction, Index_0) == 0x000000, "Member 'ItemSlot_C_Net_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Net_Interaction, Source) == 0x000008, "Member 'ItemSlot_C_Net_Interaction::Source' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_Net_Interaction, Item_State_0) == 0x000010, "Member 'ItemSlot_C_Net_Interaction::Item_State_0' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.Set Data
// 0x0008 (0x0008 - 0x0000)
struct ItemSlot_C_Set_Data final
{
public:
	class UData_Item_C*                           Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_Set_Data) == 0x000008, "Wrong alignment on ItemSlot_C_Set_Data");
static_assert(sizeof(ItemSlot_C_Set_Data) == 0x000008, "Wrong size on ItemSlot_C_Set_Data");
static_assert(offsetof(ItemSlot_C_Set_Data, Data) == 0x000000, "Member 'ItemSlot_C_Set_Data::Data' has a wrong offset!");

// Function ItemSlot.ItemSlot_C.ExecuteUbergraph_ItemSlot
// 0x0200 (0x0200 - 0x0000)
struct ItemSlot_C_ExecuteUbergraph_ItemSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UData_Item_C*                           K2Node_CustomEvent_Data;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source_3;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_ComponentBoundEvent_State_3;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source_2;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_ComponentBoundEvent_State_2;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Item_In;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Locked;                         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_ItemState                         K2Node_CustomEvent_State_1;                        // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_True_3;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_True_2;                 // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_True_1;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_True;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_DynamicCast_AsMec;                          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_Item                              K2Node_MakeStruct_Str_Item;                        // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Place;                          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UData_Item_C*                           K2Node_CustomEvent_Data_1;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASoundPath_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Path_Distance;                        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location;                        // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_CustomEvent_State;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_True;                           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source_1;               // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_ComponentBoundEvent_State_1;                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source;                 // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_ComponentBoundEvent_State;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default_1;                           // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Index_2;                              // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Source_2;                             // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_Event_Item_State_2;                         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index_1;                              // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source_1;                             // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_Event_Item_State_1;                         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source;                               // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_Event_Item_State;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSlot_C_ExecuteUbergraph_ItemSlot) == 0x000010, "Wrong alignment on ItemSlot_C_ExecuteUbergraph_ItemSlot");
static_assert(sizeof(ItemSlot_C_ExecuteUbergraph_ItemSlot) == 0x000200, "Wrong size on ItemSlot_C_ExecuteUbergraph_ItemSlot");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, EntryPoint) == 0x000000, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_CustomEvent_Data) == 0x000008, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, Temp_bool_Variable) == 0x000010, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, Temp_byte_Variable) == 0x000011, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, Temp_byte_Variable_1) == 0x000012, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_Source_3) == 0x000018, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_Source_3' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_State_3) == 0x000020, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_State_3' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_Source_2) == 0x000028, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_Source_2' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_State_2) == 0x000030, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_State_2' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_CustomEvent_Item_In) == 0x000050, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_CustomEvent_Item_In' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_CustomEvent_Locked) == 0x000051, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_CustomEvent_Locked' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_CustomEvent_State_1) == 0x000054, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_CustomEvent_State_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_True_3) == 0x00005C, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_True_3' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_BooleanOR_ReturnValue) == 0x00005D, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_True_2) == 0x00005E, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_True_2' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_Not_PreBool_ReturnValue) == 0x00005F, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_True_1) == 0x000060, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_True_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_True) == 0x000061, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_True' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, Temp_bool_Variable_1) == 0x000062, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_GetPlayerPawn_ReturnValue) == 0x000068, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_DynamicCast_AsMec) == 0x000070, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_DynamicCast_AsMec' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_MakeStruct_Str_Item) == 0x000080, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_MakeStruct_Str_Item' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000090, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_CustomEvent_Place) == 0x0000A8, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_CustomEvent_Place' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_CustomEvent_Data_1) == 0x0000B0, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_CustomEvent_Data_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Select_Default) == 0x0000D0, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000140, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_FinishSpawningActor_ReturnValue) == 0x000148, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_Get_Path_Distance) == 0x000150, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_Get_Path_Distance' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_Get_Path_Location) == 0x000158, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_Get_Path_Location' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000170, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_CustomEvent_State) == 0x000178, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_CustomEvent_True) == 0x000180, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_CustomEvent_True' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000181, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_Source_1) == 0x000188, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_Source_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_State_1) == 0x000190, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_State_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_BooleanAND_ReturnValue) == 0x000198, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_Source) == 0x0001A0, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_Source' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_ComponentBoundEvent_State) == 0x0001A8, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_ComponentBoundEvent_State' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Select_Default_1) == 0x0001B0, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Event_Index_2) == 0x0001B4, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Event_Index_2' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Event_Source_2) == 0x0001B8, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Event_Source_2' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Event_Item_State_2) == 0x0001C0, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Event_Item_State_2' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Event_Index_1) == 0x0001C8, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Event_Index_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Event_Source_1) == 0x0001D0, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Event_Source_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Event_Item_State_1) == 0x0001D8, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Event_Item_State_1' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Event_Index) == 0x0001E0, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Event_Source) == 0x0001E8, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, K2Node_Event_Item_State) == 0x0001F0, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::K2Node_Event_Item_State' has a wrong offset!");
static_assert(offsetof(ItemSlot_C_ExecuteUbergraph_ItemSlot, CallFunc_HasAuthority_ReturnValue) == 0x0001F8, "Member 'ItemSlot_C_ExecuteUbergraph_ItemSlot::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

}

