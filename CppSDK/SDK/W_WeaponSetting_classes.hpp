#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WeaponSetting

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WeaponSetting.W_WeaponSetting_C
// 0x0140 (0x0410 - 0x02D0)
class UW_WeaponSetting_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_WeaponParameter_C*                   air_precision;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                B_apply;                                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                B_default;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                B_delete;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                B_OVERRIDE;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                B_revert;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                B_spawn;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   body_damage;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   body_stamina;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   Capacity;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   Cost;                                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   exhaust_oscillation;                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   fire_rate;                                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   Handling;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   head_damage;                                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   head_stamina;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   offset_horizontal;                                 // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   offset_vertical;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   oscillation_reactivity;                            // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   precision_reactivity;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   recoil_elevation;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   recoil_interp;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   recoil_reactivity;                                 // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   recoil_recover;                                    // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   recoil_spread;                                     // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   run_oscillation;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   run_precision;                                     // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   shake_intensity;                                   // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   shot_oscillation;                                  // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   sprint_recover;                                    // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   stand_oscillation;                                 // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   stand_precision;                                   // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   Stun;                                              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TitleWeapon;                                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   walk_oscillation;                                  // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   walk_precision;                                    // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AMec_C*                                 Mec_Ref;                                           // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UData_Gun_C*                            Process_Data;                                      // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UData_Gun_C*                            Default_Data;                                      // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void Apply();
	void BndEvt__W_WeaponSetting_B_apply_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_WeaponSetting_B_default_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_WeaponSetting_B_delete_K2Node_ComponentBoundEvent_4_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_WeaponSetting_B_OVERRIDE_K2Node_ComponentBoundEvent_8_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_WeaponSetting_B_revert_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_WeaponSetting_B_spawn_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_W_WeaponSetting(int32 EntryPoint);
	void Get_Settings(class UData_Gun_C* Data, struct FStr_GunSettings* Settings);
	void Override();
	void Refresh_Interface();
	void Set_Default();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WeaponSetting_C">();
	}
	static class UW_WeaponSetting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WeaponSetting_C>();
	}
};
static_assert(alignof(UW_WeaponSetting_C) == 0x000008, "Wrong alignment on UW_WeaponSetting_C");
static_assert(sizeof(UW_WeaponSetting_C) == 0x000410, "Wrong size on UW_WeaponSetting_C");
static_assert(offsetof(UW_WeaponSetting_C, UberGraphFrame) == 0x0002D0, "Member 'UW_WeaponSetting_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, air_precision) == 0x0002D8, "Member 'UW_WeaponSetting_C::air_precision' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, B_apply) == 0x0002E0, "Member 'UW_WeaponSetting_C::B_apply' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, B_default) == 0x0002E8, "Member 'UW_WeaponSetting_C::B_default' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, B_delete) == 0x0002F0, "Member 'UW_WeaponSetting_C::B_delete' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, B_OVERRIDE) == 0x0002F8, "Member 'UW_WeaponSetting_C::B_OVERRIDE' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, B_revert) == 0x000300, "Member 'UW_WeaponSetting_C::B_revert' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, B_spawn) == 0x000308, "Member 'UW_WeaponSetting_C::B_spawn' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, body_damage) == 0x000310, "Member 'UW_WeaponSetting_C::body_damage' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, body_stamina) == 0x000318, "Member 'UW_WeaponSetting_C::body_stamina' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, Capacity) == 0x000320, "Member 'UW_WeaponSetting_C::Capacity' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, Cost) == 0x000328, "Member 'UW_WeaponSetting_C::Cost' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, exhaust_oscillation) == 0x000330, "Member 'UW_WeaponSetting_C::exhaust_oscillation' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, fire_rate) == 0x000338, "Member 'UW_WeaponSetting_C::fire_rate' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, Handling) == 0x000340, "Member 'UW_WeaponSetting_C::Handling' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, head_damage) == 0x000348, "Member 'UW_WeaponSetting_C::head_damage' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, head_stamina) == 0x000350, "Member 'UW_WeaponSetting_C::head_stamina' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, offset_horizontal) == 0x000358, "Member 'UW_WeaponSetting_C::offset_horizontal' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, offset_vertical) == 0x000360, "Member 'UW_WeaponSetting_C::offset_vertical' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, oscillation_reactivity) == 0x000368, "Member 'UW_WeaponSetting_C::oscillation_reactivity' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, precision_reactivity) == 0x000370, "Member 'UW_WeaponSetting_C::precision_reactivity' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, recoil_elevation) == 0x000378, "Member 'UW_WeaponSetting_C::recoil_elevation' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, recoil_interp) == 0x000380, "Member 'UW_WeaponSetting_C::recoil_interp' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, recoil_reactivity) == 0x000388, "Member 'UW_WeaponSetting_C::recoil_reactivity' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, recoil_recover) == 0x000390, "Member 'UW_WeaponSetting_C::recoil_recover' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, recoil_spread) == 0x000398, "Member 'UW_WeaponSetting_C::recoil_spread' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, run_oscillation) == 0x0003A0, "Member 'UW_WeaponSetting_C::run_oscillation' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, run_precision) == 0x0003A8, "Member 'UW_WeaponSetting_C::run_precision' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, shake_intensity) == 0x0003B0, "Member 'UW_WeaponSetting_C::shake_intensity' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, shot_oscillation) == 0x0003B8, "Member 'UW_WeaponSetting_C::shot_oscillation' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, sprint_recover) == 0x0003C0, "Member 'UW_WeaponSetting_C::sprint_recover' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, stand_oscillation) == 0x0003C8, "Member 'UW_WeaponSetting_C::stand_oscillation' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, stand_precision) == 0x0003D0, "Member 'UW_WeaponSetting_C::stand_precision' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, Stun) == 0x0003D8, "Member 'UW_WeaponSetting_C::Stun' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, TitleWeapon) == 0x0003E0, "Member 'UW_WeaponSetting_C::TitleWeapon' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, walk_oscillation) == 0x0003E8, "Member 'UW_WeaponSetting_C::walk_oscillation' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, walk_precision) == 0x0003F0, "Member 'UW_WeaponSetting_C::walk_precision' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, Mec_Ref) == 0x0003F8, "Member 'UW_WeaponSetting_C::Mec_Ref' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, Process_Data) == 0x000400, "Member 'UW_WeaponSetting_C::Process_Data' has a wrong offset!");
static_assert(offsetof(UW_WeaponSetting_C, Default_Data) == 0x000408, "Member 'UW_WeaponSetting_C::Default_Data' has a wrong offset!");

}

