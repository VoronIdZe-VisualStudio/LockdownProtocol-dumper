#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_NameLine

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_NameLine.W_NameLine_C.ExecuteUbergraph_W_NameLine
// 0x00D0 (0x00D0 - 0x0000)
struct W_NameLine_C_ExecuteUbergraph_W_NameLine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta__;                                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Name;                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Detail;                         // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Width;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A0(0x0010)()
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_NameLine_C_ExecuteUbergraph_W_NameLine) == 0x000008, "Wrong alignment on W_NameLine_C_ExecuteUbergraph_W_NameLine");
static_assert(sizeof(W_NameLine_C_ExecuteUbergraph_W_NameLine) == 0x0000D0, "Wrong size on W_NameLine_C_ExecuteUbergraph_W_NameLine");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, EntryPoint) == 0x000000, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, K2Node_Event_MyGeometry) == 0x000004, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_Delta__) == 0x000040, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_Delta__' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, K2Node_CustomEvent_Name) == 0x000050, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, K2Node_CustomEvent_Detail) == 0x000060, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::K2Node_CustomEvent_Detail' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, K2Node_CustomEvent_Width) == 0x000070, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::K2Node_CustomEvent_Width' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_SelectFloat_ReturnValue_1) == 0x000080, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_FInterpTo_ReturnValue) == 0x000088, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A0, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_SelectFloat_ReturnValue_2) == 0x0000B0, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_Lerp_ReturnValue) == 0x0000C0, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x0000C8, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_ExecuteUbergraph_W_NameLine, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0000CC, "Member 'W_NameLine_C_ExecuteUbergraph_W_NameLine::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_NameLine.W_NameLine_C.Initiate
// 0x0028 (0x0028 - 0x0000)
struct W_NameLine_C_Initiate final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Detail;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Width_0;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_NameLine_C_Initiate) == 0x000008, "Wrong alignment on W_NameLine_C_Initiate");
static_assert(sizeof(W_NameLine_C_Initiate) == 0x000028, "Wrong size on W_NameLine_C_Initiate");
static_assert(offsetof(W_NameLine_C_Initiate, Name_0) == 0x000000, "Member 'W_NameLine_C_Initiate::Name_0' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_Initiate, Detail) == 0x000010, "Member 'W_NameLine_C_Initiate::Detail' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_Initiate, Width_0) == 0x000020, "Member 'W_NameLine_C_Initiate::Width_0' has a wrong offset!");

// Function W_NameLine.W_NameLine_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_NameLine_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_NameLine_C_Tick) == 0x000004, "Wrong alignment on W_NameLine_C_Tick");
static_assert(sizeof(W_NameLine_C_Tick) == 0x00003C, "Wrong size on W_NameLine_C_Tick");
static_assert(offsetof(W_NameLine_C_Tick, MyGeometry) == 0x000000, "Member 'W_NameLine_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_NameLine_C_Tick, InDeltaTime) == 0x000038, "Member 'W_NameLine_C_Tick::InDeltaTime' has a wrong offset!");

}

