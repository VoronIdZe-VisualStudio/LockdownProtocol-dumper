#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RoomCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass RoomCamera.RoomCamera_C
// 0x0030 (0x02D8 - 0x02A8)
class ARoomCamera_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_Camera;                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               CameraCapture;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               M_Light;                                           // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Exposure;                                          // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_RoomCamera(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Set_Texture(class UTextureRenderTarget2D* Texture);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RoomCamera_C">();
	}
	static class ARoomCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARoomCamera_C>();
	}
};
static_assert(alignof(ARoomCamera_C) == 0x000008, "Wrong alignment on ARoomCamera_C");
static_assert(sizeof(ARoomCamera_C) == 0x0002D8, "Wrong size on ARoomCamera_C");
static_assert(offsetof(ARoomCamera_C, UberGraphFrame) == 0x0002A8, "Member 'ARoomCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ARoomCamera_C, MapMesh_TaskMachine_Camera) == 0x0002B0, "Member 'ARoomCamera_C::MapMesh_TaskMachine_Camera' has a wrong offset!");
static_assert(offsetof(ARoomCamera_C, Root) == 0x0002B8, "Member 'ARoomCamera_C::Root' has a wrong offset!");
static_assert(offsetof(ARoomCamera_C, CameraCapture) == 0x0002C0, "Member 'ARoomCamera_C::CameraCapture' has a wrong offset!");
static_assert(offsetof(ARoomCamera_C, M_Light) == 0x0002C8, "Member 'ARoomCamera_C::M_Light' has a wrong offset!");
static_assert(offsetof(ARoomCamera_C, Exposure) == 0x0002D0, "Member 'ARoomCamera_C::Exposure' has a wrong offset!");

}

