#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TaskInfo

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_TaskInfo.W_TaskInfo_C.ExecuteUbergraph_W_TaskInfo
// 0x0048 (0x0048 - 0x0000)
struct W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_TaskFromList_C*                      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATask_C*>                        K2Node_CustomEvent_Tasks;                          // 0x0020(0x0010)(ConstParm, ReferenceParm)
	class ATask_C*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo) == 0x000008, "Wrong alignment on W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo");
static_assert(sizeof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo) == 0x000048, "Wrong size on W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, EntryPoint) == 0x000000, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, CallFunc_Create_ReturnValue) == 0x000010, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, K2Node_Event_IsDesignTime) == 0x000018, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, K2Node_CustomEvent_Tasks) == 0x000020, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::K2Node_CustomEvent_Tasks' has a wrong offset!");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'W_TaskInfo_C_ExecuteUbergraph_W_TaskInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_TaskInfo.W_TaskInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_TaskInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TaskInfo_C_PreConstruct) == 0x000001, "Wrong alignment on W_TaskInfo_C_PreConstruct");
static_assert(sizeof(W_TaskInfo_C_PreConstruct) == 0x000001, "Wrong size on W_TaskInfo_C_PreConstruct");
static_assert(offsetof(W_TaskInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_TaskInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_TaskInfo.W_TaskInfo_C.Random Event
// 0x0010 (0x0010 - 0x0000)
struct W_TaskInfo_C_Random_Event final
{
public:
	TArray<class ATask_C*>                        Tasks;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_TaskInfo_C_Random_Event) == 0x000008, "Wrong alignment on W_TaskInfo_C_Random_Event");
static_assert(sizeof(W_TaskInfo_C_Random_Event) == 0x000010, "Wrong size on W_TaskInfo_C_Random_Event");
static_assert(offsetof(W_TaskInfo_C_Random_Event, Tasks) == 0x000000, "Member 'W_TaskInfo_C_Random_Event::Tasks' has a wrong offset!");

}

