#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Rules

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Rules.W_Rules_C
// 0x00A8 (0x0378 - 0x02D0)
class UW_Rules_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                B_apply;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                B_revert;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   batteries;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   clean_speed;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   Containers;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   fuze_rab;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   min_bottles;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   min_package;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   min_pcs;                                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   min_vents;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   plants_count;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   screwdrivers;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   session_time;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   task_count;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TitleWeapon;                                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_WeaponParameter_C*                   Weapons;                                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AMec_C*                                 Mec_Ref;                                           // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UData_Gun_C*                            Process_Data;                                      // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UData_Gun_C*                            Default_Data;                                      // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_C*                                  GM_Ref;                                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Apply();
	void BndEvt__W_WeaponSetting_B_apply_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_WeaponSetting_B_revert_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_W_Rules(int32 EntryPoint);
	void Get_Settings(class UData_Gun_C* Data, struct FStr_GunSettings* Settings);
	void Refresh_Interface();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Rules_C">();
	}
	static class UW_Rules_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Rules_C>();
	}
};
static_assert(alignof(UW_Rules_C) == 0x000008, "Wrong alignment on UW_Rules_C");
static_assert(sizeof(UW_Rules_C) == 0x000378, "Wrong size on UW_Rules_C");
static_assert(offsetof(UW_Rules_C, UberGraphFrame) == 0x0002D0, "Member 'UW_Rules_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, B_apply) == 0x0002D8, "Member 'UW_Rules_C::B_apply' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, B_revert) == 0x0002E0, "Member 'UW_Rules_C::B_revert' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, batteries) == 0x0002E8, "Member 'UW_Rules_C::batteries' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, clean_speed) == 0x0002F0, "Member 'UW_Rules_C::clean_speed' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, Containers) == 0x0002F8, "Member 'UW_Rules_C::Containers' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, fuze_rab) == 0x000300, "Member 'UW_Rules_C::fuze_rab' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, min_bottles) == 0x000308, "Member 'UW_Rules_C::min_bottles' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, min_package) == 0x000310, "Member 'UW_Rules_C::min_package' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, min_pcs) == 0x000318, "Member 'UW_Rules_C::min_pcs' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, min_vents) == 0x000320, "Member 'UW_Rules_C::min_vents' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, plants_count) == 0x000328, "Member 'UW_Rules_C::plants_count' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, screwdrivers) == 0x000330, "Member 'UW_Rules_C::screwdrivers' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, session_time) == 0x000338, "Member 'UW_Rules_C::session_time' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, task_count) == 0x000340, "Member 'UW_Rules_C::task_count' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, TitleWeapon) == 0x000348, "Member 'UW_Rules_C::TitleWeapon' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, Weapons) == 0x000350, "Member 'UW_Rules_C::Weapons' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, Mec_Ref) == 0x000358, "Member 'UW_Rules_C::Mec_Ref' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, Process_Data) == 0x000360, "Member 'UW_Rules_C::Process_Data' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, Default_Data) == 0x000368, "Member 'UW_Rules_C::Default_Data' has a wrong offset!");
static_assert(offsetof(UW_Rules_C, GM_Ref) == 0x000370, "Member 'UW_Rules_C::GM_Ref' has a wrong offset!");

}

