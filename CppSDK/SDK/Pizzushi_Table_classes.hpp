#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Pizzushi_Table

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Pizzushi_Table.Pizzushi_Table_C
// 0x00B0 (0x0358 - 0x02A8)
class APizzushi_Table_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cube;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube1;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Rice_1;                                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Fish_2;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Topping_2;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Title_2;                                           // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Rice_2;                                            // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Title_1;                                           // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Fish_1;                                            // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Topping_1;                                         // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube2;                                             // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CA_Pizzushi;                                       // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Rotating_Base;                                     // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Table_Index;                                       // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rice_Type;                                         // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Fish_Type;                                         // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Topping_Type;                                      // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItemSlot_C*                            Pizzushi;                                          // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Request_State;                                     // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              Finish;                                            // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Finished;                                          // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void All_Update_Text(int32 Index_0, int32 Rice, int32 Fish, int32 Topping, int32 Request);
	void BndEvt__Pizzushi_Table_Pizzushi_K2Node_ComponentBoundEvent_0_Place_Item__DelegateSignature();
	void BndEvt__Pizzushi_Table_Pizzushi_K2Node_ComponentBoundEvent_1_Take_Item__DelegateSignature();
	void Clear();
	void ExecuteUbergraph_Pizzushi_Table(int32 EntryPoint);
	void Generate_Request();
	void Get_Key(class AActor** Key);
	void Get_Name(class AMec_C* Mec, class FString* Name_0);
	void Local_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Net_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Other_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Pizzushi_Table_C">();
	}
	static class APizzushi_Table_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APizzushi_Table_C>();
	}
};
static_assert(alignof(APizzushi_Table_C) == 0x000008, "Wrong alignment on APizzushi_Table_C");
static_assert(sizeof(APizzushi_Table_C) == 0x000358, "Wrong size on APizzushi_Table_C");
static_assert(offsetof(APizzushi_Table_C, UberGraphFrame) == 0x0002A8, "Member 'APizzushi_Table_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Cube) == 0x0002B0, "Member 'APizzushi_Table_C::Cube' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Cube1) == 0x0002B8, "Member 'APizzushi_Table_C::Cube1' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Rice_1) == 0x0002C0, "Member 'APizzushi_Table_C::Rice_1' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Fish_2) == 0x0002C8, "Member 'APizzushi_Table_C::Fish_2' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Topping_2) == 0x0002D0, "Member 'APizzushi_Table_C::Topping_2' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Title_2) == 0x0002D8, "Member 'APizzushi_Table_C::Title_2' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Rice_2) == 0x0002E0, "Member 'APizzushi_Table_C::Rice_2' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Title_1) == 0x0002E8, "Member 'APizzushi_Table_C::Title_1' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Fish_1) == 0x0002F0, "Member 'APizzushi_Table_C::Fish_1' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Topping_1) == 0x0002F8, "Member 'APizzushi_Table_C::Topping_1' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Cube2) == 0x000300, "Member 'APizzushi_Table_C::Cube2' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, CA_Pizzushi) == 0x000308, "Member 'APizzushi_Table_C::CA_Pizzushi' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Rotating_Base) == 0x000310, "Member 'APizzushi_Table_C::Rotating_Base' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Root) == 0x000318, "Member 'APizzushi_Table_C::Root' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Table_Index) == 0x000320, "Member 'APizzushi_Table_C::Table_Index' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Rice_Type) == 0x000324, "Member 'APizzushi_Table_C::Rice_Type' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Fish_Type) == 0x000328, "Member 'APizzushi_Table_C::Fish_Type' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Topping_Type) == 0x00032C, "Member 'APizzushi_Table_C::Topping_Type' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Pizzushi) == 0x000330, "Member 'APizzushi_Table_C::Pizzushi' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Request_State) == 0x000338, "Member 'APizzushi_Table_C::Request_State' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Finish) == 0x000340, "Member 'APizzushi_Table_C::Finish' has a wrong offset!");
static_assert(offsetof(APizzushi_Table_C, Finished) == 0x000350, "Member 'APizzushi_Table_C::Finished' has a wrong offset!");

}

