#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Slider

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_Slider.W_Slider_C.Range Relative
// 0x0028 (0x0028 - 0x0000)
struct W_Slider_C_Range_Relative final
{
public:
	double                                        A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_Range_Relative) == 0x000008, "Wrong alignment on W_Slider_C_Range_Relative");
static_assert(sizeof(W_Slider_C_Range_Relative) == 0x000028, "Wrong size on W_Slider_C_Range_Relative");
static_assert(offsetof(W_Slider_C_Range_Relative, A) == 0x000000, "Member 'W_Slider_C_Range_Relative::A' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Range_Relative, ReturnValue) == 0x000008, "Member 'W_Slider_C_Range_Relative::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Range_Relative, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'W_Slider_C_Range_Relative::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Range_Relative, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'W_Slider_C_Range_Relative::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Range_Relative, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'W_Slider_C_Range_Relative::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function W_Slider.W_Slider_C.Set SpinSettings
// 0x000C (0x000C - 0x0000)
struct W_Slider_C_Set_SpinSettings final
{
public:
	int32                                         CallFunc_GetMinFractionalDigits_ReturnValue;       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinValue_NewValue_ImplicitCast;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxValue_NewValue_ImplicitCast;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_Set_SpinSettings) == 0x000004, "Wrong alignment on W_Slider_C_Set_SpinSettings");
static_assert(sizeof(W_Slider_C_Set_SpinSettings) == 0x00000C, "Wrong size on W_Slider_C_Set_SpinSettings");
static_assert(offsetof(W_Slider_C_Set_SpinSettings, CallFunc_GetMinFractionalDigits_ReturnValue) == 0x000000, "Member 'W_Slider_C_Set_SpinSettings::CallFunc_GetMinFractionalDigits_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Set_SpinSettings, CallFunc_SetMinValue_NewValue_ImplicitCast) == 0x000004, "Member 'W_Slider_C_Set_SpinSettings::CallFunc_SetMinValue_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Set_SpinSettings, CallFunc_SetMaxValue_NewValue_ImplicitCast) == 0x000008, "Member 'W_Slider_C_Set_SpinSettings::CallFunc_SetMaxValue_NewValue_ImplicitCast' has a wrong offset!");

// Function W_Slider.W_Slider_C.Round Value
// 0x0088 (0x0088 - 0x0000)
struct W_Slider_C_Round_Value final
{
public:
	double                                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_Round_Value) == 0x000008, "Wrong alignment on W_Slider_C_Round_Value");
static_assert(sizeof(W_Slider_C_Round_Value) == 0x000088, "Wrong size on W_Slider_C_Round_Value");
static_assert(offsetof(W_Slider_C_Round_Value, Result) == 0x000000, "Member 'W_Slider_C_Round_Value::Result' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, Temp_real_Variable) == 0x000008, "Member 'W_Slider_C_Round_Value::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, Temp_real_Variable_1) == 0x000010, "Member 'W_Slider_C_Round_Value::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, Temp_real_Variable_2) == 0x000018, "Member 'W_Slider_C_Round_Value::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, Temp_real_Variable_3) == 0x000020, "Member 'W_Slider_C_Round_Value::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, Temp_int_Variable) == 0x000028, "Member 'W_Slider_C_Round_Value::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, Temp_real_Variable_4) == 0x000030, "Member 'W_Slider_C_Round_Value::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, Temp_real_Variable_5) == 0x000038, "Member 'W_Slider_C_Round_Value::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, Temp_real_Variable_6) == 0x000040, "Member 'W_Slider_C_Round_Value::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, Temp_real_Variable_7) == 0x000048, "Member 'W_Slider_C_Round_Value::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, Temp_int_Variable_1) == 0x000050, "Member 'W_Slider_C_Round_Value::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, K2Node_Select_Default) == 0x000058, "Member 'W_Slider_C_Round_Value::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, K2Node_Select_Default_1) == 0x000060, "Member 'W_Slider_C_Round_Value::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'W_Slider_C_Round_Value::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, CallFunc_Round_ReturnValue) == 0x000070, "Member 'W_Slider_C_Round_Value::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'W_Slider_C_Round_Value::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Round_Value, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'W_Slider_C_Round_Value::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function W_Slider.W_Slider_C.Update Text
// 0x0020 (0x0020 - 0x0000)
struct W_Slider_C_Update_Text final
{
public:
	class FString                                 CallFunc_Text_Round__;                             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0010)()
};
static_assert(alignof(W_Slider_C_Update_Text) == 0x000008, "Wrong alignment on W_Slider_C_Update_Text");
static_assert(sizeof(W_Slider_C_Update_Text) == 0x000020, "Wrong size on W_Slider_C_Update_Text");
static_assert(offsetof(W_Slider_C_Update_Text, CallFunc_Text_Round__) == 0x000000, "Member 'W_Slider_C_Update_Text::CallFunc_Text_Round__' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Update_Text, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'W_Slider_C_Update_Text::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_Slider.W_Slider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Slider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_PreConstruct) == 0x000001, "Wrong alignment on W_Slider_C_PreConstruct");
static_assert(sizeof(W_Slider_C_PreConstruct) == 0x000001, "Wrong size on W_Slider_C_PreConstruct");
static_assert(offsetof(W_Slider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Slider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Slider.W_Slider_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Slider_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_Tick) == 0x000004, "Wrong alignment on W_Slider_C_Tick");
static_assert(sizeof(W_Slider_C_Tick) == 0x00003C, "Wrong size on W_Slider_C_Tick");
static_assert(offsetof(W_Slider_C_Tick, MyGeometry) == 0x000000, "Member 'W_Slider_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Slider_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_Slider.W_Slider_C.BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(sizeof(W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature");
static_assert(offsetof(W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_0_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function W_Slider.W_Slider_C.BndEvt__W_Slider_W_Trigger_Jauge_K2Node_ComponentBoundEvent_6_Hold Tick__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Slider_C_BndEvt__W_Slider_W_Trigger_Jauge_K2Node_ComponentBoundEvent_6_Hold_Tick__DelegateSignature final
{
public:
	struct FVector2D                              Mouse_Delta;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_BndEvt__W_Slider_W_Trigger_Jauge_K2Node_ComponentBoundEvent_6_Hold_Tick__DelegateSignature) == 0x000008, "Wrong alignment on W_Slider_C_BndEvt__W_Slider_W_Trigger_Jauge_K2Node_ComponentBoundEvent_6_Hold_Tick__DelegateSignature");
static_assert(sizeof(W_Slider_C_BndEvt__W_Slider_W_Trigger_Jauge_K2Node_ComponentBoundEvent_6_Hold_Tick__DelegateSignature) == 0x000010, "Wrong size on W_Slider_C_BndEvt__W_Slider_W_Trigger_Jauge_K2Node_ComponentBoundEvent_6_Hold_Tick__DelegateSignature");
static_assert(offsetof(W_Slider_C_BndEvt__W_Slider_W_Trigger_Jauge_K2Node_ComponentBoundEvent_6_Hold_Tick__DelegateSignature, Mouse_Delta) == 0x000000, "Member 'W_Slider_C_BndEvt__W_Slider_W_Trigger_Jauge_K2Node_ComponentBoundEvent_6_Hold_Tick__DelegateSignature::Mouse_Delta' has a wrong offset!");

// Function W_Slider.W_Slider_C.BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(sizeof(W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature");
static_assert(offsetof(W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'W_Slider_C_BndEvt__W_Slider_SpinBox_K2Node_ComponentBoundEvent_7_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// Function W_Slider.W_Slider_C.Set Value
// 0x0008 (0x0008 - 0x0000)
struct W_Slider_C_Set_Value final
{
public:
	double                                        Value_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_Set_Value) == 0x000008, "Wrong alignment on W_Slider_C_Set_Value");
static_assert(sizeof(W_Slider_C_Set_Value) == 0x000008, "Wrong size on W_Slider_C_Set_Value");
static_assert(offsetof(W_Slider_C_Set_Value, Value_0) == 0x000000, "Member 'W_Slider_C_Set_Value::Value_0' has a wrong offset!");

// Function W_Slider.W_Slider_C.ExecuteUbergraph_W_Slider
// 0x02C8 (0x02C8 - 0x0000)
struct W_Slider_C_ExecuteUbergraph_W_Slider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_Menu_C*>                      CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_Menu_C*                              CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue_1;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Mouse_Delta;            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_InValue;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Delta__;                                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Round_Value_Result;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_Value_Result_1;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Range___;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Range_Relative_ReturnValue;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_Value_Result_2;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_Value_Result_3;                     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_Value_Result_4;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_Value_Result_5;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_Value_Result_6;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_Value_Result_7;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Range_Relative_ReturnValue_1;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta___1;                                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta___2;                                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_Value_Result_8;                     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Range____1;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x01C8(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Value;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_Value_Result_9;                     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Range____2;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_Value_Result_10;                    // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Value_ImplicitCast;             // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_2; // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_NewValue_ImplicitCast;           // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast_1; // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_NewValue_ImplicitCast_1;         // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_ExecuteUbergraph_W_Slider) == 0x000008, "Wrong alignment on W_Slider_C_ExecuteUbergraph_W_Slider");
static_assert(sizeof(W_Slider_C_ExecuteUbergraph_W_Slider) == 0x0002C8, "Wrong size on W_Slider_C_ExecuteUbergraph_W_Slider");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, EntryPoint) == 0x000000, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000048, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000050, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Array_Get_Item) == 0x000060, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Lerp_ReturnValue) == 0x000068, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_ComponentBoundEvent_InValue_1) == 0x000070, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_ComponentBoundEvent_InValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_ComponentBoundEvent_CommitMethod) == 0x000074, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Lerp_ReturnValue_1) == 0x000078, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Lerp_ReturnValue_2) == 0x000080, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_ComponentBoundEvent_Mouse_Delta) == 0x000088, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_ComponentBoundEvent_Mouse_Delta' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_BreakVector2D_X) == 0x000098, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_BreakVector2D_Y) == 0x0000A0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_ComponentBoundEvent_InValue) == 0x0000A8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_ComponentBoundEvent_InValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Delta__) == 0x0000B0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Delta__' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x0000B8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result) == 0x0000C0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result_1) == 0x0000C8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Lerp_ReturnValue_3) == 0x0000D0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Map_Range___) == 0x0000D8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Map_Range___' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_FInterpTo_ReturnValue) == 0x0000E0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Range_Relative_ReturnValue) == 0x0000E8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Range_Relative_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result_2) == 0x0000F0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result_2' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result_3) == 0x0000F8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result_3' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result_4) == 0x000100, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result_4' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result_5) == 0x000108, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result_5' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result_6) == 0x000110, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result_6' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000118, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Abs_ReturnValue) == 0x000120, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result_7) == 0x000128, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result_7' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000130, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000138, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Range_Relative_ReturnValue_1) == 0x000148, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Range_Relative_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Delta___1) == 0x000150, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Delta___1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SelectFloat_ReturnValue) == 0x000158, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000160, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SelectFloat_ReturnValue_1) == 0x000168, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_FInterpTo_ReturnValue_1) == 0x000170, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Delta___2) == 0x000178, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Delta___2' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SelectFloat_ReturnValue_2) == 0x000180, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SelectFloat_ReturnValue_3) == 0x000190, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000198, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_FInterpTo_ReturnValue_2) == 0x0001A0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0001A8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result_8) == 0x0001B0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result_8' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Lerp_ReturnValue_4) == 0x0001B8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Map_Range____1) == 0x0001C0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Map_Range____1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_GetCachedGeometry_ReturnValue) == 0x0001C8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_GetLocalSize_ReturnValue) == 0x000200, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_BreakVector2D_X_1) == 0x000210, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_BreakVector2D_Y_1) == 0x000218, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000220, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_CustomEvent_Value) == 0x000228, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result_9) == 0x000230, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result_9' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SelectFloat_ReturnValue_4) == 0x000238, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000240, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SelectFloat_ReturnValue_5) == 0x000248, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000250, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Map_Range____2) == 0x000258, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Map_Range____2' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000260, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000268, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_FClamp_ReturnValue) == 0x000270, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Round_Value_Result_10) == 0x000278, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Round_Value_Result_10' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_FClamp_ReturnValue_1) == 0x000280, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000288, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_VariableSet_Value_ImplicitCast) == 0x000290, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_VariableSet_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x000298, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_2) == 0x00029C, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_FInterpTo_Current_ImplicitCast) == 0x0002A0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0002A8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x0002AC, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetValue_NewValue_ImplicitCast) == 0x0002B0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetValue_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast_1) == 0x0002B4, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x0002B8, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0002BC, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetValue_NewValue_ImplicitCast_1) == 0x0002C0, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetValue_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0002C4, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

}

