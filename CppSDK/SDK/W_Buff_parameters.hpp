#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Buff

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_ConsumableType_structs.hpp"
#include "E_ItemType_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_Buff.W_Buff_C.Color Level
// 0x0078 (0x0078 - 0x0000)
struct W_Buff_C_Color_Level final
{
public:
	struct FLinearColor                           _2;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           _1;                                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           One;                                               // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Two;                                               // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Color_Level) == 0x000004, "Wrong alignment on W_Buff_C_Color_Level");
static_assert(sizeof(W_Buff_C_Color_Level) == 0x000078, "Wrong size on W_Buff_C_Color_Level");
static_assert(offsetof(W_Buff_C_Color_Level, _2) == 0x000000, "Member 'W_Buff_C_Color_Level::_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Level, _1) == 0x000010, "Member 'W_Buff_C_Color_Level::_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Level, One) == 0x000020, "Member 'W_Buff_C_Color_Level::One' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Level, Two) == 0x000030, "Member 'W_Buff_C_Color_Level::Two' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Level, ReturnValue) == 0x000040, "Member 'W_Buff_C_Color_Level::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Level, Temp_int_Variable) == 0x000050, "Member 'W_Buff_C_Color_Level::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Level, Temp_struct_Variable) == 0x000054, "Member 'W_Buff_C_Color_Level::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Level, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'W_Buff_C_Color_Level::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Level, K2Node_Select_Default) == 0x000068, "Member 'W_Buff_C_Color_Level::K2Node_Select_Default' has a wrong offset!");

// Function W_Buff.W_Buff_C.Color State
// 0x00E4 (0x00E4 - 0x0000)
struct W_Buff_C_Color_State final
{
public:
	struct FLinearColor                           Heal;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Speed;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Armor;                                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Sneak;                                             // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemType                                    Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Color_State) == 0x000004, "Wrong alignment on W_Buff_C_Color_State");
static_assert(sizeof(W_Buff_C_Color_State) == 0x0000E4, "Wrong size on W_Buff_C_Color_State");
static_assert(offsetof(W_Buff_C_Color_State, Heal) == 0x000000, "Member 'W_Buff_C_Color_State::Heal' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Speed) == 0x000010, "Member 'W_Buff_C_Color_State::Speed' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Armor) == 0x000020, "Member 'W_Buff_C_Color_State::Armor' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Sneak) == 0x000030, "Member 'W_Buff_C_Color_State::Sneak' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Value) == 0x000040, "Member 'W_Buff_C_Color_State::Value' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Temp_byte_Variable) == 0x000050, "Member 'W_Buff_C_Color_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Temp_struct_Variable) == 0x000054, "Member 'W_Buff_C_Color_State::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Temp_struct_Variable_1) == 0x000064, "Member 'W_Buff_C_Color_State::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Temp_struct_Variable_2) == 0x000074, "Member 'W_Buff_C_Color_State::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Temp_struct_Variable_3) == 0x000084, "Member 'W_Buff_C_Color_State::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Temp_struct_Variable_4) == 0x000094, "Member 'W_Buff_C_Color_State::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Temp_struct_Variable_5) == 0x0000A4, "Member 'W_Buff_C_Color_State::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Temp_struct_Variable_6) == 0x0000B4, "Member 'W_Buff_C_Color_State::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, Temp_struct_Variable_7) == 0x0000C4, "Member 'W_Buff_C_Color_State::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_State, K2Node_Select_Default) == 0x0000D4, "Member 'W_Buff_C_Color_State::K2Node_Select_Default' has a wrong offset!");

// Function W_Buff.W_Buff_C.Color Type
// 0x0064 (0x0064 - 0x0000)
struct W_Buff_C_Color_Type final
{
public:
	struct FLinearColor                           Seringe;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Bottle;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Grenade;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ConsumableType                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Color_Type) == 0x000004, "Wrong alignment on W_Buff_C_Color_Type");
static_assert(sizeof(W_Buff_C_Color_Type) == 0x000064, "Wrong size on W_Buff_C_Color_Type");
static_assert(offsetof(W_Buff_C_Color_Type, Seringe) == 0x000000, "Member 'W_Buff_C_Color_Type::Seringe' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Type, Bottle) == 0x000010, "Member 'W_Buff_C_Color_Type::Bottle' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Type, Grenade) == 0x000020, "Member 'W_Buff_C_Color_Type::Grenade' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Type, Value) == 0x000030, "Member 'W_Buff_C_Color_Type::Value' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Type, Temp_byte_Variable) == 0x000040, "Member 'W_Buff_C_Color_Type::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Type, Temp_struct_Variable) == 0x000044, "Member 'W_Buff_C_Color_Type::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Color_Type, K2Node_Select_Default) == 0x000054, "Member 'W_Buff_C_Color_Type::K2Node_Select_Default' has a wrong offset!");

// Function W_Buff.W_Buff_C.ExecuteUbergraph_W_Buff
// 0x0178 (0x0178 - 0x0000)
struct W_Buff_C_ExecuteUbergraph_W_Buff final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0034(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Elevation;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Select_Name_Value;                        // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Delta__;                                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta___1;                                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Delta___2;                                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta___3;                                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta___4;                                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta___5;                                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_2;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_3;         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_Current_ImplicitCast;  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_ExecuteUbergraph_W_Buff) == 0x000008, "Wrong alignment on W_Buff_C_ExecuteUbergraph_W_Buff");
static_assert(sizeof(W_Buff_C_ExecuteUbergraph_W_Buff) == 0x000178, "Wrong size on W_Buff_C_ExecuteUbergraph_W_Buff");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, EntryPoint) == 0x000000, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Multiply_IntInt_ReturnValue) == 0x000004, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, K2Node_Event_MyGeometry) == 0x000034, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, K2Node_Event_InDeltaTime) == 0x00006C, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000070, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Array_Contains_ReturnValue) == 0x000071, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, K2Node_CustomEvent_Elevation) == 0x000074, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::K2Node_CustomEvent_Elevation' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_PlayAnimation_ReturnValue) == 0x000078, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_PlayAnimation_ReturnValue_1) == 0x000080, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Select_Name_Value) == 0x000088, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Select_Name_Value' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_IsValid_ReturnValue_2) == 0x0000A8, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Delta__) == 0x0000B0, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Delta__' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Delta___1) == 0x0000B8, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Delta___1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_GetRenderOpacity_ReturnValue) == 0x0000C0, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Delta___2) == 0x0000C8, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Delta___2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_SelectFloat_ReturnValue) == 0x0000D0, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_IsValid_ReturnValue_3) == 0x0000D8, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_FInterpTo_Constant_ReturnValue) == 0x0000E0, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Delta___3) == 0x0000E8, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Delta___3' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_SelectFloat_ReturnValue_1) == 0x0000F0, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Delta___4) == 0x0000F8, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Delta___4' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Delta___5) == 0x000100, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Delta___5' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000108, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000110, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_BreakVector2D_X) == 0x000118, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_BreakVector2D_Y) == 0x000120, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_FInterpTo_ReturnValue) == 0x000128, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_FInterpTo_ReturnValue_1) == 0x000130, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x000138, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_FInterpTo_Constant_ReturnValue_2) == 0x000140, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_FInterpTo_Constant_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_FInterpTo_Constant_ReturnValue_3) == 0x000148, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_FInterpTo_Constant_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_SelectFloat_ReturnValue_2) == 0x000150, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_MakeVector2D_ReturnValue_1) == 0x000158, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_FInterpTo_Constant_Current_ImplicitCast) == 0x000168, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_FInterpTo_Constant_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Buff_C_ExecuteUbergraph_W_Buff, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000170, "Member 'W_Buff_C_ExecuteUbergraph_W_Buff::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_Buff.W_Buff_C.Name Level
// 0x0080 (0x0080 - 0x0000)
struct W_Buff_C_Name_Level final
{
public:
	class FString                                 _2;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 _1;                                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 One;                                               // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Two;                                               // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Name_Level) == 0x000008, "Wrong alignment on W_Buff_C_Name_Level");
static_assert(sizeof(W_Buff_C_Name_Level) == 0x000080, "Wrong size on W_Buff_C_Name_Level");
static_assert(offsetof(W_Buff_C_Name_Level, _2) == 0x000000, "Member 'W_Buff_C_Name_Level::_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Level, _1) == 0x000010, "Member 'W_Buff_C_Name_Level::_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Level, One) == 0x000020, "Member 'W_Buff_C_Name_Level::One' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Level, Two) == 0x000030, "Member 'W_Buff_C_Name_Level::Two' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Level, ReturnValue) == 0x000040, "Member 'W_Buff_C_Name_Level::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Level, Temp_int_Variable) == 0x000050, "Member 'W_Buff_C_Name_Level::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Level, Temp_string_Variable) == 0x000058, "Member 'W_Buff_C_Name_Level::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Level, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'W_Buff_C_Name_Level::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Level, K2Node_Select_Default) == 0x000070, "Member 'W_Buff_C_Name_Level::K2Node_Select_Default' has a wrong offset!");

// Function W_Buff.W_Buff_C.Name State
// 0x00E8 (0x00E8 - 0x0000)
struct W_Buff_C_Name_State final
{
public:
	class FString                                 Heal;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Speed;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Armor;                                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Sneak;                                             // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	E_ItemType                                    Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Name_State) == 0x000008, "Wrong alignment on W_Buff_C_Name_State");
static_assert(sizeof(W_Buff_C_Name_State) == 0x0000E8, "Wrong size on W_Buff_C_Name_State");
static_assert(offsetof(W_Buff_C_Name_State, Heal) == 0x000000, "Member 'W_Buff_C_Name_State::Heal' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Speed) == 0x000010, "Member 'W_Buff_C_Name_State::Speed' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Armor) == 0x000020, "Member 'W_Buff_C_Name_State::Armor' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Sneak) == 0x000030, "Member 'W_Buff_C_Name_State::Sneak' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Value) == 0x000040, "Member 'W_Buff_C_Name_State::Value' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Temp_byte_Variable) == 0x000050, "Member 'W_Buff_C_Name_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Temp_string_Variable) == 0x000058, "Member 'W_Buff_C_Name_State::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Temp_string_Variable_1) == 0x000068, "Member 'W_Buff_C_Name_State::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Temp_string_Variable_2) == 0x000078, "Member 'W_Buff_C_Name_State::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Temp_string_Variable_3) == 0x000088, "Member 'W_Buff_C_Name_State::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Temp_string_Variable_4) == 0x000098, "Member 'W_Buff_C_Name_State::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Temp_string_Variable_5) == 0x0000A8, "Member 'W_Buff_C_Name_State::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Temp_string_Variable_6) == 0x0000B8, "Member 'W_Buff_C_Name_State::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, Temp_string_Variable_7) == 0x0000C8, "Member 'W_Buff_C_Name_State::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_State, K2Node_Select_Default) == 0x0000D8, "Member 'W_Buff_C_Name_State::K2Node_Select_Default' has a wrong offset!");

// Function W_Buff.W_Buff_C.Name Type
// 0x0068 (0x0068 - 0x0000)
struct W_Buff_C_Name_Type final
{
public:
	class FString                                 Seringe;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Bottle;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Grenade;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	E_ConsumableType                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Name_Type) == 0x000008, "Wrong alignment on W_Buff_C_Name_Type");
static_assert(sizeof(W_Buff_C_Name_Type) == 0x000068, "Wrong size on W_Buff_C_Name_Type");
static_assert(offsetof(W_Buff_C_Name_Type, Seringe) == 0x000000, "Member 'W_Buff_C_Name_Type::Seringe' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Type, Bottle) == 0x000010, "Member 'W_Buff_C_Name_Type::Bottle' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Type, Grenade) == 0x000020, "Member 'W_Buff_C_Name_Type::Grenade' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Type, Value) == 0x000030, "Member 'W_Buff_C_Name_Type::Value' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Type, Temp_byte_Variable) == 0x000040, "Member 'W_Buff_C_Name_Type::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Type, Temp_string_Variable) == 0x000048, "Member 'W_Buff_C_Name_Type::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Name_Type, K2Node_Select_Default) == 0x000058, "Member 'W_Buff_C_Name_Type::K2Node_Select_Default' has a wrong offset!");

// Function W_Buff.W_Buff_C.Refresh
// 0x0020 (0x0020 - 0x0000)
struct W_Buff_C_Refresh final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Refresh) == 0x000008, "Wrong alignment on W_Buff_C_Refresh");
static_assert(sizeof(W_Buff_C_Refresh) == 0x000020, "Wrong size on W_Buff_C_Refresh");
static_assert(offsetof(W_Buff_C_Refresh, CallFunc_BreakVector2D_X) == 0x000000, "Member 'W_Buff_C_Refresh::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Refresh, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'W_Buff_C_Refresh::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Refresh, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'W_Buff_C_Refresh::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_Buff.W_Buff_C.Select Name
// 0x00D0 (0x00D0 - 0x0000)
struct W_Buff_C_Select_Name final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Level_ReturnValue;                   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Level_ReturnValue_1;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Level_ReturnValue_2;                 // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Type_Value;                          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Level_ReturnValue_3;                 // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Level_ReturnValue_4;                 // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Type_Value_1;                        // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Level_ReturnValue_5;                 // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Level_ReturnValue_6;                 // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Type_Value_2;                        // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_Type_Value_3;                        // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Name_State_Value;                         // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Select_Name) == 0x000008, "Wrong alignment on W_Buff_C_Select_Name");
static_assert(sizeof(W_Buff_C_Select_Name) == 0x0000D0, "Wrong size on W_Buff_C_Select_Name");
static_assert(offsetof(W_Buff_C_Select_Name, Value) == 0x000000, "Member 'W_Buff_C_Select_Name::Value' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Level_ReturnValue) == 0x000010, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Level_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Level_ReturnValue_1) == 0x000020, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Level_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Level_ReturnValue_2) == 0x000030, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Level_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Type_Value) == 0x000040, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Type_Value' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Level_ReturnValue_3) == 0x000050, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Level_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Level_ReturnValue_4) == 0x000060, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Level_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Type_Value_1) == 0x000070, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Type_Value_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Level_ReturnValue_5) == 0x000080, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Level_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Level_ReturnValue_6) == 0x000090, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Level_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Type_Value_2) == 0x0000A0, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Type_Value_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_Type_Value_3) == 0x0000B0, "Member 'W_Buff_C_Select_Name::CallFunc_Name_Type_Value_3' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Select_Name, CallFunc_Name_State_Value) == 0x0000C0, "Member 'W_Buff_C_Select_Name::CallFunc_Name_State_Value' has a wrong offset!");

// Function W_Buff.W_Buff_C.Set Color
// 0x0100 (0x0100 - 0x0000)
struct W_Buff_C_Set_Color final
{
public:
	bool                                          Should_Override;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_Level_ReturnValue;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_Level_ReturnValue_1;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_Type_Value;                         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBuff_C*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Color_Level_ReturnValue_2;                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_Level_ReturnValue_3;                // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_Level_ReturnValue_4;                // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_Type_Value_1;                       // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_Level_ReturnValue_5;                // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_Level_ReturnValue_6;                // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_Type_Value_2;                       // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_Type_Value_3;                       // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Color_State_Value;                        // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Set_Color) == 0x000008, "Wrong alignment on W_Buff_C_Set_Color");
static_assert(sizeof(W_Buff_C_Set_Color) == 0x000100, "Wrong size on W_Buff_C_Set_Color");
static_assert(offsetof(W_Buff_C_Set_Color, Should_Override) == 0x000000, "Member 'W_Buff_C_Set_Color::Should_Override' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_Buff_C_Set_Color::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Level_ReturnValue) == 0x000008, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Level_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Level_ReturnValue_1) == 0x000018, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Level_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Type_Value) == 0x000028, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Type_Value' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'W_Buff_C_Set_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'W_Buff_C_Set_Color::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_Buff_C_Set_Color::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'W_Buff_C_Set_Color::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'W_Buff_C_Set_Color::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00004D, "Member 'W_Buff_C_Set_Color::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'W_Buff_C_Set_Color::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000054, "Member 'W_Buff_C_Set_Color::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'W_Buff_C_Set_Color::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Level_ReturnValue_2) == 0x000058, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Level_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Level_ReturnValue_3) == 0x000068, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Level_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Level_ReturnValue_4) == 0x000078, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Level_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Type_Value_1) == 0x000088, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Type_Value_1' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Level_ReturnValue_5) == 0x000098, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Level_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Level_ReturnValue_6) == 0x0000A8, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Level_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Type_Value_2) == 0x0000B8, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Type_Value_2' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_Type_Value_3) == 0x0000C8, "Member 'W_Buff_C_Set_Color::CallFunc_Color_Type_Value_3' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Color_State_Value) == 0x0000D8, "Member 'W_Buff_C_Set_Color::CallFunc_Color_State_Value' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x0000E8, "Member 'W_Buff_C_Set_Color::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Color, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x0000EC, "Member 'W_Buff_C_Set_Color::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");

// Function W_Buff.W_Buff_C.Set Elevation
// 0x0004 (0x0004 - 0x0000)
struct W_Buff_C_Set_Elevation final
{
public:
	int32                                         Elevation_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Set_Elevation) == 0x000004, "Wrong alignment on W_Buff_C_Set_Elevation");
static_assert(sizeof(W_Buff_C_Set_Elevation) == 0x000004, "Wrong size on W_Buff_C_Set_Elevation");
static_assert(offsetof(W_Buff_C_Set_Elevation, Elevation_0) == 0x000000, "Member 'W_Buff_C_Set_Elevation::Elevation_0' has a wrong offset!");

// Function W_Buff.W_Buff_C.Set Time Text
// 0x0028 (0x0028 - 0x0000)
struct W_Buff_C_Set_Time_Text final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
};
static_assert(alignof(W_Buff_C_Set_Time_Text) == 0x000008, "Wrong alignment on W_Buff_C_Set_Time_Text");
static_assert(sizeof(W_Buff_C_Set_Time_Text) == 0x000028, "Wrong size on W_Buff_C_Set_Time_Text");
static_assert(offsetof(W_Buff_C_Set_Time_Text, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'W_Buff_C_Set_Time_Text::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Time_Text, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'W_Buff_C_Set_Time_Text::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Set_Time_Text, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'W_Buff_C_Set_Time_Text::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_Buff.W_Buff_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Buff_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Buff_C_Tick) == 0x000004, "Wrong alignment on W_Buff_C_Tick");
static_assert(sizeof(W_Buff_C_Tick) == 0x00003C, "Wrong size on W_Buff_C_Tick");
static_assert(offsetof(W_Buff_C_Tick, MyGeometry) == 0x000000, "Member 'W_Buff_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Buff_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Buff_C_Tick::InDeltaTime' has a wrong offset!");

}

