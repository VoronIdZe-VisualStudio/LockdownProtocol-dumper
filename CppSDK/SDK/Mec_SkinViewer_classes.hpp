#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mec_SkinViewer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_SelectedColor_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mec_SkinViewer.Mec_SkinViewer_C
// 0x00C8 (0x0370 - 0x02A8)
class AMec_SkinViewer_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Pendant_Template;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Astronaut_GhostEyes;                               // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkM_Head;                                          // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkM_Body;                                          // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_NewTrack_0_9CF03A3E482EAD69647ACEA860459016; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_9CF03A3E482EAD69647ACEA860459016; // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               M_Helmet;                                          // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UData_Face_C*                           Face;                                              // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               M_Skin;                                            // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	Enum_SelectedColor                            Color;                                             // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UData_Skin_Body_C*                      Body_Skin;                                         // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UData_Skin_Head_C*                      Head_Skin;                                         // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UData_Face_C*                           Face_Skin;                                         // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Skin_Color;                                        // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UData_Skin_Ghost_C*                     Ghost_Skin;                                        // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_Ghos;                                         // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UData_Skin_Patch_C*                     Patch_Round;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UData_Skin_Patch_C*                     Patch_Square;                                      // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UData_Skin_Charm_C*                     Charm;                                             // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Eye_direction;                                     // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Mec_SkinViewer(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Set_Skin(const struct FStr_SkinSet& Skin);
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void Update_Skin();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mec_SkinViewer_C">();
	}
	static class AMec_SkinViewer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMec_SkinViewer_C>();
	}
};
static_assert(alignof(AMec_SkinViewer_C) == 0x000008, "Wrong alignment on AMec_SkinViewer_C");
static_assert(sizeof(AMec_SkinViewer_C) == 0x000370, "Wrong size on AMec_SkinViewer_C");
static_assert(offsetof(AMec_SkinViewer_C, UberGraphFrame) == 0x0002A8, "Member 'AMec_SkinViewer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Pendant_Template) == 0x0002B0, "Member 'AMec_SkinViewer_C::Pendant_Template' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Astronaut_GhostEyes) == 0x0002B8, "Member 'AMec_SkinViewer_C::Astronaut_GhostEyes' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Sphere) == 0x0002C0, "Member 'AMec_SkinViewer_C::Sphere' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Scene) == 0x0002C8, "Member 'AMec_SkinViewer_C::Scene' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, SkM_Head) == 0x0002D0, "Member 'AMec_SkinViewer_C::SkM_Head' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, SkM_Body) == 0x0002D8, "Member 'AMec_SkinViewer_C::SkM_Body' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, DefaultSceneRoot) == 0x0002E0, "Member 'AMec_SkinViewer_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Timeline_NewTrack_0_9CF03A3E482EAD69647ACEA860459016) == 0x0002E8, "Member 'AMec_SkinViewer_C::Timeline_NewTrack_0_9CF03A3E482EAD69647ACEA860459016' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Timeline__Direction_9CF03A3E482EAD69647ACEA860459016) == 0x0002EC, "Member 'AMec_SkinViewer_C::Timeline__Direction_9CF03A3E482EAD69647ACEA860459016' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Timeline) == 0x0002F0, "Member 'AMec_SkinViewer_C::Timeline' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, M_Helmet) == 0x0002F8, "Member 'AMec_SkinViewer_C::M_Helmet' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Face) == 0x000300, "Member 'AMec_SkinViewer_C::Face' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, M_Skin) == 0x000308, "Member 'AMec_SkinViewer_C::M_Skin' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Color) == 0x000310, "Member 'AMec_SkinViewer_C::Color' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Body_Skin) == 0x000318, "Member 'AMec_SkinViewer_C::Body_Skin' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Head_Skin) == 0x000320, "Member 'AMec_SkinViewer_C::Head_Skin' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Face_Skin) == 0x000328, "Member 'AMec_SkinViewer_C::Face_Skin' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Skin_Color) == 0x000330, "Member 'AMec_SkinViewer_C::Skin_Color' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Ghost_Skin) == 0x000338, "Member 'AMec_SkinViewer_C::Ghost_Skin' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Hide_Ghos) == 0x000340, "Member 'AMec_SkinViewer_C::Hide_Ghos' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Patch_Round) == 0x000348, "Member 'AMec_SkinViewer_C::Patch_Round' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Patch_Square) == 0x000350, "Member 'AMec_SkinViewer_C::Patch_Square' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Charm) == 0x000358, "Member 'AMec_SkinViewer_C::Charm' has a wrong offset!");
static_assert(offsetof(AMec_SkinViewer_C, Eye_direction) == 0x000360, "Member 'AMec_SkinViewer_C::Eye_direction' has a wrong offset!");

}

