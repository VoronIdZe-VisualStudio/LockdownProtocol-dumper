#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Crosshair

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Crosshair.W_Crosshair_C
// 0x0088 (0x0358 - 0x02D0)
class UW_Crosshair_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 PrimaryCircle;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SecondaryCircle;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SecondaryLines;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AMec_C*                                 Mec_Ref;                                           // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        FPS;                                               // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Main;                                              // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Aim;                                               // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Main_Radius;                                       // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Aim_Radius;                                        // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Main_Opacity;                                      // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Aim_Opacity;                                       // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta_Speed;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spread_Opacity;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Lines;                                             // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         In_Delta_Time;                                     // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Crosshair_Location;                                // 0x0340(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ExecuteUbergraph_W_Crosshair(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Crosshair_C">();
	}
	static class UW_Crosshair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Crosshair_C>();
	}
};
static_assert(alignof(UW_Crosshair_C) == 0x000008, "Wrong alignment on UW_Crosshair_C");
static_assert(sizeof(UW_Crosshair_C) == 0x000358, "Wrong size on UW_Crosshair_C");
static_assert(offsetof(UW_Crosshair_C, UberGraphFrame) == 0x0002D0, "Member 'UW_Crosshair_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, PrimaryCircle) == 0x0002D8, "Member 'UW_Crosshair_C::PrimaryCircle' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, SecondaryCircle) == 0x0002E0, "Member 'UW_Crosshair_C::SecondaryCircle' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, SecondaryLines) == 0x0002E8, "Member 'UW_Crosshair_C::SecondaryLines' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Mec_Ref) == 0x0002F0, "Member 'UW_Crosshair_C::Mec_Ref' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, FPS) == 0x0002F8, "Member 'UW_Crosshair_C::FPS' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Main) == 0x000300, "Member 'UW_Crosshair_C::Main' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Aim) == 0x000308, "Member 'UW_Crosshair_C::Aim' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Main_Radius) == 0x000310, "Member 'UW_Crosshair_C::Main_Radius' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Aim_Radius) == 0x000314, "Member 'UW_Crosshair_C::Aim_Radius' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Main_Opacity) == 0x000318, "Member 'UW_Crosshair_C::Main_Opacity' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Aim_Opacity) == 0x00031C, "Member 'UW_Crosshair_C::Aim_Opacity' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Delta_Speed) == 0x000320, "Member 'UW_Crosshair_C::Delta_Speed' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Spread_Opacity) == 0x000328, "Member 'UW_Crosshair_C::Spread_Opacity' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Lines) == 0x000330, "Member 'UW_Crosshair_C::Lines' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, In_Delta_Time) == 0x000338, "Member 'UW_Crosshair_C::In_Delta_Time' has a wrong offset!");
static_assert(offsetof(UW_Crosshair_C, Crosshair_Location) == 0x000340, "Member 'UW_Crosshair_C::Crosshair_Location' has a wrong offset!");

}

