#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Inventory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Inventory.W_Inventory_C
// 0x00A8 (0x0378 - 0x02D0)
class UW_Inventory_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Bag_Name;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Hand_Name;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Hand_Name_1;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Hand_Name_2;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LeftBlock;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LineSize;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                red_frame;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RightBlock;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_bag;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_bag_1;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_hand;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_hand_bg;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_handoffset;                                 // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AMec_C*                                 Mec_Ref;                                           // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Switching_Item;                                    // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               M_Jauge;                                           // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Hand_Size;                                         // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bag_Size;                                          // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Inventory;                                     // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Offset;                                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_Inventory(int32 EntryPoint);
	void Get_Size();
	void PreConstruct(bool IsDesignTime);
	void Set_Items();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Inventory_C">();
	}
	static class UW_Inventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Inventory_C>();
	}
};
static_assert(alignof(UW_Inventory_C) == 0x000008, "Wrong alignment on UW_Inventory_C");
static_assert(sizeof(UW_Inventory_C) == 0x000378, "Wrong size on UW_Inventory_C");
static_assert(offsetof(UW_Inventory_C, UberGraphFrame) == 0x0002D0, "Member 'UW_Inventory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Bag_Name) == 0x0002D8, "Member 'UW_Inventory_C::Bag_Name' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Hand_Name) == 0x0002E0, "Member 'UW_Inventory_C::Hand_Name' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Hand_Name_1) == 0x0002E8, "Member 'UW_Inventory_C::Hand_Name_1' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Hand_Name_2) == 0x0002F0, "Member 'UW_Inventory_C::Hand_Name_2' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, LeftBlock) == 0x0002F8, "Member 'UW_Inventory_C::LeftBlock' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, LineSize) == 0x000300, "Member 'UW_Inventory_C::LineSize' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, red_frame) == 0x000308, "Member 'UW_Inventory_C::red_frame' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, RightBlock) == 0x000310, "Member 'UW_Inventory_C::RightBlock' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Spacer_bag) == 0x000318, "Member 'UW_Inventory_C::Spacer_bag' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Spacer_bag_1) == 0x000320, "Member 'UW_Inventory_C::Spacer_bag_1' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Spacer_hand) == 0x000328, "Member 'UW_Inventory_C::Spacer_hand' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Spacer_hand_bg) == 0x000330, "Member 'UW_Inventory_C::Spacer_hand_bg' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Spacer_handoffset) == 0x000338, "Member 'UW_Inventory_C::Spacer_handoffset' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Mec_Ref) == 0x000340, "Member 'UW_Inventory_C::Mec_Ref' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Switching_Item) == 0x000348, "Member 'UW_Inventory_C::Switching_Item' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, M_Jauge) == 0x000350, "Member 'UW_Inventory_C::M_Jauge' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Hand_Size) == 0x000358, "Member 'UW_Inventory_C::Hand_Size' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Bag_Size) == 0x000360, "Member 'UW_Inventory_C::Bag_Size' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Can_Inventory) == 0x000368, "Member 'UW_Inventory_C::Can_Inventory' has a wrong offset!");
static_assert(offsetof(UW_Inventory_C, Offset) == 0x000370, "Member 'UW_Inventory_C::Offset' has a wrong offset!");

}

