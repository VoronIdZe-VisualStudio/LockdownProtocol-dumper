#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Music_Small

#include "Basic.hpp"

#include "Str_ItemState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Str_MusicToPlay_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Music_Small.Music_Small_C.All Pause Song
// 0x0008 (0x0008 - 0x0000)
struct Music_Small_C_All_Pause_Song final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_All_Pause_Song) == 0x000008, "Wrong alignment on Music_Small_C_All_Pause_Song");
static_assert(sizeof(Music_Small_C_All_Pause_Song) == 0x000008, "Wrong size on Music_Small_C_All_Pause_Song");
static_assert(offsetof(Music_Small_C_All_Pause_Song, Time) == 0x000000, "Member 'Music_Small_C_All_Pause_Song::Time' has a wrong offset!");

// Function Music_Small.Music_Small_C.All Play Time
// 0x0008 (0x0008 - 0x0000)
struct Music_Small_C_All_Play_Time final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_All_Play_Time) == 0x000008, "Wrong alignment on Music_Small_C_All_Play_Time");
static_assert(sizeof(Music_Small_C_All_Play_Time) == 0x000008, "Wrong size on Music_Small_C_All_Play_Time");
static_assert(offsetof(Music_Small_C_All_Play_Time, Time) == 0x000000, "Member 'Music_Small_C_All_Play_Time::Time' has a wrong offset!");

// Function Music_Small.Music_Small_C.All Set Song
// 0x0004 (0x0004 - 0x0000)
struct Music_Small_C_All_Set_Song final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_All_Set_Song) == 0x000004, "Wrong alignment on Music_Small_C_All_Set_Song");
static_assert(sizeof(Music_Small_C_All_Set_Song) == 0x000004, "Wrong size on Music_Small_C_All_Set_Song");
static_assert(offsetof(Music_Small_C_All_Set_Song, Index_0) == 0x000000, "Member 'Music_Small_C_All_Set_Song::Index_0' has a wrong offset!");

// Function Music_Small.Music_Small_C.All Start Song
// 0x0008 (0x0008 - 0x0000)
struct Music_Small_C_All_Start_Song final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Volume_0;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_All_Start_Song) == 0x000004, "Wrong alignment on Music_Small_C_All_Start_Song");
static_assert(sizeof(Music_Small_C_All_Start_Song) == 0x000008, "Wrong size on Music_Small_C_All_Start_Song");
static_assert(offsetof(Music_Small_C_All_Start_Song, StartTime) == 0x000000, "Member 'Music_Small_C_All_Start_Song::StartTime' has a wrong offset!");
static_assert(offsetof(Music_Small_C_All_Start_Song, Volume_0) == 0x000004, "Member 'Music_Small_C_All_Start_Song::Volume_0' has a wrong offset!");

// Function Music_Small.Music_Small_C.All Update Volume
// 0x0004 (0x0004 - 0x0000)
struct Music_Small_C_All_Update_Volume final
{
public:
	int32                                         Volume_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_All_Update_Volume) == 0x000004, "Wrong alignment on Music_Small_C_All_Update_Volume");
static_assert(sizeof(Music_Small_C_All_Update_Volume) == 0x000004, "Wrong size on Music_Small_C_All_Update_Volume");
static_assert(offsetof(Music_Small_C_All_Update_Volume, Volume_0) == 0x000000, "Member 'Music_Small_C_All_Update_Volume::Volume_0' has a wrong offset!");

// Function Music_Small.Music_Small_C.BndEvt__Analyzer_Button_K2Node_ComponentBoundEvent_0_Button Push__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Music_Small_C_BndEvt__Analyzer_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_BndEvt__Analyzer_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature) == 0x000008, "Wrong alignment on Music_Small_C_BndEvt__Analyzer_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature");
static_assert(sizeof(Music_Small_C_BndEvt__Analyzer_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature) == 0x000008, "Wrong size on Music_Small_C_BndEvt__Analyzer_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature");
static_assert(offsetof(Music_Small_C_BndEvt__Analyzer_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature, Source) == 0x000000, "Member 'Music_Small_C_BndEvt__Analyzer_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature::Source' has a wrong offset!");

// Function Music_Small.Music_Small_C.BndEvt__Music_Small_Button 1_K2Node_ComponentBoundEvent_3_Button Push__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Music_Small_C_BndEvt__Music_Small_Button_1_K2Node_ComponentBoundEvent_3_Button_Push__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_BndEvt__Music_Small_Button_1_K2Node_ComponentBoundEvent_3_Button_Push__DelegateSignature) == 0x000008, "Wrong alignment on Music_Small_C_BndEvt__Music_Small_Button_1_K2Node_ComponentBoundEvent_3_Button_Push__DelegateSignature");
static_assert(sizeof(Music_Small_C_BndEvt__Music_Small_Button_1_K2Node_ComponentBoundEvent_3_Button_Push__DelegateSignature) == 0x000008, "Wrong size on Music_Small_C_BndEvt__Music_Small_Button_1_K2Node_ComponentBoundEvent_3_Button_Push__DelegateSignature");
static_assert(offsetof(Music_Small_C_BndEvt__Music_Small_Button_1_K2Node_ComponentBoundEvent_3_Button_Push__DelegateSignature, Source) == 0x000000, "Member 'Music_Small_C_BndEvt__Music_Small_Button_1_K2Node_ComponentBoundEvent_3_Button_Push__DelegateSignature::Source' has a wrong offset!");

// Function Music_Small.Music_Small_C.BndEvt__Music_Small_Button Back_K2Node_ComponentBoundEvent_6_Button Push__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Music_Small_C_BndEvt__Music_Small_Button_Back_K2Node_ComponentBoundEvent_6_Button_Push__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_BndEvt__Music_Small_Button_Back_K2Node_ComponentBoundEvent_6_Button_Push__DelegateSignature) == 0x000008, "Wrong alignment on Music_Small_C_BndEvt__Music_Small_Button_Back_K2Node_ComponentBoundEvent_6_Button_Push__DelegateSignature");
static_assert(sizeof(Music_Small_C_BndEvt__Music_Small_Button_Back_K2Node_ComponentBoundEvent_6_Button_Push__DelegateSignature) == 0x000008, "Wrong size on Music_Small_C_BndEvt__Music_Small_Button_Back_K2Node_ComponentBoundEvent_6_Button_Push__DelegateSignature");
static_assert(offsetof(Music_Small_C_BndEvt__Music_Small_Button_Back_K2Node_ComponentBoundEvent_6_Button_Push__DelegateSignature, Source) == 0x000000, "Member 'Music_Small_C_BndEvt__Music_Small_Button_Back_K2Node_ComponentBoundEvent_6_Button_Push__DelegateSignature::Source' has a wrong offset!");

// Function Music_Small.Music_Small_C.BndEvt__Music_Small_Button Eject_K2Node_ComponentBoundEvent_7_Button Push__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Music_Small_C_BndEvt__Music_Small_Button_Eject_K2Node_ComponentBoundEvent_7_Button_Push__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_BndEvt__Music_Small_Button_Eject_K2Node_ComponentBoundEvent_7_Button_Push__DelegateSignature) == 0x000008, "Wrong alignment on Music_Small_C_BndEvt__Music_Small_Button_Eject_K2Node_ComponentBoundEvent_7_Button_Push__DelegateSignature");
static_assert(sizeof(Music_Small_C_BndEvt__Music_Small_Button_Eject_K2Node_ComponentBoundEvent_7_Button_Push__DelegateSignature) == 0x000008, "Wrong size on Music_Small_C_BndEvt__Music_Small_Button_Eject_K2Node_ComponentBoundEvent_7_Button_Push__DelegateSignature");
static_assert(offsetof(Music_Small_C_BndEvt__Music_Small_Button_Eject_K2Node_ComponentBoundEvent_7_Button_Push__DelegateSignature, Source) == 0x000000, "Member 'Music_Small_C_BndEvt__Music_Small_Button_Eject_K2Node_ComponentBoundEvent_7_Button_Push__DelegateSignature::Source' has a wrong offset!");

// Function Music_Small.Music_Small_C.BndEvt__Music_Small_Button Forward_K2Node_ComponentBoundEvent_5_Button Push__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Music_Small_C_BndEvt__Music_Small_Button_Forward_K2Node_ComponentBoundEvent_5_Button_Push__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_BndEvt__Music_Small_Button_Forward_K2Node_ComponentBoundEvent_5_Button_Push__DelegateSignature) == 0x000008, "Wrong alignment on Music_Small_C_BndEvt__Music_Small_Button_Forward_K2Node_ComponentBoundEvent_5_Button_Push__DelegateSignature");
static_assert(sizeof(Music_Small_C_BndEvt__Music_Small_Button_Forward_K2Node_ComponentBoundEvent_5_Button_Push__DelegateSignature) == 0x000008, "Wrong size on Music_Small_C_BndEvt__Music_Small_Button_Forward_K2Node_ComponentBoundEvent_5_Button_Push__DelegateSignature");
static_assert(offsetof(Music_Small_C_BndEvt__Music_Small_Button_Forward_K2Node_ComponentBoundEvent_5_Button_Push__DelegateSignature, Source) == 0x000000, "Member 'Music_Small_C_BndEvt__Music_Small_Button_Forward_K2Node_ComponentBoundEvent_5_Button_Push__DelegateSignature::Source' has a wrong offset!");

// Function Music_Small.Music_Small_C.BndEvt__Music_Small_Button High_K2Node_ComponentBoundEvent_4_Button Push__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Music_Small_C_BndEvt__Music_Small_Button_High_K2Node_ComponentBoundEvent_4_Button_Push__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_BndEvt__Music_Small_Button_High_K2Node_ComponentBoundEvent_4_Button_Push__DelegateSignature) == 0x000008, "Wrong alignment on Music_Small_C_BndEvt__Music_Small_Button_High_K2Node_ComponentBoundEvent_4_Button_Push__DelegateSignature");
static_assert(sizeof(Music_Small_C_BndEvt__Music_Small_Button_High_K2Node_ComponentBoundEvent_4_Button_Push__DelegateSignature) == 0x000008, "Wrong size on Music_Small_C_BndEvt__Music_Small_Button_High_K2Node_ComponentBoundEvent_4_Button_Push__DelegateSignature");
static_assert(offsetof(Music_Small_C_BndEvt__Music_Small_Button_High_K2Node_ComponentBoundEvent_4_Button_Push__DelegateSignature, Source) == 0x000000, "Member 'Music_Small_C_BndEvt__Music_Small_Button_High_K2Node_ComponentBoundEvent_4_Button_Push__DelegateSignature::Source' has a wrong offset!");

// Function Music_Small.Music_Small_C.ExecuteUbergraph_Music_Small
// 0x0410 (0x0410 - 0x0000)
struct Music_Small_C_ExecuteUbergraph_Music_Small final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Index_2;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source_2;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_Event_Item_State_2;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index_1;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source_1;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_Event_Item_State_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source;                               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_Event_Item_State;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source_5;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_C*                                  K2Node_DynamicCast_AsGM;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source_4;               // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_StartTime;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Volume_1;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time_1;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source_3;               // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Volume;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_MusicPlayerScreen_C*                 K2Node_DynamicCast_AsW_Music_Player_Screen;        // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Time;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_1; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0130(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source_2;               // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source_1;               // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source;                 // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_168[0x8];                                      // 0x0168(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0170(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue_1;         // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_208[0x8];                                      // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0210(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_2; // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWorldItem_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0358(0x0010)(ReferenceParm)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_MusicToPlay                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0388(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Set_Time_Time_ImplicitCast;               // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_All_Start_Song_StartTime_ImplicitCast;    // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast_1;                // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Set_Max_Time_Time_ImplicitCast;           // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_ExecuteUbergraph_Music_Small) == 0x000010, "Wrong alignment on Music_Small_C_ExecuteUbergraph_Music_Small");
static_assert(sizeof(Music_Small_C_ExecuteUbergraph_Music_Small) == 0x000410, "Wrong size on Music_Small_C_ExecuteUbergraph_Music_Small");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, EntryPoint) == 0x000000, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::EntryPoint' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_HasAuthority_ReturnValue) == 0x000006, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_Event_Index_2) == 0x000008, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_Event_Index_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_Event_Source_2) == 0x000010, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_Event_Source_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_Event_Item_State_2) == 0x000018, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_Event_Item_State_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_Event_Index_1) == 0x000020, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_Event_Index_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_Event_Source_1) == 0x000028, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_Event_Source_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_Event_Item_State_1) == 0x000030, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_Event_Item_State_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_Event_Index) == 0x000038, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_Event_Source) == 0x000040, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_Event_Item_State) == 0x000048, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_Event_Item_State' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_ComponentBoundEvent_Source_5) == 0x000058, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_ComponentBoundEvent_Source_5' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_GetGameMode_ReturnValue) == 0x000070, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_DynamicCast_AsGM) == 0x000078, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_DynamicCast_AsGM' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_CreateDelegate_OutputDelegate_1) == 0x000084, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000098, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x0000A0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_ComponentBoundEvent_Source_4) == 0x0000B0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_ComponentBoundEvent_Source_4' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_CustomEvent_StartTime) == 0x0000B8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_CustomEvent_StartTime' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_CustomEvent_Volume_1) == 0x0000BC, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_CustomEvent_Volume_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_CustomEvent_Time_1) == 0x0000C0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_CustomEvent_Time_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_ComponentBoundEvent_Source_3) == 0x0000C8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_ComponentBoundEvent_Source_3' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Clamp_ReturnValue) == 0x0000D8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Clamp_ReturnValue_1) == 0x0000DC, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_CustomEvent_Index) == 0x0000E0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000E4, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_CustomEvent_Volume) == 0x0000E8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_CustomEvent_Volume' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_GetWidget_ReturnValue) == 0x0000F8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_DynamicCast_AsW_Music_Player_Screen) == 0x000100, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_DynamicCast_AsW_Music_Player_Screen' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_CustomEvent_Time) == 0x000110, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_1) == 0x000118, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_CreateDelegate_OutputDelegate_2) == 0x00011C, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000130, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_ComponentBoundEvent_Source_2) == 0x000138, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_ComponentBoundEvent_Source_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_ComponentBoundEvent_Source_1) == 0x000140, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_ComponentBoundEvent_Source_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000148, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_SwitchEnum_CmpSuccess_1) == 0x000158, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_SwitchEnum_CmpSuccess_2) == 0x000159, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_ComponentBoundEvent_Source) == 0x000160, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_ComponentBoundEvent_Source' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_GetTransform_ReturnValue) == 0x000170, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_SwitchEnum_CmpSuccess_3) == 0x0001D0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_TransformDirection_ReturnValue) == 0x0001D8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_TransformDirection_ReturnValue_1) == 0x0001F0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_TransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000210, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_BreakTransform_Location) == 0x000270, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_BreakTransform_Rotation) == 0x000288, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_BreakTransform_Scale) == 0x0002A0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Add_VectorVector_ReturnValue) == 0x0002B8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_MakeTransform_ReturnValue) == 0x0002D0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000330, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_2) == 0x000338, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_FinishSpawningActor_ReturnValue) == 0x000340, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000348, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000350, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, K2Node_MakeArray_Array) == 0x000358, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_FClamp_ReturnValue) == 0x000368, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000370, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_FClamp_ReturnValue_1) == 0x000378, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Array_Get_Item) == 0x000380, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_GetDataTableRowFromName_OutRow) == 0x000388, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003B0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0003B8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Set_Time_Time_ImplicitCast) == 0x0003C0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Set_Time_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_All_Start_Song_StartTime_ImplicitCast) == 0x0003C8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_All_Start_Song_StartTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0003D0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0003D8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0003E0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_FClamp_Max_ImplicitCast) == 0x0003E8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x0003F0, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_FClamp_Max_ImplicitCast_1) == 0x0003F8, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_FClamp_Max_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x000400, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_ExecuteUbergraph_Music_Small, CallFunc_Set_Max_Time_Time_ImplicitCast) == 0x000408, "Member 'Music_Small_C_ExecuteUbergraph_Music_Small::CallFunc_Set_Max_Time_Time_ImplicitCast' has a wrong offset!");

// Function Music_Small.Music_Small_C.Get Key
// 0x0008 (0x0008 - 0x0000)
struct Music_Small_C_Get_Key final
{
public:
	class AActor*                                 Key;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_Get_Key) == 0x000008, "Wrong alignment on Music_Small_C_Get_Key");
static_assert(sizeof(Music_Small_C_Get_Key) == 0x000008, "Wrong size on Music_Small_C_Get_Key");
static_assert(offsetof(Music_Small_C_Get_Key, Key) == 0x000000, "Member 'Music_Small_C_Get_Key::Key' has a wrong offset!");

// Function Music_Small.Music_Small_C.Get Name
// 0x0018 (0x0018 - 0x0000)
struct Music_Small_C_Get_Name final
{
public:
	class AMec_C*                                 Mec;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_Get_Name) == 0x000008, "Wrong alignment on Music_Small_C_Get_Name");
static_assert(sizeof(Music_Small_C_Get_Name) == 0x000018, "Wrong size on Music_Small_C_Get_Name");
static_assert(offsetof(Music_Small_C_Get_Name, Mec) == 0x000000, "Member 'Music_Small_C_Get_Name::Mec' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Get_Name, Name_0) == 0x000008, "Member 'Music_Small_C_Get_Name::Name_0' has a wrong offset!");

// Function Music_Small.Music_Small_C.Local Interaction
// 0x0018 (0x0018 - 0x0000)
struct Music_Small_C_Local_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_Local_Interaction) == 0x000008, "Wrong alignment on Music_Small_C_Local_Interaction");
static_assert(sizeof(Music_Small_C_Local_Interaction) == 0x000018, "Wrong size on Music_Small_C_Local_Interaction");
static_assert(offsetof(Music_Small_C_Local_Interaction, Index_0) == 0x000000, "Member 'Music_Small_C_Local_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Local_Interaction, Source) == 0x000008, "Member 'Music_Small_C_Local_Interaction::Source' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Local_Interaction, Item_State) == 0x000010, "Member 'Music_Small_C_Local_Interaction::Item_State' has a wrong offset!");

// Function Music_Small.Music_Small_C.Net Interaction
// 0x0018 (0x0018 - 0x0000)
struct Music_Small_C_Net_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_Net_Interaction) == 0x000008, "Wrong alignment on Music_Small_C_Net_Interaction");
static_assert(sizeof(Music_Small_C_Net_Interaction) == 0x000018, "Wrong size on Music_Small_C_Net_Interaction");
static_assert(offsetof(Music_Small_C_Net_Interaction, Index_0) == 0x000000, "Member 'Music_Small_C_Net_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Net_Interaction, Source) == 0x000008, "Member 'Music_Small_C_Net_Interaction::Source' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Net_Interaction, Item_State) == 0x000010, "Member 'Music_Small_C_Net_Interaction::Item_State' has a wrong offset!");

// Function Music_Small.Music_Small_C.OnRep_State
// 0x0002 (0x0002 - 0x0000)
struct Music_Small_C_OnRep_State final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_OnRep_State) == 0x000001, "Wrong alignment on Music_Small_C_OnRep_State");
static_assert(sizeof(Music_Small_C_OnRep_State) == 0x000002, "Wrong size on Music_Small_C_OnRep_State");
static_assert(offsetof(Music_Small_C_OnRep_State, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Music_Small_C_OnRep_State::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_OnRep_State, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'Music_Small_C_OnRep_State::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Music_Small.Music_Small_C.Other Interaction
// 0x0018 (0x0018 - 0x0000)
struct Music_Small_C_Other_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_Other_Interaction) == 0x000008, "Wrong alignment on Music_Small_C_Other_Interaction");
static_assert(sizeof(Music_Small_C_Other_Interaction) == 0x000018, "Wrong size on Music_Small_C_Other_Interaction");
static_assert(offsetof(Music_Small_C_Other_Interaction, Index_0) == 0x000000, "Member 'Music_Small_C_Other_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Other_Interaction, Source) == 0x000008, "Member 'Music_Small_C_Other_Interaction::Source' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Other_Interaction, Item_State) == 0x000010, "Member 'Music_Small_C_Other_Interaction::Item_State' has a wrong offset!");

// Function Music_Small.Music_Small_C.Update Volume
// 0x0028 (0x0028 - 0x0000)
struct Music_Small_C_Update_Volume final
{
public:
	int32                                         Volume_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Range___;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Range____1;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_Update_Volume) == 0x000008, "Wrong alignment on Music_Small_C_Update_Volume");
static_assert(sizeof(Music_Small_C_Update_Volume) == 0x000028, "Wrong size on Music_Small_C_Update_Volume");
static_assert(offsetof(Music_Small_C_Update_Volume, Volume_0) == 0x000000, "Member 'Music_Small_C_Update_Volume::Volume_0' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Update_Volume, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'Music_Small_C_Update_Volume::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Update_Volume, CallFunc_Map_Range___) == 0x000010, "Member 'Music_Small_C_Update_Volume::CallFunc_Map_Range___' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Update_Volume, CallFunc_Map_Range____1) == 0x000018, "Member 'Music_Small_C_Update_Volume::CallFunc_Map_Range____1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Update_Volume, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast) == 0x000020, "Member 'Music_Small_C_Update_Volume::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Music_Small_C_Update_Volume, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1) == 0x000024, "Member 'Music_Small_C_Update_Volume::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1' has a wrong offset!");

// Function Music_Small.Music_Small_C.UserConstructionScript
// 0x0090 (0x0090 - 0x0000)
struct Music_Small_C_UserConstructionScript final
{
public:
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0000(0x0010)(ReferenceParm)
	class AButton_C*                              K2Node_DynamicCast_AsButton;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_1;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_2;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASoundPath_C*                           K2Node_DynamicCast_AsSound_Path;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_3;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_4;                     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_5;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            K2Node_DynamicCast_AsItem_Slot;                    // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Music_Small_C_UserConstructionScript) == 0x000008, "Wrong alignment on Music_Small_C_UserConstructionScript");
static_assert(sizeof(Music_Small_C_UserConstructionScript) == 0x000090, "Wrong size on Music_Small_C_UserConstructionScript");
static_assert(offsetof(Music_Small_C_UserConstructionScript, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000000, "Member 'Music_Small_C_UserConstructionScript::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_AsButton) == 0x000010, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_AsButton' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_AsButton_1) == 0x000020, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_AsButton_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_AsButton_2) == 0x000030, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_AsButton_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'Music_Small_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_AsSound_Path) == 0x000040, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_AsSound_Path' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_3) == 0x000048, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_AsButton_3) == 0x000050, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_AsButton_3' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_4) == 0x000058, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_AsButton_4) == 0x000060, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_AsButton_4' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_5) == 0x000068, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_AsButton_5) == 0x000070, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_AsButton_5' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_6) == 0x000078, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_AsItem_Slot) == 0x000080, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_AsItem_Slot' has a wrong offset!");
static_assert(offsetof(Music_Small_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_7) == 0x000088, "Member 'Music_Small_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");

}

