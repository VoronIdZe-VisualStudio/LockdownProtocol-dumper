#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GhostTaskFromList

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_GhostTaskFromList.W_GhostTaskFromList_C.ExecuteUbergraph_W_GhostTaskFromList
// 0x0050 (0x0050 - 0x0000)
struct W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Value)>                  K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0010)()
};
static_assert(alignof(W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList) == 0x000008, "Wrong alignment on W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList");
static_assert(sizeof(W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList) == 0x000050, "Wrong size on W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList");
static_assert(offsetof(W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList, EntryPoint) == 0x000000, "Member 'W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList, K2Node_CustomEvent_Value) == 0x000038, "Member 'W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'W_GhostTaskFromList_C_ExecuteUbergraph_W_GhostTaskFromList::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_GhostTaskFromList.W_GhostTaskFromList_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_GhostTaskFromList_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GhostTaskFromList_C_PreConstruct) == 0x000001, "Wrong alignment on W_GhostTaskFromList_C_PreConstruct");
static_assert(sizeof(W_GhostTaskFromList_C_PreConstruct) == 0x000001, "Wrong size on W_GhostTaskFromList_C_PreConstruct");
static_assert(offsetof(W_GhostTaskFromList_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_GhostTaskFromList_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_GhostTaskFromList.W_GhostTaskFromList_C.Set Count
// 0x0004 (0x0004 - 0x0000)
struct W_GhostTaskFromList_C_Set_Count final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GhostTaskFromList_C_Set_Count) == 0x000004, "Wrong alignment on W_GhostTaskFromList_C_Set_Count");
static_assert(sizeof(W_GhostTaskFromList_C_Set_Count) == 0x000004, "Wrong size on W_GhostTaskFromList_C_Set_Count");
static_assert(offsetof(W_GhostTaskFromList_C_Set_Count, Value) == 0x000000, "Member 'W_GhostTaskFromList_C_Set_Count::Value' has a wrong offset!");

}

