#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RuntimeDataTable

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "EasyCsv_structs.hpp"
#include "RuntimeDataTable_structs.hpp"


namespace SDK
{

// Class RuntimeDataTable.RuntimeDataTableWebToken
// 0x0020 (0x0048 - 0x0028)
class URuntimeDataTableWebToken final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool Init(const class FString& InTokenText, const int32 SecondsUntilExpiration);

	int32 GetNumberOfSecondsUntilExpiration() const;
	class FString GetTokenText() const;
	bool HasTokenExpired() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RuntimeDataTableWebToken">();
	}
	static class URuntimeDataTableWebToken* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeDataTableWebToken>();
	}
};
static_assert(alignof(URuntimeDataTableWebToken) == 0x000008, "Wrong alignment on URuntimeDataTableWebToken");
static_assert(sizeof(URuntimeDataTableWebToken) == 0x000048, "Wrong size on URuntimeDataTableWebToken");

// Class RuntimeDataTable.RuntimeDataTableObject
// 0x0070 (0x0098 - 0x0028)
class URuntimeDataTableObject final : public UObject
{
public:
	struct FEasyCsvInfo                           CachedCsvInfo;                                     // 0x0028(0x0070)(BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static TArray<class FName> AutoGenerateKeys();
	static void BuildGoogleSheetDownloadLinkAndGetAsCsv(const struct FRuntimeDataTableTokenInfo& InTokenInfo, const struct FRuntimeDataTableOperationParams& OperationParams, const TDelegate<void(const struct FRuntimeDataTableCallbackInfo& CallbackInfo)> CallOnComplete, const class FString& InSheetURL, const bool bSheetIsPublic);
	static void GenerateCsvFromArray(const TArray<int32>& ArrayToExport, class FString* OutCSV_String, const TArray<class FName>& Keys, const class FString& MembersToInclude, const bool bSortColumnsAlphanumerically, const class UObject* OwningObject);
	static bool GenerateTokenInfoFromFile(struct FRuntimeDataTableTokenInfo* OutTokenInfo, const class FString& InPathToFile, const int32 DesiredSecondsUntilExpiration);
	static bool GenerateTokenInfoFromString(struct FRuntimeDataTableTokenInfo* OutTokenInfo, const class FString& InJsonString, const int32 DesiredSecondsUntilExpiration);
	static class FString GetAllObjectVariableNames(const class UObject* Object, const bool bIncludeOnlyConfigVariables, const bool bIncludeInheritedVariables, const class FString& MemberBlacklist);
	static class FString GetGoogleSheetsApiUrlPrefix();
	static class FString GetGoogleSheetsBatchUpdateURL(const class FString& InSpreadsheetId);
	static class FString GetGoogleSheetsUrlPrefix();
	static class FString GetGoogleSheetsValuesBatchUpdateURL(const class FString& InSpreadsheetId);
	static class FString GetMimeCsv();
	static class FString GetSheetIdFromUrl(const class FString& SheetURL);
	static int32 GetSheetIdFromUrl_Int(const class FString& SheetURL);
	static class FString GetSpreadsheetIdFromUrl(const class FString& SheetURL);
	static void UpdateArrayFromCsvInfo(const TArray<int32>& ArrayToUpdate, bool* Successful, const struct FEasyCsvInfo& CSVInfo, bool MatchStructMemberNames, const class UObject* OwningObject);
	static bool ValidateGoogleSheetsDownloadAndLoadBackupIfNeeded(const struct FRuntimeDataTableCallbackInfo& InCallbackInfo, struct FEasyCsvInfo* OutCsvInfo, ERuntimeDataTableBackupResultCode* OutResultCode, const class FString& BackupSavePath, const class FString& BackupLoadPath);
	static void WriteCsvToSheet(const struct FRuntimeDataTableTokenInfo& InTokenInfo, const struct FRuntimeDataTableOperationParams& OperationParams, const TDelegate<void(const struct FRuntimeDataTableCallbackInfo& CallbackInfo)>& CallOnComplete, const class FString& InSpreadsheetId, const int32 InSheetId, const class FString& InCsv);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RuntimeDataTableObject">();
	}
	static class URuntimeDataTableObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeDataTableObject>();
	}
};
static_assert(alignof(URuntimeDataTableObject) == 0x000008, "Wrong alignment on URuntimeDataTableObject");
static_assert(sizeof(URuntimeDataTableObject) == 0x000098, "Wrong size on URuntimeDataTableObject");
static_assert(offsetof(URuntimeDataTableObject, CachedCsvInfo) == 0x000028, "Member 'URuntimeDataTableObject::CachedCsvInfo' has a wrong offset!");

// Class RuntimeDataTable.RuntimeDataTableProjectSettings
// 0x0070 (0x0098 - 0x0028)
class URuntimeDataTableProjectSettings final : public UObject
{
public:
	int32                                         LogCharacterLimit;                                 // 0x0028(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintDisplayMessagesToLog;                        // 0x002C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintDisplayMessagesToScreen;                     // 0x002D(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DisplayMessagesOnScreenLifetime;                   // 0x0030(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintWarningMessagesToLog;                        // 0x0034(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintWarningMessagesToScreen;                     // 0x0035(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WarningMessagesOnScreenLifetime;                   // 0x0038(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintErrorMessagesToLog;                          // 0x003C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintErrorMessagesToScreen;                       // 0x003D(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ErrorMessagesOnScreenLifetime;                     // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GoogleSheetsUrlPrefix;                             // 0x0048(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GoogleSheetsApiUrlPrefix;                          // 0x0058(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GoogleSheetsBatchUpdateCommand;                    // 0x0068(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GoogleSheetsValuesBatchUpdateCommand;              // 0x0078(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GoogleSheetsMimeCsv;                               // 0x0088(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RuntimeDataTableProjectSettings">();
	}
	static class URuntimeDataTableProjectSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeDataTableProjectSettings>();
	}
};
static_assert(alignof(URuntimeDataTableProjectSettings) == 0x000008, "Wrong alignment on URuntimeDataTableProjectSettings");
static_assert(sizeof(URuntimeDataTableProjectSettings) == 0x000098, "Wrong size on URuntimeDataTableProjectSettings");
static_assert(offsetof(URuntimeDataTableProjectSettings, LogCharacterLimit) == 0x000028, "Member 'URuntimeDataTableProjectSettings::LogCharacterLimit' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, bPrintDisplayMessagesToLog) == 0x00002C, "Member 'URuntimeDataTableProjectSettings::bPrintDisplayMessagesToLog' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, bPrintDisplayMessagesToScreen) == 0x00002D, "Member 'URuntimeDataTableProjectSettings::bPrintDisplayMessagesToScreen' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, DisplayMessagesOnScreenLifetime) == 0x000030, "Member 'URuntimeDataTableProjectSettings::DisplayMessagesOnScreenLifetime' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, bPrintWarningMessagesToLog) == 0x000034, "Member 'URuntimeDataTableProjectSettings::bPrintWarningMessagesToLog' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, bPrintWarningMessagesToScreen) == 0x000035, "Member 'URuntimeDataTableProjectSettings::bPrintWarningMessagesToScreen' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, WarningMessagesOnScreenLifetime) == 0x000038, "Member 'URuntimeDataTableProjectSettings::WarningMessagesOnScreenLifetime' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, bPrintErrorMessagesToLog) == 0x00003C, "Member 'URuntimeDataTableProjectSettings::bPrintErrorMessagesToLog' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, bPrintErrorMessagesToScreen) == 0x00003D, "Member 'URuntimeDataTableProjectSettings::bPrintErrorMessagesToScreen' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, ErrorMessagesOnScreenLifetime) == 0x000040, "Member 'URuntimeDataTableProjectSettings::ErrorMessagesOnScreenLifetime' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, GoogleSheetsUrlPrefix) == 0x000048, "Member 'URuntimeDataTableProjectSettings::GoogleSheetsUrlPrefix' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, GoogleSheetsApiUrlPrefix) == 0x000058, "Member 'URuntimeDataTableProjectSettings::GoogleSheetsApiUrlPrefix' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, GoogleSheetsBatchUpdateCommand) == 0x000068, "Member 'URuntimeDataTableProjectSettings::GoogleSheetsBatchUpdateCommand' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, GoogleSheetsValuesBatchUpdateCommand) == 0x000078, "Member 'URuntimeDataTableProjectSettings::GoogleSheetsValuesBatchUpdateCommand' has a wrong offset!");
static_assert(offsetof(URuntimeDataTableProjectSettings, GoogleSheetsMimeCsv) == 0x000088, "Member 'URuntimeDataTableProjectSettings::GoogleSheetsMimeCsv' has a wrong offset!");

}

