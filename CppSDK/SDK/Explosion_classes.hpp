#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Explosion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Explosion.Explosion_C
// 0x0058 (0x0300 - 0x02A8)
class AExplosion_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_SoundPath;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TL_Sphere_Sphere_E96246D44CB456F30CF4BBA887895D3F; // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Sphere__Direction_E96246D44CB456F30CF4BBA887895D3F; // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Sphere;                                         // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASoundPath_C*                           Sound_Path;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Type;                                              // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void All_Explosion();
	void ExecuteUbergraph_Explosion(int32 EntryPoint);
	void Explosion_Sound();
	void ReceiveBeginPlay();
	void TL_Sphere__FinishedFunc();
	void TL_Sphere__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Explosion_C">();
	}
	static class AExplosion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AExplosion_C>();
	}
};
static_assert(alignof(AExplosion_C) == 0x000008, "Wrong alignment on AExplosion_C");
static_assert(sizeof(AExplosion_C) == 0x000300, "Wrong size on AExplosion_C");
static_assert(offsetof(AExplosion_C, UberGraphFrame) == 0x0002A8, "Member 'AExplosion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Sphere) == 0x0002B0, "Member 'AExplosion_C::Sphere' has a wrong offset!");
static_assert(offsetof(AExplosion_C, C_SoundPath) == 0x0002B8, "Member 'AExplosion_C::C_SoundPath' has a wrong offset!");
static_assert(offsetof(AExplosion_C, DefaultSceneRoot) == 0x0002C0, "Member 'AExplosion_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AExplosion_C, TL_Sphere_Sphere_E96246D44CB456F30CF4BBA887895D3F) == 0x0002C8, "Member 'AExplosion_C::TL_Sphere_Sphere_E96246D44CB456F30CF4BBA887895D3F' has a wrong offset!");
static_assert(offsetof(AExplosion_C, TL_Sphere__Direction_E96246D44CB456F30CF4BBA887895D3F) == 0x0002E0, "Member 'AExplosion_C::TL_Sphere__Direction_E96246D44CB456F30CF4BBA887895D3F' has a wrong offset!");
static_assert(offsetof(AExplosion_C, TL_Sphere) == 0x0002E8, "Member 'AExplosion_C::TL_Sphere' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Sound_Path) == 0x0002F0, "Member 'AExplosion_C::Sound_Path' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Type) == 0x0002F8, "Member 'AExplosion_C::Type' has a wrong offset!");

}

