#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AlarmButton

#include "Basic.hpp"

#include "E_AlarmState_structs.hpp"
#include "Str_ItemState_structs.hpp"


namespace SDK::Params
{

// Function AlarmButton.AlarmButton_C.BndEvt__AlarmButton_Button_K2Node_ComponentBoundEvent_0_Button Push__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AlarmButton_C_BndEvt__AlarmButton_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlarmButton_C_BndEvt__AlarmButton_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature) == 0x000008, "Wrong alignment on AlarmButton_C_BndEvt__AlarmButton_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature");
static_assert(sizeof(AlarmButton_C_BndEvt__AlarmButton_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature) == 0x000008, "Wrong size on AlarmButton_C_BndEvt__AlarmButton_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature");
static_assert(offsetof(AlarmButton_C_BndEvt__AlarmButton_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature, Source) == 0x000000, "Member 'AlarmButton_C_BndEvt__AlarmButton_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature::Source' has a wrong offset!");

// Function AlarmButton.AlarmButton_C.ExecuteUbergraph_AlarmButton
// 0x0040 (0x0040 - 0x0000)
struct AlarmButton_C_ExecuteUbergraph_AlarmButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_C*                                  K2Node_DynamicCast_AsGM;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_MakeStruct_Str_ItemState;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlarmButton_C_ExecuteUbergraph_AlarmButton) == 0x000008, "Wrong alignment on AlarmButton_C_ExecuteUbergraph_AlarmButton");
static_assert(sizeof(AlarmButton_C_ExecuteUbergraph_AlarmButton) == 0x000040, "Wrong size on AlarmButton_C_ExecuteUbergraph_AlarmButton");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, EntryPoint) == 0x000000, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, K2Node_ComponentBoundEvent_Source) == 0x000008, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::K2Node_ComponentBoundEvent_Source' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, K2Node_DynamicCast_AsGM) == 0x000028, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::K2Node_DynamicCast_AsGM' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, K2Node_SwitchEnum_CmpSuccess_1) == 0x000031, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, K2Node_SwitchEnum_CmpSuccess_2) == 0x000032, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, K2Node_SwitchEnum_CmpSuccess_3) == 0x000033, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, K2Node_MakeStruct_Str_ItemState) == 0x000034, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::K2Node_MakeStruct_Str_ItemState' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00003D, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_ExecuteUbergraph_AlarmButton, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'AlarmButton_C_ExecuteUbergraph_AlarmButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AlarmButton.AlarmButton_C.OnRep_State
// 0x0080 (0x0080 - 0x0000)
struct AlarmButton_C_OnRep_State final
{
public:
	float                                         Temp_real_Variable;                                // 0x0000(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AlarmState                                  Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_5;                              // 0x0018(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_6;                              // 0x001C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_7;                              // 0x0020(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_8;                              // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_9;                              // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AlarmState                                  Temp_byte_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AlarmState                                  Temp_byte_Variable_2;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAlarmSpeaker_C*                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAlarmSpeaker_C*                        CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlarmButton_C_OnRep_State) == 0x000008, "Wrong alignment on AlarmButton_C_OnRep_State");
static_assert(sizeof(AlarmButton_C_OnRep_State) == 0x000080, "Wrong size on AlarmButton_C_OnRep_State");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_real_Variable) == 0x000000, "Member 'AlarmButton_C_OnRep_State::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_real_Variable_1) == 0x000004, "Member 'AlarmButton_C_OnRep_State::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_real_Variable_2) == 0x000008, "Member 'AlarmButton_C_OnRep_State::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_real_Variable_3) == 0x00000C, "Member 'AlarmButton_C_OnRep_State::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_real_Variable_4) == 0x000010, "Member 'AlarmButton_C_OnRep_State::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_byte_Variable) == 0x000014, "Member 'AlarmButton_C_OnRep_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_real_Variable_5) == 0x000018, "Member 'AlarmButton_C_OnRep_State::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_real_Variable_6) == 0x00001C, "Member 'AlarmButton_C_OnRep_State::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_real_Variable_7) == 0x000020, "Member 'AlarmButton_C_OnRep_State::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_real_Variable_8) == 0x000024, "Member 'AlarmButton_C_OnRep_State::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_real_Variable_9) == 0x000028, "Member 'AlarmButton_C_OnRep_State::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_byte_Variable_1) == 0x00002C, "Member 'AlarmButton_C_OnRep_State::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_bool_Variable) == 0x00002D, "Member 'AlarmButton_C_OnRep_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_bool_Variable_1) == 0x00002E, "Member 'AlarmButton_C_OnRep_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_bool_Variable_2) == 0x00002F, "Member 'AlarmButton_C_OnRep_State::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_bool_Variable_3) == 0x000030, "Member 'AlarmButton_C_OnRep_State::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_bool_Variable_4) == 0x000031, "Member 'AlarmButton_C_OnRep_State::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, CallFunc_HasAuthority_ReturnValue) == 0x000032, "Member 'AlarmButton_C_OnRep_State::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_int_Array_Index_Variable) == 0x000034, "Member 'AlarmButton_C_OnRep_State::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'AlarmButton_C_OnRep_State::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'AlarmButton_C_OnRep_State::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'AlarmButton_C_OnRep_State::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_byte_Variable_2) == 0x000044, "Member 'AlarmButton_C_OnRep_State::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, CallFunc_Array_Get_Item) == 0x000048, "Member 'AlarmButton_C_OnRep_State::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, K2Node_Select_Default) == 0x000050, "Member 'AlarmButton_C_OnRep_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'AlarmButton_C_OnRep_State::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'AlarmButton_C_OnRep_State::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, K2Node_Select_Default_1) == 0x00005C, "Member 'AlarmButton_C_OnRep_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'AlarmButton_C_OnRep_State::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'AlarmButton_C_OnRep_State::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'AlarmButton_C_OnRep_State::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, K2Node_Select_Default_2) == 0x000070, "Member 'AlarmButton_C_OnRep_State::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'AlarmButton_C_OnRep_State::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_OnRep_State, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'AlarmButton_C_OnRep_State::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function AlarmButton.AlarmButton_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct AlarmButton_C_UserConstructionScript final
{
public:
	class AItemSlot_C*                            K2Node_DynamicCast_AsItem_Slot;                    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlarmButton_C_UserConstructionScript) == 0x000008, "Wrong alignment on AlarmButton_C_UserConstructionScript");
static_assert(sizeof(AlarmButton_C_UserConstructionScript) == 0x000020, "Wrong size on AlarmButton_C_UserConstructionScript");
static_assert(offsetof(AlarmButton_C_UserConstructionScript, K2Node_DynamicCast_AsItem_Slot) == 0x000000, "Member 'AlarmButton_C_UserConstructionScript::K2Node_DynamicCast_AsItem_Slot' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'AlarmButton_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_UserConstructionScript, K2Node_DynamicCast_AsButton) == 0x000010, "Member 'AlarmButton_C_UserConstructionScript::K2Node_DynamicCast_AsButton' has a wrong offset!");
static_assert(offsetof(AlarmButton_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'AlarmButton_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

