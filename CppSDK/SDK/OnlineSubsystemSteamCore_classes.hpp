#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemSteamCore

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "PacketHandler_classes.hpp"
#include "OnlineSubsystemUtils_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class OnlineSubsystemSteamCore.SteamCoreAuthComponentModuleInterface
// 0x0000 (0x0028 - 0x0028)
class USteamCoreAuthComponentModuleInterface final : public UHandlerComponentFactory
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SteamCoreAuthComponentModuleInterface">();
	}
	static class USteamCoreAuthComponentModuleInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<USteamCoreAuthComponentModuleInterface>();
	}
};
static_assert(alignof(USteamCoreAuthComponentModuleInterface) == 0x000008, "Wrong alignment on USteamCoreAuthComponentModuleInterface");
static_assert(sizeof(USteamCoreAuthComponentModuleInterface) == 0x000028, "Wrong size on USteamCoreAuthComponentModuleInterface");

// Class OnlineSubsystemSteamCore.OnlineSessionInterfaceSteamCoreUtils
// 0x0000 (0x0028 - 0x0028)
class UOnlineSessionInterfaceSteamCoreUtils final : public UObject
{
public:
	static TArray<class FString> GetJoinedLobbyIds();
	static class FString GetLastJoinedLobbyId();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineSessionInterfaceSteamCoreUtils">();
	}
	static class UOnlineSessionInterfaceSteamCoreUtils* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineSessionInterfaceSteamCoreUtils>();
	}
};
static_assert(alignof(UOnlineSessionInterfaceSteamCoreUtils) == 0x000008, "Wrong alignment on UOnlineSessionInterfaceSteamCoreUtils");
static_assert(sizeof(UOnlineSessionInterfaceSteamCoreUtils) == 0x000028, "Wrong size on UOnlineSessionInterfaceSteamCoreUtils");

// Class OnlineSubsystemSteamCore.SteamCoreSubsystemUtilities
// 0x0000 (0x0028 - 0x0028)
class USteamCoreSubsystemUtilities final : public UBlueprintFunctionLibrary
{
public:
	static void FindFriendSessions();
	static void GetExtraSessionSettings(TArray<struct FSteamSessionSetting>* SessionSettings);
	static void GetSessionSettings(class UObject* WorldContextObject, TArray<struct FSteamSessionSetting>* SessionSettings, class FString* SessionName, int32* MaxPlayers, bool* bAllowInvites, bool* bUsesPresence, bool* bAllowJoinInProgress, bool* bAllowJoinViaPresence, bool* bAllowJoinViaPresenceFriendsOnly, bool* bAntiCheatProtected, bool* bUsesStats, bool* bShouldAdvertise, bool* bUseLobbiesIfAvailable, bool* bUseLobbiesVoiceChatIfAvailable);
	static bool SendSessionInviteToFriend(int32 LocalUserNum, const class FString& FriendSteamId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SteamCoreSubsystemUtilities">();
	}
	static class USteamCoreSubsystemUtilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<USteamCoreSubsystemUtilities>();
	}
};
static_assert(alignof(USteamCoreSubsystemUtilities) == 0x000008, "Wrong alignment on USteamCoreSubsystemUtilities");
static_assert(sizeof(USteamCoreSubsystemUtilities) == 0x000028, "Wrong size on USteamCoreSubsystemUtilities");

// Class OnlineSubsystemSteamCore.SteamCoreNetConnection
// 0x0008 (0x1E78 - 0x1E70)
class USteamCoreNetConnection final : public UIpConnection
{
public:
	bool                                          m_bIsPassthrough;                                  // 0x1E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E71[0x7];                                     // 0x1E71(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SteamCoreNetConnection">();
	}
	static class USteamCoreNetConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<USteamCoreNetConnection>();
	}
};
static_assert(alignof(USteamCoreNetConnection) == 0x000008, "Wrong alignment on USteamCoreNetConnection");
static_assert(sizeof(USteamCoreNetConnection) == 0x001E78, "Wrong size on USteamCoreNetConnection");
static_assert(offsetof(USteamCoreNetConnection, m_bIsPassthrough) == 0x001E70, "Member 'USteamCoreNetConnection::m_bIsPassthrough' has a wrong offset!");

// Class OnlineSubsystemSteamCore.SteamCoreNetDriver
// 0x0008 (0x0988 - 0x0980)
class USteamCoreNetDriver final : public UIpNetDriver
{
public:
	uint8                                         Pad_980[0x8];                                      // 0x0980(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SteamCoreNetDriver">();
	}
	static class USteamCoreNetDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<USteamCoreNetDriver>();
	}
};
static_assert(alignof(USteamCoreNetDriver) == 0x000008, "Wrong alignment on USteamCoreNetDriver");
static_assert(sizeof(USteamCoreNetDriver) == 0x000988, "Wrong size on USteamCoreNetDriver");

}

