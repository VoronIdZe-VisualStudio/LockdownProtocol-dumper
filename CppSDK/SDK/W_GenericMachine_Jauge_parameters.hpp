#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GenericMachine_Jauge

#include "Basic.hpp"

#include "E_GenericMachine_State_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_GenericMachine_Jauge.W_GenericMachine_Jauge_C.ExecuteUbergraph_W_GenericMachine_Jauge
// 0x0090 (0x0090 - 0x0000)
struct W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GenericMachine_State                        K2Node_CustomEvent_State;                          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Max;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0024(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Saturate___;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge) == 0x000008, "Wrong alignment on W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge");
static_assert(sizeof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge) == 0x000090, "Wrong size on W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, EntryPoint) == 0x000000, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000010, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, K2Node_CustomEvent_Value) == 0x000018, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, K2Node_CustomEvent_State) == 0x00001C, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, K2Node_CustomEvent_Max) == 0x000020, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::K2Node_CustomEvent_Max' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, K2Node_Event_MyGeometry) == 0x000024, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, K2Node_Event_InDeltaTime) == 0x00005C, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000060, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, K2Node_SwitchEnum_CmpSuccess) == 0x000068, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000070, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, CallFunc_Saturate___) == 0x000080, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::CallFunc_Saturate___' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000088, "Member 'W_GenericMachine_Jauge_C_ExecuteUbergraph_W_GenericMachine_Jauge::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function W_GenericMachine_Jauge.W_GenericMachine_Jauge_C.Rename Infos
// 0x0070 (0x0070 - 0x0000)
struct W_GenericMachine_Jauge_C_Rename_Infos final
{
public:
	class FText                                   Standby;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Ready;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Not_Valid;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Process_0;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Pause;                                             // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Finished;                                          // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Error;                                             // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_GenericMachine_Jauge_C_Rename_Infos) == 0x000008, "Wrong alignment on W_GenericMachine_Jauge_C_Rename_Infos");
static_assert(sizeof(W_GenericMachine_Jauge_C_Rename_Infos) == 0x000070, "Wrong size on W_GenericMachine_Jauge_C_Rename_Infos");
static_assert(offsetof(W_GenericMachine_Jauge_C_Rename_Infos, Standby) == 0x000000, "Member 'W_GenericMachine_Jauge_C_Rename_Infos::Standby' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_Rename_Infos, Ready) == 0x000010, "Member 'W_GenericMachine_Jauge_C_Rename_Infos::Ready' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_Rename_Infos, Not_Valid) == 0x000020, "Member 'W_GenericMachine_Jauge_C_Rename_Infos::Not_Valid' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_Rename_Infos, Process_0) == 0x000030, "Member 'W_GenericMachine_Jauge_C_Rename_Infos::Process_0' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_Rename_Infos, Pause) == 0x000040, "Member 'W_GenericMachine_Jauge_C_Rename_Infos::Pause' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_Rename_Infos, Finished) == 0x000050, "Member 'W_GenericMachine_Jauge_C_Rename_Infos::Finished' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_Rename_Infos, Error) == 0x000060, "Member 'W_GenericMachine_Jauge_C_Rename_Infos::Error' has a wrong offset!");

// Function W_GenericMachine_Jauge.W_GenericMachine_Jauge_C.Set Process
// 0x000C (0x000C - 0x0000)
struct W_GenericMachine_Jauge_C_Set_Process final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GenericMachine_State                        State;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         max_0;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GenericMachine_Jauge_C_Set_Process) == 0x000004, "Wrong alignment on W_GenericMachine_Jauge_C_Set_Process");
static_assert(sizeof(W_GenericMachine_Jauge_C_Set_Process) == 0x00000C, "Wrong size on W_GenericMachine_Jauge_C_Set_Process");
static_assert(offsetof(W_GenericMachine_Jauge_C_Set_Process, Value) == 0x000000, "Member 'W_GenericMachine_Jauge_C_Set_Process::Value' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_Set_Process, State) == 0x000004, "Member 'W_GenericMachine_Jauge_C_Set_Process::State' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_Set_Process, max_0) == 0x000008, "Member 'W_GenericMachine_Jauge_C_Set_Process::max_0' has a wrong offset!");

// Function W_GenericMachine_Jauge.W_GenericMachine_Jauge_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_GenericMachine_Jauge_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GenericMachine_Jauge_C_Tick) == 0x000004, "Wrong alignment on W_GenericMachine_Jauge_C_Tick");
static_assert(sizeof(W_GenericMachine_Jauge_C_Tick) == 0x00003C, "Wrong size on W_GenericMachine_Jauge_C_Tick");
static_assert(offsetof(W_GenericMachine_Jauge_C_Tick, MyGeometry) == 0x000000, "Member 'W_GenericMachine_Jauge_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_GenericMachine_Jauge_C_Tick, InDeltaTime) == 0x000038, "Member 'W_GenericMachine_Jauge_C_Tick::InDeltaTime' has a wrong offset!");

}

