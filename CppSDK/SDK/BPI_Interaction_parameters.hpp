#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Interaction

#include "Basic.hpp"

#include "Str_ItemState_structs.hpp"


namespace SDK::Params
{

// Function BPI_Interaction.BPI_Interaction_C.Get Key
// 0x0008 (0x0008 - 0x0000)
struct BPI_Interaction_C_Get_Key final
{
public:
	class AActor*                                 Key;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_Get_Key) == 0x000008, "Wrong alignment on BPI_Interaction_C_Get_Key");
static_assert(sizeof(BPI_Interaction_C_Get_Key) == 0x000008, "Wrong size on BPI_Interaction_C_Get_Key");
static_assert(offsetof(BPI_Interaction_C_Get_Key, Key) == 0x000000, "Member 'BPI_Interaction_C_Get_Key::Key' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.Get Name
// 0x0018 (0x0018 - 0x0000)
struct BPI_Interaction_C_Get_Name final
{
public:
	class AMec_C*                                 Mec;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_Get_Name) == 0x000008, "Wrong alignment on BPI_Interaction_C_Get_Name");
static_assert(sizeof(BPI_Interaction_C_Get_Name) == 0x000018, "Wrong size on BPI_Interaction_C_Get_Name");
static_assert(offsetof(BPI_Interaction_C_Get_Name, Mec) == 0x000000, "Member 'BPI_Interaction_C_Get_Name::Mec' has a wrong offset!");
static_assert(offsetof(BPI_Interaction_C_Get_Name, Name_0) == 0x000008, "Member 'BPI_Interaction_C_Get_Name::Name_0' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.Local Interaction
// 0x0018 (0x0018 - 0x0000)
struct BPI_Interaction_C_Local_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_Local_Interaction) == 0x000008, "Wrong alignment on BPI_Interaction_C_Local_Interaction");
static_assert(sizeof(BPI_Interaction_C_Local_Interaction) == 0x000018, "Wrong size on BPI_Interaction_C_Local_Interaction");
static_assert(offsetof(BPI_Interaction_C_Local_Interaction, Index_0) == 0x000000, "Member 'BPI_Interaction_C_Local_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(BPI_Interaction_C_Local_Interaction, Source) == 0x000008, "Member 'BPI_Interaction_C_Local_Interaction::Source' has a wrong offset!");
static_assert(offsetof(BPI_Interaction_C_Local_Interaction, Item_State) == 0x000010, "Member 'BPI_Interaction_C_Local_Interaction::Item_State' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.Net Interaction
// 0x0018 (0x0018 - 0x0000)
struct BPI_Interaction_C_Net_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_Net_Interaction) == 0x000008, "Wrong alignment on BPI_Interaction_C_Net_Interaction");
static_assert(sizeof(BPI_Interaction_C_Net_Interaction) == 0x000018, "Wrong size on BPI_Interaction_C_Net_Interaction");
static_assert(offsetof(BPI_Interaction_C_Net_Interaction, Index_0) == 0x000000, "Member 'BPI_Interaction_C_Net_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(BPI_Interaction_C_Net_Interaction, Source) == 0x000008, "Member 'BPI_Interaction_C_Net_Interaction::Source' has a wrong offset!");
static_assert(offsetof(BPI_Interaction_C_Net_Interaction, Item_State) == 0x000010, "Member 'BPI_Interaction_C_Net_Interaction::Item_State' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.Other Interaction
// 0x0018 (0x0018 - 0x0000)
struct BPI_Interaction_C_Other_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_Other_Interaction) == 0x000008, "Wrong alignment on BPI_Interaction_C_Other_Interaction");
static_assert(sizeof(BPI_Interaction_C_Other_Interaction) == 0x000018, "Wrong size on BPI_Interaction_C_Other_Interaction");
static_assert(offsetof(BPI_Interaction_C_Other_Interaction, Index_0) == 0x000000, "Member 'BPI_Interaction_C_Other_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(BPI_Interaction_C_Other_Interaction, Source) == 0x000008, "Member 'BPI_Interaction_C_Other_Interaction::Source' has a wrong offset!");
static_assert(offsetof(BPI_Interaction_C_Other_Interaction, Item_State) == 0x000010, "Member 'BPI_Interaction_C_Other_Interaction::Item_State' has a wrong offset!");

}

