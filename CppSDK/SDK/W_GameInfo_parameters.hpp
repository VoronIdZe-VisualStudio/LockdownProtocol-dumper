#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GameInfo

#include "Basic.hpp"

#include "E_SessionState_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_GameInfo.W_GameInfo_C.ExecuteUbergraph_W_GameInfo
// 0x0490 (0x0490 - 0x0000)
struct W_GameInfo_C_ExecuteUbergraph_W_GameInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0010)()
	class FText                                   Temp_text_Variable_4;                              // 0x0060(0x0010)()
	class FText                                   Temp_text_Variable_5;                              // 0x0070(0x0010)()
	class FText                                   Temp_text_Variable_6;                              // 0x0080(0x0010)()
	class FText                                   Temp_text_Variable_7;                              // 0x0090(0x0010)()
	class FText                                   Temp_text_Variable_8;                              // 0x00A0(0x0010)()
	class FText                                   Temp_text_Variable_9;                              // 0x00B0(0x0010)()
	class FText                                   Temp_text_Variable_10;                             // 0x00C0(0x0010)()
	E_SessionState                                Temp_byte_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_11;                             // 0x00D8(0x0010)()
	class FText                                   Temp_text_Variable_12;                             // 0x00E8(0x0010)()
	class FText                                   Temp_text_Variable_13;                             // 0x00F8(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B[0x1];                                      // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_14;                             // 0x0118(0x0010)()
	class FText                                   Temp_text_Variable_15;                             // 0x0128(0x0010)()
	class FText                                   Temp_text_Variable_16;                             // 0x0138(0x0010)()
	class FText                                   Temp_text_Variable_17;                             // 0x0148(0x0010)()
	class FText                                   Temp_text_Variable_18;                             // 0x0158(0x0010)()
	class FText                                   Temp_text_Variable_19;                             // 0x0168(0x0010)()
	class FText                                   Temp_text_Variable_20;                             // 0x0178(0x0010)()
	class FText                                   Temp_text_Variable_21;                             // 0x0188(0x0010)()
	class FText                                   Temp_text_Variable_22;                             // 0x0198(0x0010)()
	class FText                                   Temp_text_Variable_23;                             // 0x01A8(0x0010)()
	class FText                                   Temp_text_Variable_24;                             // 0x01B8(0x0010)()
	class FText                                   Temp_text_Variable_25;                             // 0x01C8(0x0010)()
	class FText                                   Temp_text_Variable_26;                             // 0x01D8(0x0010)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01E8(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_27;                             // 0x0228(0x0010)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APC_C*                                  K2Node_DynamicCast_AsPC;                           // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHour_ReturnValue;                      // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue_1;                        // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0278(0x0010)()
	int32                                         CallFunc_GetDay_ReturnValue;                       // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0290(0x0010)()
	struct FDateTime                              CallFunc_Now_ReturnValue_2;                        // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMonth_ReturnValue;                     // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue_3;                        // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetYear_ReturnValue;                      // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue_4;                        // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x02C8(0x0010)()
	int32                                         CallFunc_GetSecond_ReturnValue;                    // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_4;             // 0x02E0(0x0010)()
	struct FDateTime                              CallFunc_Now_ReturnValue_5;                        // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinute_ReturnValue;                    // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_5;             // 0x0300(0x0010)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_6;             // 0x0310(0x0010)()
	E_SessionState                                K2Node_CustomEvent_State;                          // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0328(0x0010)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMainGI_C*                              K2Node_DynamicCast_AsMain_GI;                      // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Up_to_date;                     // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0350(0x0010)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_28;                             // 0x0378(0x0010)()
	struct FDateTime                              CallFunc_Now_ReturnValue_6;                        // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinute_ReturnValue_1;                  // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_7;             // 0x0398(0x0010)()
	int32                                         Temp_int_Variable_1;                               // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue_7;                        // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x03B8(0x0010)()
	int32                                         CallFunc_GetSecond_ReturnValue_1;                  // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_8;             // 0x03D0(0x0010)()
	struct FDateTime                              CallFunc_Now_ReturnValue_8;                        // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue_9;                        // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetYear_ReturnValue_1;                    // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMonth_ReturnValue_1;                   // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_9;             // 0x0400(0x0010)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0410(0x0010)()
	struct FDateTime                              CallFunc_Now_ReturnValue_10;                       // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDay_ReturnValue_1;                     // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue_11;                       // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_10;            // 0x0438(0x0010)()
	int32                                         CallFunc_GetMillisecond_ReturnValue;               // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_11;            // 0x0450(0x0010)()
	struct FDateTime                              CallFunc_Now_ReturnValue_12;                       // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHour_ReturnValue_1;                    // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_12;            // 0x0470(0x0010)()
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo) == 0x000008, "Wrong alignment on W_GameInfo_C_ExecuteUbergraph_W_GameInfo");
static_assert(sizeof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo) == 0x000490, "Wrong size on W_GameInfo_C_ExecuteUbergraph_W_GameInfo");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, EntryPoint) == 0x000000, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable) == 0x000008, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Round_ReturnValue) == 0x000018, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_1) == 0x000030, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_2) == 0x000040, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_3) == 0x000050, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_4) == 0x000060, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_5) == 0x000070, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_6) == 0x000080, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_7) == 0x000090, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_8) == 0x0000A0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_9) == 0x0000B0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_10) == 0x0000C0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_byte_Variable) == 0x0000D0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_11) == 0x0000D8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_12) == 0x0000E8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_13) == 0x0000F8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_bool_Variable) == 0x000108, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_byte_Variable_1) == 0x000109, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_byte_Variable_2) == 0x00010A, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_int_Variable) == 0x00010C, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000110, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_14) == 0x000118, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_15) == 0x000128, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_16) == 0x000138, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_17) == 0x000148, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_18) == 0x000158, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_19) == 0x000168, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_20) == 0x000178, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_21) == 0x000188, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_22) == 0x000198, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_22' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_23) == 0x0001A8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_23' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_24) == 0x0001B8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_24' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_25) == 0x0001C8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_25' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_26) == 0x0001D8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_26' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_Event_MyGeometry) == 0x0001E8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_Event_InDeltaTime) == 0x000220, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_27) == 0x000228, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_27' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetPlayerController_ReturnValue) == 0x000238, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_DynamicCast_AsPC) == 0x000240, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_DynamicCast_AsPC' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_DynamicCast_bSuccess) == 0x000248, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000250, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_FInterpTo_ReturnValue) == 0x000258, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue) == 0x000260, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetHour_ReturnValue) == 0x000268, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetHour_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_1) == 0x000270, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000278, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetDay_ReturnValue) == 0x000288, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetDay_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000290, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_2) == 0x0002A0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetMonth_ReturnValue) == 0x0002A8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetMonth_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_3) == 0x0002B0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetYear_ReturnValue) == 0x0002B8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetYear_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Add_IntInt_ReturnValue) == 0x0002BC, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_4) == 0x0002C0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_3) == 0x0002C8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetSecond_ReturnValue) == 0x0002D8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetSecond_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_4) == 0x0002E0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_5) == 0x0002F0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_CustomEvent_Value) == 0x0002F8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetMinute_ReturnValue) == 0x0002FC, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetMinute_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_5) == 0x000300, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_6) == 0x000310, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_CustomEvent_State) == 0x000320, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_Select_Default) == 0x000328, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetGameInstance_ReturnValue) == 0x000338, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_DynamicCast_AsMain_GI) == 0x000340, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_DynamicCast_AsMain_GI' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_DynamicCast_bSuccess_1) == 0x000348, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_CustomEvent_Up_to_date) == 0x000349, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_CustomEvent_Up_to_date' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000350, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_Select_Default_1) == 0x000360, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_SelectString_ReturnValue) == 0x000368, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_text_Variable_28) == 0x000378, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_text_Variable_28' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_6) == 0x000388, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetMinute_ReturnValue_1) == 0x000390, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetMinute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_7) == 0x000398, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, Temp_int_Variable_1) == 0x0003A8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_7) == 0x0003B0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_Select_Default_2) == 0x0003B8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetSecond_ReturnValue_1) == 0x0003C8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetSecond_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0003CC, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_8) == 0x0003D0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_8) == 0x0003E0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_9) == 0x0003E8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetYear_ReturnValue_1) == 0x0003F0, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetYear_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetMonth_ReturnValue_1) == 0x0003F4, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetMonth_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003F8, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_9) == 0x000400, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, K2Node_Select_Default_3) == 0x000410, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_10) == 0x000420, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetDay_ReturnValue_1) == 0x000428, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetDay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_11) == 0x000430, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_10) == 0x000438, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetMillisecond_ReturnValue) == 0x000448, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetMillisecond_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_11) == 0x000450, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Now_ReturnValue_12) == 0x000460, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Now_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_GetHour_ReturnValue_1) == 0x000468, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_GetHour_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00046C, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Conv_IntToText_ReturnValue_12) == 0x000470, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Conv_IntToText_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000480, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_ExecuteUbergraph_W_GameInfo, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x000488, "Member 'W_GameInfo_C_ExecuteUbergraph_W_GameInfo::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function W_GameInfo.W_GameInfo_C.Set Host
// 0x0001 (0x0001 - 0x0000)
struct W_GameInfo_C_Set_Host final
{
public:
	E_SessionState                                State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GameInfo_C_Set_Host) == 0x000001, "Wrong alignment on W_GameInfo_C_Set_Host");
static_assert(sizeof(W_GameInfo_C_Set_Host) == 0x000001, "Wrong size on W_GameInfo_C_Set_Host");
static_assert(offsetof(W_GameInfo_C_Set_Host, State) == 0x000000, "Member 'W_GameInfo_C_Set_Host::State' has a wrong offset!");

// Function W_GameInfo.W_GameInfo_C.Set Ping
// 0x0004 (0x0004 - 0x0000)
struct W_GameInfo_C_Set_Ping final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GameInfo_C_Set_Ping) == 0x000004, "Wrong alignment on W_GameInfo_C_Set_Ping");
static_assert(sizeof(W_GameInfo_C_Set_Ping) == 0x000004, "Wrong size on W_GameInfo_C_Set_Ping");
static_assert(offsetof(W_GameInfo_C_Set_Ping, Value) == 0x000000, "Member 'W_GameInfo_C_Set_Ping::Value' has a wrong offset!");

// Function W_GameInfo.W_GameInfo_C.Show RED
// 0x0001 (0x0001 - 0x0000)
struct W_GameInfo_C_Show_RED final
{
public:
	bool                                          Up_to_date;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GameInfo_C_Show_RED) == 0x000001, "Wrong alignment on W_GameInfo_C_Show_RED");
static_assert(sizeof(W_GameInfo_C_Show_RED) == 0x000001, "Wrong size on W_GameInfo_C_Show_RED");
static_assert(offsetof(W_GameInfo_C_Show_RED, Up_to_date) == 0x000000, "Member 'W_GameInfo_C_Show_RED::Up_to_date' has a wrong offset!");

// Function W_GameInfo.W_GameInfo_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_GameInfo_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GameInfo_C_Tick) == 0x000004, "Wrong alignment on W_GameInfo_C_Tick");
static_assert(sizeof(W_GameInfo_C_Tick) == 0x00003C, "Wrong size on W_GameInfo_C_Tick");
static_assert(offsetof(W_GameInfo_C_Tick, MyGeometry) == 0x000000, "Member 'W_GameInfo_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_GameInfo_C_Tick, InDeltaTime) == 0x000038, "Member 'W_GameInfo_C_Tick::InDeltaTime' has a wrong offset!");

}

