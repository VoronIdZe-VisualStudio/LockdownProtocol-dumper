#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Settings_Value

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Str_GameSetting_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Settings_Value.W_Settings_Value_C
// 0x00A8 (0x0378 - 0x02D0)
class UW_Settings_Value_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HorizontalBox;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_1;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpinBox*                               SpinBox_115;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Settings_Name_C*                     W_Settings_Name;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x02F8(0x0010)(Edit, BlueprintVisible)
	float                                         Size;                                              // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Default;                                           // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         min_0;                                             // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         max_0;                                             // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Slider_Min;                                        // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Slider_Max;                                        // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta;                                             // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Exponent;                                          // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min_Fractional_Digits;                             // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Fractional_Digits;                             // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Generated;                                         // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_GameSetting                       Settings;                                          // 0x0338(0x0040)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_Settings_Value(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Settings_Value_C">();
	}
	static class UW_Settings_Value_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Settings_Value_C>();
	}
};
static_assert(alignof(UW_Settings_Value_C) == 0x000008, "Wrong alignment on UW_Settings_Value_C");
static_assert(sizeof(UW_Settings_Value_C) == 0x000378, "Wrong size on UW_Settings_Value_C");
static_assert(offsetof(UW_Settings_Value_C, UberGraphFrame) == 0x0002D0, "Member 'UW_Settings_Value_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, HorizontalBox) == 0x0002D8, "Member 'UW_Settings_Value_C::HorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, SizeBox_1) == 0x0002E0, "Member 'UW_Settings_Value_C::SizeBox_1' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, SpinBox_115) == 0x0002E8, "Member 'UW_Settings_Value_C::SpinBox_115' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, W_Settings_Name) == 0x0002F0, "Member 'UW_Settings_Value_C::W_Settings_Name' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Name_0) == 0x0002F8, "Member 'UW_Settings_Value_C::Name_0' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Size) == 0x000308, "Member 'UW_Settings_Value_C::Size' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Default) == 0x00030C, "Member 'UW_Settings_Value_C::Default' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, min_0) == 0x000310, "Member 'UW_Settings_Value_C::min_0' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, max_0) == 0x000314, "Member 'UW_Settings_Value_C::max_0' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Slider_Min) == 0x000318, "Member 'UW_Settings_Value_C::Slider_Min' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Slider_Max) == 0x00031C, "Member 'UW_Settings_Value_C::Slider_Max' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Delta) == 0x000320, "Member 'UW_Settings_Value_C::Delta' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Exponent) == 0x000324, "Member 'UW_Settings_Value_C::Exponent' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Min_Fractional_Digits) == 0x000328, "Member 'UW_Settings_Value_C::Min_Fractional_Digits' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Max_Fractional_Digits) == 0x00032C, "Member 'UW_Settings_Value_C::Max_Fractional_Digits' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Generated) == 0x000330, "Member 'UW_Settings_Value_C::Generated' has a wrong offset!");
static_assert(offsetof(UW_Settings_Value_C, Settings) == 0x000338, "Member 'UW_Settings_Value_C::Settings' has a wrong offset!");

}

