#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MainBar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_MainBar.W_MainBar_C.ExecuteUbergraph_W_MainBar
// 0x0148 (0x0148 - 0x0000)
struct W_MainBar_C_ExecuteUbergraph_W_MainBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BarPart_C*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0048(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_Menu_C*>                      CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_Menu_C*                              CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta__;                                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta___1;                                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BarPart_C*                           CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_target_Padding_Left;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_target_Padding_Right;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_BarPart_C*>                   K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainBar_C_ExecuteUbergraph_W_MainBar) == 0x000008, "Wrong alignment on W_MainBar_C_ExecuteUbergraph_W_MainBar");
static_assert(sizeof(W_MainBar_C_ExecuteUbergraph_W_MainBar) == 0x000148, "Wrong size on W_MainBar_C_ExecuteUbergraph_W_MainBar");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, EntryPoint) == 0x000000, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_BreakVector2D_X) == 0x000008, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, K2Node_MakeStruct_Margin) == 0x00001C, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, K2Node_Event_IsDesignTime) == 0x000044, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, K2Node_Event_MyGeometry) == 0x000048, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, K2Node_Event_InDeltaTime) == 0x000080, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, K2Node_CustomEvent_Index) == 0x000084, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000088, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000A0, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Delta__) == 0x0000A8, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Delta__' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Delta___1) == 0x0000B0, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Delta___1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Get_target_Padding_Left) == 0x0000D0, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Get_target_Padding_Left' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Get_target_Padding_Right) == 0x0000D8, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Get_target_Padding_Right' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, Temp_int_Loop_Counter_Variable_1) == 0x0000E0, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E4, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_BreakVector2D_X_1) == 0x0000F0, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_BreakVector2D_Y_1) == 0x0000F8, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_FInterpTo_ReturnValue) == 0x000100, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, K2Node_MakeArray_Array) == 0x000108, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000118, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_FInterpTo_ReturnValue_1) == 0x000120, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x000128, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, CallFunc_MakeVector2D_ReturnValue) == 0x000130, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, K2Node_MakeStruct_Left_ImplicitCast) == 0x000140, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_ExecuteUbergraph_W_MainBar, K2Node_MakeStruct_Right_ImplicitCast) == 0x000144, "Member 'W_MainBar_C_ExecuteUbergraph_W_MainBar::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");

// Function W_MainBar.W_MainBar_C.Get Padding
// 0x0038 (0x0038 - 0x0000)
struct W_MainBar_C_Get_Padding final
{
public:
	struct FVector2D                              Padding_0;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainBar_C_Get_Padding) == 0x000008, "Wrong alignment on W_MainBar_C_Get_Padding");
static_assert(sizeof(W_MainBar_C_Get_Padding) == 0x000038, "Wrong size on W_MainBar_C_Get_Padding");
static_assert(offsetof(W_MainBar_C_Get_Padding, Padding_0) == 0x000000, "Member 'W_MainBar_C_Get_Padding::Padding_0' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_Padding, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000010, "Member 'W_MainBar_C_Get_Padding::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_Padding, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'W_MainBar_C_Get_Padding::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_Padding, CallFunc_MakeVector2D_X_ImplicitCast) == 0x000028, "Member 'W_MainBar_C_Get_Padding::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_Padding, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000030, "Member 'W_MainBar_C_Get_Padding::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function W_MainBar.W_MainBar_C.Get target Padding
// 0x0128 (0x0128 - 0x0000)
struct W_MainBar_C_Get_target_Padding final
{
public:
	double                                        Left;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Right;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0024(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BarPart_C*                           CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x0090(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalTopLeft_ReturnValue;              // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainBar_C_Get_target_Padding) == 0x000008, "Wrong alignment on W_MainBar_C_Get_target_Padding");
static_assert(sizeof(W_MainBar_C_Get_target_Padding) == 0x000128, "Wrong size on W_MainBar_C_Get_target_Padding");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, Left) == 0x000000, "Member 'W_MainBar_C_Get_target_Padding::Left' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, Right) == 0x000008, "Member 'W_MainBar_C_Get_target_Padding::Right' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_GetCachedGeometry_ReturnValue) == 0x000024, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_SelectFloat_ReturnValue_1) == 0x000060, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_GetLocalSize_ReturnValue) == 0x000068, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_BreakVector2D_X) == 0x000078, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_Array_Get_Item) == 0x000088, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x000090, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_GetLocalTopLeft_ReturnValue) == 0x0000C8, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_GetLocalTopLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_GetLocalSize_ReturnValue_1) == 0x0000D8, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_BreakVector2D_X_1) == 0x0000E8, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_BreakVector2D_Y_1) == 0x0000F0, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_BreakVector2D_X_2) == 0x0000F8, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_BreakVector2D_Y_2) == 0x000100, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000108, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000110, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000118, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Get_target_Padding, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000120, "Member 'W_MainBar_C_Get_target_Padding::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function W_MainBar.W_MainBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_MainBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainBar_C_PreConstruct) == 0x000001, "Wrong alignment on W_MainBar_C_PreConstruct");
static_assert(sizeof(W_MainBar_C_PreConstruct) == 0x000001, "Wrong size on W_MainBar_C_PreConstruct");
static_assert(offsetof(W_MainBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_MainBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_MainBar.W_MainBar_C.Set Bar Index
// 0x0004 (0x0004 - 0x0000)
struct W_MainBar_C_Set_Bar_Index final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainBar_C_Set_Bar_Index) == 0x000004, "Wrong alignment on W_MainBar_C_Set_Bar_Index");
static_assert(sizeof(W_MainBar_C_Set_Bar_Index) == 0x000004, "Wrong size on W_MainBar_C_Set_Bar_Index");
static_assert(offsetof(W_MainBar_C_Set_Bar_Index, Index_0) == 0x000000, "Member 'W_MainBar_C_Set_Bar_Index::Index_0' has a wrong offset!");

// Function W_MainBar.W_MainBar_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_MainBar_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MainBar_C_Tick) == 0x000004, "Wrong alignment on W_MainBar_C_Tick");
static_assert(sizeof(W_MainBar_C_Tick) == 0x00003C, "Wrong size on W_MainBar_C_Tick");
static_assert(offsetof(W_MainBar_C_Tick, MyGeometry) == 0x000000, "Member 'W_MainBar_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MainBar_C_Tick, InDeltaTime) == 0x000038, "Member 'W_MainBar_C_Tick::InDeltaTime' has a wrong offset!");

}

