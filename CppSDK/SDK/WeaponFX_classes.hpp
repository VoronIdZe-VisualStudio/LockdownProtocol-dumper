#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponFX

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WeaponFX.WeaponFX_C
// 0x0068 (0x0310 - 0x02A8)
class AWeaponFX_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SMG_Ring;                                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ogive_Fire;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ogive_FrontRing;                                   // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ogive_RearRing;                                    // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shorty_Fire;                                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shotgun_Fire;                                      // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Spark_Ring;                                        // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Bullet_Brake;                                      // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Bullet_Ring;                                       // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Bullet_Fire;                                       // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          FOV;                                               // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Random_Brake;                                      // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Bullet_Shot(int32 Type, bool Light);
	void ExecuteUbergraph_WeaponFX(int32 EntryPoint);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WeaponFX_C">();
	}
	static class AWeaponFX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeaponFX_C>();
	}
};
static_assert(alignof(AWeaponFX_C) == 0x000008, "Wrong alignment on AWeaponFX_C");
static_assert(sizeof(AWeaponFX_C) == 0x000310, "Wrong size on AWeaponFX_C");
static_assert(offsetof(AWeaponFX_C, UberGraphFrame) == 0x0002A8, "Member 'AWeaponFX_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, SMG_Ring) == 0x0002B0, "Member 'AWeaponFX_C::SMG_Ring' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, Ogive_Fire) == 0x0002B8, "Member 'AWeaponFX_C::Ogive_Fire' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, Ogive_FrontRing) == 0x0002C0, "Member 'AWeaponFX_C::Ogive_FrontRing' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, Ogive_RearRing) == 0x0002C8, "Member 'AWeaponFX_C::Ogive_RearRing' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, Shorty_Fire) == 0x0002D0, "Member 'AWeaponFX_C::Shorty_Fire' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, Shotgun_Fire) == 0x0002D8, "Member 'AWeaponFX_C::Shotgun_Fire' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, Spark_Ring) == 0x0002E0, "Member 'AWeaponFX_C::Spark_Ring' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, Bullet_Brake) == 0x0002E8, "Member 'AWeaponFX_C::Bullet_Brake' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, Bullet_Ring) == 0x0002F0, "Member 'AWeaponFX_C::Bullet_Ring' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, Bullet_Fire) == 0x0002F8, "Member 'AWeaponFX_C::Bullet_Fire' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, DefaultSceneRoot) == 0x000300, "Member 'AWeaponFX_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, FOV) == 0x000308, "Member 'AWeaponFX_C::FOV' has a wrong offset!");
static_assert(offsetof(AWeaponFX_C, Random_Brake) == 0x000309, "Member 'AWeaponFX_C::Random_Brake' has a wrong offset!");

}

