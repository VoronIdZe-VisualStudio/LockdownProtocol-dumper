#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerDoor

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerDoor.PlayerDoor_C
// 0x0050 (0x02F8 - 0x02A8)
class APlayerDoor_C final : public AActor
{
public:
	class UChildActorComponent*                   C_Button;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SpawnLocation;                                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       W_Infos;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PlayerDoorInfo_C*                    Screen;                                            // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 Player;                                            // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AButton_C*                              Button;                                            // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AGM_C*                                  GM_Ref;                                            // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void OnRep_Player();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerDoor_C">();
	}
	static class APlayerDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerDoor_C>();
	}
};
static_assert(alignof(APlayerDoor_C) == 0x000008, "Wrong alignment on APlayerDoor_C");
static_assert(sizeof(APlayerDoor_C) == 0x0002F8, "Wrong size on APlayerDoor_C");
static_assert(offsetof(APlayerDoor_C, C_Button) == 0x0002A8, "Member 'APlayerDoor_C::C_Button' has a wrong offset!");
static_assert(offsetof(APlayerDoor_C, SpawnLocation) == 0x0002B0, "Member 'APlayerDoor_C::SpawnLocation' has a wrong offset!");
static_assert(offsetof(APlayerDoor_C, W_Infos) == 0x0002B8, "Member 'APlayerDoor_C::W_Infos' has a wrong offset!");
static_assert(offsetof(APlayerDoor_C, Door) == 0x0002C0, "Member 'APlayerDoor_C::Door' has a wrong offset!");
static_assert(offsetof(APlayerDoor_C, Root) == 0x0002C8, "Member 'APlayerDoor_C::Root' has a wrong offset!");
static_assert(offsetof(APlayerDoor_C, Index_0) == 0x0002D0, "Member 'APlayerDoor_C::Index_0' has a wrong offset!");
static_assert(offsetof(APlayerDoor_C, Screen) == 0x0002D8, "Member 'APlayerDoor_C::Screen' has a wrong offset!");
static_assert(offsetof(APlayerDoor_C, Player) == 0x0002E0, "Member 'APlayerDoor_C::Player' has a wrong offset!");
static_assert(offsetof(APlayerDoor_C, Button) == 0x0002E8, "Member 'APlayerDoor_C::Button' has a wrong offset!");
static_assert(offsetof(APlayerDoor_C, GM_Ref) == 0x0002F0, "Member 'APlayerDoor_C::GM_Ref' has a wrong offset!");

}

