#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Data_Gun

#include "Basic.hpp"

#include "E_ShotPattern_structs.hpp"
#include "Data_Item_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Data_Gun.Data_Gun_C
// 0x0110 (0x03E0 - 0x02D0)
class UData_Gun_C final : public UData_Item_C
{
public:
	class UAnimMontage*                           AM_Hand_Fire;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AM_Body_Fire;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Crit;                                              // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Stamina_Damage;                                    // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Crit_Stamina;                                      // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fire_Rate;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Auto;                                              // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Impact_Type;                                       // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Recoil_Spread;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Recoil_Interp;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Recoil_Recover;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Offset_Vertical;                                   // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Offset_Horizontal;                                 // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Recoil_Elevation;                                  // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shot_Oscillation;                                  // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stand_Precision;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stand_Oscillation;                                 // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Walk_Precision;                                    // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Walk_Oscillation;                                  // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Run_Precision;                                     // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Run_Oscillation;                                   // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Air_Precision;                                     // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Precision_Exhausted;                               // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Precision_Reactivity;                              // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sprint_Recover;                                    // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Oscillation_Reactivity;                            // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Recoil_Reactivity;                                 // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ShotPattern                                 Pattern;                                           // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Shake_Intensity;                                   // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Capacity;                                          // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Stun;                                              // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Stamina_Usage;                                     // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           Pattern_Recoil;                                    // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           Pattern_Spread;                                    // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           Pattern_Effects;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Min_Ammo_Table;                                    // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Ammo_Table;                                    // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min_Ammo_Crate;                                    // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Ammo_Crate;                                    // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Get_Random_Ammo(bool Crate, int32* Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Data_Gun_C">();
	}
	static class UData_Gun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UData_Gun_C>();
	}
};
static_assert(alignof(UData_Gun_C) == 0x000010, "Wrong alignment on UData_Gun_C");
static_assert(sizeof(UData_Gun_C) == 0x0003E0, "Wrong size on UData_Gun_C");
static_assert(offsetof(UData_Gun_C, AM_Hand_Fire) == 0x0002C8, "Member 'UData_Gun_C::AM_Hand_Fire' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, AM_Body_Fire) == 0x0002D0, "Member 'UData_Gun_C::AM_Body_Fire' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Damage) == 0x0002D8, "Member 'UData_Gun_C::Damage' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Crit) == 0x0002DC, "Member 'UData_Gun_C::Crit' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Stamina_Damage) == 0x0002E0, "Member 'UData_Gun_C::Stamina_Damage' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Crit_Stamina) == 0x0002E4, "Member 'UData_Gun_C::Crit_Stamina' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Fire_Rate) == 0x0002E8, "Member 'UData_Gun_C::Fire_Rate' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Auto) == 0x0002F0, "Member 'UData_Gun_C::Auto' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Impact_Type) == 0x0002F4, "Member 'UData_Gun_C::Impact_Type' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Recoil_Spread) == 0x0002F8, "Member 'UData_Gun_C::Recoil_Spread' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Recoil_Interp) == 0x000300, "Member 'UData_Gun_C::Recoil_Interp' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Recoil_Recover) == 0x000308, "Member 'UData_Gun_C::Recoil_Recover' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Offset_Vertical) == 0x000310, "Member 'UData_Gun_C::Offset_Vertical' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Offset_Horizontal) == 0x000318, "Member 'UData_Gun_C::Offset_Horizontal' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Recoil_Elevation) == 0x000320, "Member 'UData_Gun_C::Recoil_Elevation' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Shot_Oscillation) == 0x000328, "Member 'UData_Gun_C::Shot_Oscillation' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Stand_Precision) == 0x000330, "Member 'UData_Gun_C::Stand_Precision' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Stand_Oscillation) == 0x000338, "Member 'UData_Gun_C::Stand_Oscillation' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Walk_Precision) == 0x000340, "Member 'UData_Gun_C::Walk_Precision' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Walk_Oscillation) == 0x000348, "Member 'UData_Gun_C::Walk_Oscillation' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Run_Precision) == 0x000350, "Member 'UData_Gun_C::Run_Precision' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Run_Oscillation) == 0x000358, "Member 'UData_Gun_C::Run_Oscillation' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Air_Precision) == 0x000360, "Member 'UData_Gun_C::Air_Precision' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Precision_Exhausted) == 0x000368, "Member 'UData_Gun_C::Precision_Exhausted' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Precision_Reactivity) == 0x000370, "Member 'UData_Gun_C::Precision_Reactivity' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Sprint_Recover) == 0x000378, "Member 'UData_Gun_C::Sprint_Recover' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Oscillation_Reactivity) == 0x000380, "Member 'UData_Gun_C::Oscillation_Reactivity' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Recoil_Reactivity) == 0x000388, "Member 'UData_Gun_C::Recoil_Reactivity' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Pattern) == 0x000390, "Member 'UData_Gun_C::Pattern' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Shake_Intensity) == 0x000398, "Member 'UData_Gun_C::Shake_Intensity' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Capacity) == 0x0003A0, "Member 'UData_Gun_C::Capacity' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Stun) == 0x0003A8, "Member 'UData_Gun_C::Stun' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Stamina_Usage) == 0x0003B0, "Member 'UData_Gun_C::Stamina_Usage' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Pattern_Recoil) == 0x0003B8, "Member 'UData_Gun_C::Pattern_Recoil' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Pattern_Spread) == 0x0003C0, "Member 'UData_Gun_C::Pattern_Spread' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Pattern_Effects) == 0x0003C8, "Member 'UData_Gun_C::Pattern_Effects' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Min_Ammo_Table) == 0x0003D0, "Member 'UData_Gun_C::Min_Ammo_Table' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Max_Ammo_Table) == 0x0003D4, "Member 'UData_Gun_C::Max_Ammo_Table' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Min_Ammo_Crate) == 0x0003D8, "Member 'UData_Gun_C::Min_Ammo_Crate' has a wrong offset!");
static_assert(offsetof(UData_Gun_C, Max_Ammo_Crate) == 0x0003DC, "Member 'UData_Gun_C::Max_Ammo_Crate' has a wrong offset!");

}

