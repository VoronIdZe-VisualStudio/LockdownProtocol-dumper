#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GamepadSettings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_GamepadSettings.W_GamepadSettings_C
// 0x00C0 (0x0390 - 0x02D0)
class UW_GamepadSettings_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 GamepadCirlce_Dead;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GamepadCirlce_Final;                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GamepadCirlce_Limit;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GamepadCirlce_Real;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Selector_C*                          Selector_Horizontal;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Selector_C*                          Selector_UseGamepad;                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Selector_C*                          Selector_Vertical;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Slider_C*                            Slider_Boost;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Slider_C*                            Slider_Camera;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Slider_C*                            Slider_Deadzone;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Slider_C*                            Slider_Limit;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Slider_C*                            Slider_Linearity;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Slider_C*                            Slider_Ratio;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Bannier_C*                           W_Bannier;                                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Bannier_C*                           W_Bannier_1;                                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Bannier_C*                           W_Bannier_2;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class APC_C*                                  PC_Ref;                                            // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 Mec_Ref;                                           // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USave_Settings_C*                       Save_Ref;                                          // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Gamepad_Real_M;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Gamepad_Final_M;                                   // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Gamepad_Dead_M;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Gamepad_Limit_M;                                   // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__W_GamepadSettings_Selector_UseGamepad_K2Node_ComponentBoundEvent_10_On_Value_Change__DelegateSignature(int32 Index_0);
	void BndEvt__W_GamepadSettings_Slider_Boost_1_K2Node_ComponentBoundEvent_8_On_Confirm_Value__DelegateSignature(double Value);
	void BndEvt__W_GamepadSettings_Slider_Boost_K2Node_ComponentBoundEvent_7_On_Confirm_Value__DelegateSignature(double Value);
	void BndEvt__W_GamepadSettings_Slider_Deadzone_K2Node_ComponentBoundEvent_0_On_Confirm_Value__DelegateSignature(double Value);
	void BndEvt__W_GamepadSettings_Slider_Deadzone_K2Node_ComponentBoundEvent_6_On_Value_Change__DelegateSignature(double Value);
	void BndEvt__W_GamepadSettings_Slider_Limit_K2Node_ComponentBoundEvent_5_On_Confirm_Value__DelegateSignature(double Value);
	void BndEvt__W_GamepadSettings_Slider_Limit_K2Node_ComponentBoundEvent_9_On_Value_Change__DelegateSignature(double Value);
	void BndEvt__W_GamepadSettings_Slider_Linearity_K2Node_ComponentBoundEvent_2_On_Confirm_Value__DelegateSignature(double Value);
	void BndEvt__W_InputsSettings_Slider_Camera_K2Node_ComponentBoundEvent_1_On_Confirm_Value__DelegateSignature(double Value);
	void BndEvt__W_InputsSettings_W_Selector_2_K2Node_ComponentBoundEvent_4_On_Value_Change__DelegateSignature(int32 Index_0);
	void BndEvt__W_InputsSettings_W_Selector_3_K2Node_ComponentBoundEvent_3_On_Value_Change__DelegateSignature(int32 Index_0);
	void Construct();
	void ExecuteUbergraph_W_GamepadSettings(int32 EntryPoint);
	void Save_Settings();
	void Set_Default_Modes();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_GamepadSettings_C">();
	}
	static class UW_GamepadSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_GamepadSettings_C>();
	}
};
static_assert(alignof(UW_GamepadSettings_C) == 0x000008, "Wrong alignment on UW_GamepadSettings_C");
static_assert(sizeof(UW_GamepadSettings_C) == 0x000390, "Wrong size on UW_GamepadSettings_C");
static_assert(offsetof(UW_GamepadSettings_C, UberGraphFrame) == 0x0002D0, "Member 'UW_GamepadSettings_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, GamepadCirlce_Dead) == 0x0002D8, "Member 'UW_GamepadSettings_C::GamepadCirlce_Dead' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, GamepadCirlce_Final) == 0x0002E0, "Member 'UW_GamepadSettings_C::GamepadCirlce_Final' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, GamepadCirlce_Limit) == 0x0002E8, "Member 'UW_GamepadSettings_C::GamepadCirlce_Limit' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, GamepadCirlce_Real) == 0x0002F0, "Member 'UW_GamepadSettings_C::GamepadCirlce_Real' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Selector_Horizontal) == 0x0002F8, "Member 'UW_GamepadSettings_C::Selector_Horizontal' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Selector_UseGamepad) == 0x000300, "Member 'UW_GamepadSettings_C::Selector_UseGamepad' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Selector_Vertical) == 0x000308, "Member 'UW_GamepadSettings_C::Selector_Vertical' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Slider_Boost) == 0x000310, "Member 'UW_GamepadSettings_C::Slider_Boost' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Slider_Camera) == 0x000318, "Member 'UW_GamepadSettings_C::Slider_Camera' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Slider_Deadzone) == 0x000320, "Member 'UW_GamepadSettings_C::Slider_Deadzone' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Slider_Limit) == 0x000328, "Member 'UW_GamepadSettings_C::Slider_Limit' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Slider_Linearity) == 0x000330, "Member 'UW_GamepadSettings_C::Slider_Linearity' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Slider_Ratio) == 0x000338, "Member 'UW_GamepadSettings_C::Slider_Ratio' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, W_Bannier) == 0x000340, "Member 'UW_GamepadSettings_C::W_Bannier' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, W_Bannier_1) == 0x000348, "Member 'UW_GamepadSettings_C::W_Bannier_1' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, W_Bannier_2) == 0x000350, "Member 'UW_GamepadSettings_C::W_Bannier_2' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, PC_Ref) == 0x000358, "Member 'UW_GamepadSettings_C::PC_Ref' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Mec_Ref) == 0x000360, "Member 'UW_GamepadSettings_C::Mec_Ref' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Save_Ref) == 0x000368, "Member 'UW_GamepadSettings_C::Save_Ref' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Gamepad_Real_M) == 0x000370, "Member 'UW_GamepadSettings_C::Gamepad_Real_M' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Gamepad_Final_M) == 0x000378, "Member 'UW_GamepadSettings_C::Gamepad_Final_M' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Gamepad_Dead_M) == 0x000380, "Member 'UW_GamepadSettings_C::Gamepad_Dead_M' has a wrong offset!");
static_assert(offsetof(UW_GamepadSettings_C, Gamepad_Limit_M) == 0x000388, "Member 'UW_GamepadSettings_C::Gamepad_Limit_M' has a wrong offset!");

}

