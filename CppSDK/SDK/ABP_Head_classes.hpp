#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Head

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Head.ABP_Head_C
// 0x01E0 (0x05A0 - 0x03C0)
class UABP_Head_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03C8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x03D0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03D8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x03F8(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0520(0x0020)()
	struct FAnimNode_MeshSpaceRefPose             AnimGraphNode_MeshRefPose;                         // 0x0540(0x0010)()
	class AMec_C*                                 Mec_Ref;                                           // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Head_Rotation;                                     // 0x0558(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Head_Location;                                     // 0x0570(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Eye_Squint;                                        // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Head_Curve_Y;                                      // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time_X;                                      // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void Dead(bool Front);
	void ExecuteUbergraph_ABP_Head(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Head_C">();
	}
	static class UABP_Head_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Head_C>();
	}
};
static_assert(alignof(UABP_Head_C) == 0x000010, "Wrong alignment on UABP_Head_C");
static_assert(sizeof(UABP_Head_C) == 0x0005A0, "Wrong size on UABP_Head_C");
static_assert(offsetof(UABP_Head_C, UberGraphFrame) == 0x0003C0, "Member 'UABP_Head_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, AnimBlueprintExtension_PropertyAccess) == 0x0003C8, "Member 'UABP_Head_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, AnimBlueprintExtension_Base) == 0x0003D0, "Member 'UABP_Head_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, AnimGraphNode_Root) == 0x0003D8, "Member 'UABP_Head_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, AnimGraphNode_ModifyBone) == 0x0003F8, "Member 'UABP_Head_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, AnimGraphNode_ComponentToLocalSpace) == 0x000520, "Member 'UABP_Head_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, AnimGraphNode_MeshRefPose) == 0x000540, "Member 'UABP_Head_C::AnimGraphNode_MeshRefPose' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, Mec_Ref) == 0x000550, "Member 'UABP_Head_C::Mec_Ref' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, Head_Rotation) == 0x000558, "Member 'UABP_Head_C::Head_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, Head_Location) == 0x000570, "Member 'UABP_Head_C::Head_Location' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, Eye_Squint) == 0x000588, "Member 'UABP_Head_C::Eye_Squint' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, Head_Curve_Y) == 0x000590, "Member 'UABP_Head_C::Head_Curve_Y' has a wrong offset!");
static_assert(offsetof(UABP_Head_C, Delta_Time_X) == 0x000598, "Member 'UABP_Head_C::Delta_Time_X' has a wrong offset!");

}

