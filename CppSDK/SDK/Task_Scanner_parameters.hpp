#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Scanner

#include "Basic.hpp"

#include "E_Difficulty_structs.hpp"


namespace SDK::Params
{

// Function Task_Scanner.Task_Scanner_C.ExecuteUbergraph_Task_Scanner
// 0x0030 (0x0030 - 0x0000)
struct Task_Scanner_C_ExecuteUbergraph_Task_Scanner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Difficulty                                  Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Scanner_C_ExecuteUbergraph_Task_Scanner) == 0x000008, "Wrong alignment on Task_Scanner_C_ExecuteUbergraph_Task_Scanner");
static_assert(sizeof(Task_Scanner_C_ExecuteUbergraph_Task_Scanner) == 0x000030, "Wrong size on Task_Scanner_C_ExecuteUbergraph_Task_Scanner");
static_assert(offsetof(Task_Scanner_C_ExecuteUbergraph_Task_Scanner, EntryPoint) == 0x000000, "Member 'Task_Scanner_C_ExecuteUbergraph_Task_Scanner::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_Scanner_C_ExecuteUbergraph_Task_Scanner, Temp_byte_Variable) == 0x000004, "Member 'Task_Scanner_C_ExecuteUbergraph_Task_Scanner::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_Scanner_C_ExecuteUbergraph_Task_Scanner, Temp_int_Variable) == 0x000008, "Member 'Task_Scanner_C_ExecuteUbergraph_Task_Scanner::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Task_Scanner_C_ExecuteUbergraph_Task_Scanner, K2Node_Event_Delay) == 0x000010, "Member 'Task_Scanner_C_ExecuteUbergraph_Task_Scanner::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(Task_Scanner_C_ExecuteUbergraph_Task_Scanner, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'Task_Scanner_C_ExecuteUbergraph_Task_Scanner::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Scanner_C_ExecuteUbergraph_Task_Scanner, K2Node_Select_Default) == 0x000028, "Member 'Task_Scanner_C_ExecuteUbergraph_Task_Scanner::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_Scanner_C_ExecuteUbergraph_Task_Scanner, CallFunc_Delay_Duration_ImplicitCast) == 0x00002C, "Member 'Task_Scanner_C_ExecuteUbergraph_Task_Scanner::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function Task_Scanner.Task_Scanner_C.Start Task
// 0x0008 (0x0008 - 0x0000)
struct Task_Scanner_C_Start_Task final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Scanner_C_Start_Task) == 0x000008, "Wrong alignment on Task_Scanner_C_Start_Task");
static_assert(sizeof(Task_Scanner_C_Start_Task) == 0x000008, "Wrong size on Task_Scanner_C_Start_Task");
static_assert(offsetof(Task_Scanner_C_Start_Task, Delay) == 0x000000, "Member 'Task_Scanner_C_Start_Task::Delay' has a wrong offset!");

}

