#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Inventory

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Inventory.W_Inventory_C.ExecuteUbergraph_W_Inventory
// 0x02D8 (0x02D8 - 0x0000)
struct W_Inventory_C_ExecuteUbergraph_W_Inventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0040(0x0038)(NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0078(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Delta__;                                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x00D8(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x0150(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta___1;                                // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Delta___2;                                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue_1;           // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_2;         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0240(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0250(0x0010)()
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_8;                        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_8;                        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_9;                        // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_9;                        // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_Current_ImplicitCast;  // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Inventory_C_ExecuteUbergraph_W_Inventory) == 0x000008, "Wrong alignment on W_Inventory_C_ExecuteUbergraph_W_Inventory");
static_assert(sizeof(W_Inventory_C_ExecuteUbergraph_W_Inventory) == 0x0002D8, "Wrong size on W_Inventory_C_ExecuteUbergraph_W_Inventory");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, EntryPoint) == 0x000000, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_X) == 0x000008, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, K2Node_MakeStruct_WidgetTransform) == 0x000040, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, K2Node_Event_MyGeometry) == 0x000078, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, K2Node_Event_InDeltaTime) == 0x0000B0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, K2Node_Event_IsDesignTime) == 0x0000B4, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_Delta__) == 0x0000B8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_Delta__' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_X_1) == 0x0000C0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_Y_1) == 0x0000C8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_FInterpTo_ReturnValue) == 0x0000D0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_GetCachedGeometry_ReturnValue) == 0x0000D8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000110, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_GetLocalSize_ReturnValue) == 0x000118, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_MakeVector2D_ReturnValue_1) == 0x000128, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_X_2) == 0x000138, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_Y_2) == 0x000140, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_FClamp_ReturnValue) == 0x000148, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x000150, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_GetLocalSize_ReturnValue_1) == 0x000188, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_X_3) == 0x000198, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_Y_3) == 0x0001A0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_X_4) == 0x0001A8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_Y_4) == 0x0001B0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_FClamp_ReturnValue_1) == 0x0001B8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_Delta___1) == 0x0001C0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_Delta___1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_FInterpTo_ReturnValue_1) == 0x0001C8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x0001D0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_MakeVector2D_ReturnValue_2) == 0x0001D8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_X_5) == 0x0001E8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_Y_5) == 0x0001F0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_Delta___2) == 0x0001F8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_Delta___2' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_GetRenderOpacity_ReturnValue) == 0x000200, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_GetRenderOpacity_ReturnValue_1) == 0x000204, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_GetRenderOpacity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_SelectFloat_ReturnValue) == 0x000208, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000210, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000218, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_MakeVector2D_ReturnValue_3) == 0x000220, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_FInterpTo_Constant_ReturnValue_2) == 0x000230, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_FInterpTo_Constant_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_IsValid_ReturnValue_1) == 0x000238, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_IsValid_ReturnValue_2) == 0x000239, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_Conv_StringToText_ReturnValue) == 0x000240, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000250, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_X_6) == 0x000260, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_Y_6) == 0x000268, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000270, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_X_7) == 0x000278, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_Y_7) == 0x000280, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x000288, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_X_8) == 0x000290, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_Y_8) == 0x000298, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_X_9) == 0x0002A0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_X_9' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_BreakVector2D_Y_9) == 0x0002A8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_BreakVector2D_Y_9' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0002B0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0002B8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_FInterpTo_Constant_Current_ImplicitCast) == 0x0002C0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_FInterpTo_Constant_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0002C8, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0002D0, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_ExecuteUbergraph_W_Inventory, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x0002D4, "Member 'W_Inventory_C_ExecuteUbergraph_W_Inventory::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function W_Inventory.W_Inventory_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Inventory_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Inventory_C_PreConstruct) == 0x000001, "Wrong alignment on W_Inventory_C_PreConstruct");
static_assert(sizeof(W_Inventory_C_PreConstruct) == 0x000001, "Wrong size on W_Inventory_C_PreConstruct");
static_assert(offsetof(W_Inventory_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Inventory_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Inventory.W_Inventory_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Inventory_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Inventory_C_Tick) == 0x000004, "Wrong alignment on W_Inventory_C_Tick");
static_assert(sizeof(W_Inventory_C_Tick) == 0x00003C, "Wrong size on W_Inventory_C_Tick");
static_assert(offsetof(W_Inventory_C_Tick, MyGeometry) == 0x000000, "Member 'W_Inventory_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Inventory_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Inventory_C_Tick::InDeltaTime' has a wrong offset!");

}

