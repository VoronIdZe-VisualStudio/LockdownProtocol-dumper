#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_groundMarking

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_groundMarking.BP_groundMarking_C
// 0x0040 (0x02E8 - 0x02A8)
class ABP_groundMarking_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Cube;                                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                position;                                          // 0x02C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_groundMarking_C">();
	}
	static class ABP_groundMarking_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_groundMarking_C>();
	}
};
static_assert(alignof(ABP_groundMarking_C) == 0x000008, "Wrong alignment on ABP_groundMarking_C");
static_assert(sizeof(ABP_groundMarking_C) == 0x0002E8, "Wrong size on ABP_groundMarking_C");
static_assert(offsetof(ABP_groundMarking_C, Cube) == 0x0002A8, "Member 'ABP_groundMarking_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_groundMarking_C, Decal) == 0x0002B0, "Member 'ABP_groundMarking_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_groundMarking_C, Root) == 0x0002B8, "Member 'ABP_groundMarking_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_groundMarking_C, position) == 0x0002C0, "Member 'ABP_groundMarking_C::position' has a wrong offset!");
static_assert(offsetof(ABP_groundMarking_C, Color) == 0x0002D8, "Member 'ABP_groundMarking_C::Color' has a wrong offset!");

}

