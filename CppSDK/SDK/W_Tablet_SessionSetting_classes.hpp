#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Tablet_SessionSetting

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Tablet_SessionSetting.W_Tablet_SessionSetting_C
// 0x0100 (0x03D0 - 0x02D0)
class UW_Tablet_SessionSetting_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowBackground;                                    // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Tablet_ButtonText_C*                 B_Reset;                                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Background;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Left_Text;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LeftBG;                                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Name_Text;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Right_Text;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                RightBG;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Title;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Tablet_Trigger_C*                    Trigger_Left;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Tablet_Trigger_C*                    Trigger_Right;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Value_Text;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Hovered;                                           // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              Right_Trigger;                                     // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FString                                 Name_0;                                            // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Text_Size;                                         // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Letter_Spacing;                                    // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Letter_Thickness;                                  // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Unovered_Color;                                    // 0x036C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Hovered_Color;                                     // 0x037C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Hovered_Text_Color;                                // 0x038C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Unovered_Text_Color;                               // 0x039C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Color_Preset;                                      // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Left_Trigger;                                      // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              Default;                                           // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__W_Tablet_ButtonText_W_Tablet_Trigger_K2Node_ComponentBoundEvent_0_On_Pressed__DelegateSignature();
	void BndEvt__W_Tablet_ButtonText_W_Tablet_Trigger_K2Node_ComponentBoundEvent_4_On_Enter__DelegateSignature();
	void BndEvt__W_Tablet_ButtonText_W_Tablet_Trigger_K2Node_ComponentBoundEvent_5_On_Leave__DelegateSignature();
	void BndEvt__W_Tablet_SessionSetting_B_Reset_K2Node_ComponentBoundEvent_6_On_Pressed__DelegateSignature();
	void BndEvt__W_Tablet_SessionSetting_Trigger_Right_K2Node_ComponentBoundEvent_1_On_Enter__DelegateSignature();
	void BndEvt__W_Tablet_SessionSetting_Trigger_Right_K2Node_ComponentBoundEvent_2_On_Leave__DelegateSignature();
	void BndEvt__W_Tablet_SessionSetting_Trigger_Right_K2Node_ComponentBoundEvent_3_On_Pressed__DelegateSignature();
	void ExecuteUbergraph_W_Tablet_SessionSetting(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Update_Value(const class FString& Text);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Tablet_SessionSetting_C">();
	}
	static class UW_Tablet_SessionSetting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Tablet_SessionSetting_C>();
	}
};
static_assert(alignof(UW_Tablet_SessionSetting_C) == 0x000008, "Wrong alignment on UW_Tablet_SessionSetting_C");
static_assert(sizeof(UW_Tablet_SessionSetting_C) == 0x0003D0, "Wrong size on UW_Tablet_SessionSetting_C");
static_assert(offsetof(UW_Tablet_SessionSetting_C, UberGraphFrame) == 0x0002D0, "Member 'UW_Tablet_SessionSetting_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, ShowBackground) == 0x0002D8, "Member 'UW_Tablet_SessionSetting_C::ShowBackground' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, B_Reset) == 0x0002E0, "Member 'UW_Tablet_SessionSetting_C::B_Reset' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Background) == 0x0002E8, "Member 'UW_Tablet_SessionSetting_C::Background' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Left_Text) == 0x0002F0, "Member 'UW_Tablet_SessionSetting_C::Left_Text' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, LeftBG) == 0x0002F8, "Member 'UW_Tablet_SessionSetting_C::LeftBG' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Name_Text) == 0x000300, "Member 'UW_Tablet_SessionSetting_C::Name_Text' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Right_Text) == 0x000308, "Member 'UW_Tablet_SessionSetting_C::Right_Text' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, RightBG) == 0x000310, "Member 'UW_Tablet_SessionSetting_C::RightBG' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Title) == 0x000318, "Member 'UW_Tablet_SessionSetting_C::Title' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Trigger_Left) == 0x000320, "Member 'UW_Tablet_SessionSetting_C::Trigger_Left' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Trigger_Right) == 0x000328, "Member 'UW_Tablet_SessionSetting_C::Trigger_Right' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Value_Text) == 0x000330, "Member 'UW_Tablet_SessionSetting_C::Value_Text' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Hovered) == 0x000338, "Member 'UW_Tablet_SessionSetting_C::Hovered' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Right_Trigger) == 0x000340, "Member 'UW_Tablet_SessionSetting_C::Right_Trigger' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Name_0) == 0x000350, "Member 'UW_Tablet_SessionSetting_C::Name_0' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Text_Size) == 0x000360, "Member 'UW_Tablet_SessionSetting_C::Text_Size' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Letter_Spacing) == 0x000364, "Member 'UW_Tablet_SessionSetting_C::Letter_Spacing' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Letter_Thickness) == 0x000368, "Member 'UW_Tablet_SessionSetting_C::Letter_Thickness' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Unovered_Color) == 0x00036C, "Member 'UW_Tablet_SessionSetting_C::Unovered_Color' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Hovered_Color) == 0x00037C, "Member 'UW_Tablet_SessionSetting_C::Hovered_Color' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Hovered_Text_Color) == 0x00038C, "Member 'UW_Tablet_SessionSetting_C::Hovered_Text_Color' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Unovered_Text_Color) == 0x00039C, "Member 'UW_Tablet_SessionSetting_C::Unovered_Text_Color' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Color_Preset) == 0x0003AC, "Member 'UW_Tablet_SessionSetting_C::Color_Preset' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Left_Trigger) == 0x0003B0, "Member 'UW_Tablet_SessionSetting_C::Left_Trigger' has a wrong offset!");
static_assert(offsetof(UW_Tablet_SessionSetting_C, Default) == 0x0003C0, "Member 'UW_Tablet_SessionSetting_C::Default' has a wrong offset!");

}

