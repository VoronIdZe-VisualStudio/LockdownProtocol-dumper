#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NumPad

#include "Basic.hpp"


namespace SDK::Params
{

// Function NumPad.NumPad_C.UserConstructionScript
// 0x0160 (0x0160 - 0x0000)
struct NumPad_C_UserConstructionScript final
{
public:
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AButton_C*                              K2Node_DynamicCast_AsButton;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_1;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate_3;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_2;                     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_3;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate_4;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate_5;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_4;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_5;                     // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate_6;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate_7;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_6;                     // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_7;                     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate_8;            // 0x00FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate_9;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_8;                     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_9;                     // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMec_C* Source)>         K2Node_CreateDelegate_OutputDelegate_10;           // 0x013C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              K2Node_DynamicCast_AsButton_10;                    // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_UserConstructionScript) == 0x000008, "Wrong alignment on NumPad_C_UserConstructionScript");
static_assert(sizeof(NumPad_C_UserConstructionScript) == 0x000160, "Wrong size on NumPad_C_UserConstructionScript");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton) == 0x000020, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton_1) == 0x000030, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton_1' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_3) == 0x00004C, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton_2) == 0x000060, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton_2' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton_3) == 0x000070, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton_3' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_4) == 0x00007C, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_5) == 0x00008C, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton_4) == 0x0000A0, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton_4' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton_5) == 0x0000B0, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton_5' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000BC, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000CC, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton_6) == 0x0000E0, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton_6' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_6) == 0x0000E8, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton_7) == 0x0000F0, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton_7' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_7) == 0x0000F8, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000FC, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_9) == 0x00010C, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton_8) == 0x000120, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton_8' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_8) == 0x000128, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton_9) == 0x000130, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton_9' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_9) == 0x000138, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_10) == 0x00013C, "Member 'NumPad_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_AsButton_10) == 0x000150, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_AsButton_10' has a wrong offset!");
static_assert(offsetof(NumPad_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_10) == 0x000158, "Member 'NumPad_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");

// Function NumPad.NumPad_C.Push 1
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_1 final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_1) == 0x000008, "Wrong alignment on NumPad_C_Push_1");
static_assert(sizeof(NumPad_C_Push_1) == 0x000008, "Wrong size on NumPad_C_Push_1");
static_assert(offsetof(NumPad_C_Push_1, Source) == 0x000000, "Member 'NumPad_C_Push_1::Source' has a wrong offset!");

// Function NumPad.NumPad_C.Push 2
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_2 final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_2) == 0x000008, "Wrong alignment on NumPad_C_Push_2");
static_assert(sizeof(NumPad_C_Push_2) == 0x000008, "Wrong size on NumPad_C_Push_2");
static_assert(offsetof(NumPad_C_Push_2, Source) == 0x000000, "Member 'NumPad_C_Push_2::Source' has a wrong offset!");

// Function NumPad.NumPad_C.Push 3
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_3 final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_3) == 0x000008, "Wrong alignment on NumPad_C_Push_3");
static_assert(sizeof(NumPad_C_Push_3) == 0x000008, "Wrong size on NumPad_C_Push_3");
static_assert(offsetof(NumPad_C_Push_3, Source) == 0x000000, "Member 'NumPad_C_Push_3::Source' has a wrong offset!");

// Function NumPad.NumPad_C.Push 4
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_4 final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_4) == 0x000008, "Wrong alignment on NumPad_C_Push_4");
static_assert(sizeof(NumPad_C_Push_4) == 0x000008, "Wrong size on NumPad_C_Push_4");
static_assert(offsetof(NumPad_C_Push_4, Source) == 0x000000, "Member 'NumPad_C_Push_4::Source' has a wrong offset!");

// Function NumPad.NumPad_C.Push 5
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_5 final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_5) == 0x000008, "Wrong alignment on NumPad_C_Push_5");
static_assert(sizeof(NumPad_C_Push_5) == 0x000008, "Wrong size on NumPad_C_Push_5");
static_assert(offsetof(NumPad_C_Push_5, Source) == 0x000000, "Member 'NumPad_C_Push_5::Source' has a wrong offset!");

// Function NumPad.NumPad_C.Push 6
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_6 final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_6) == 0x000008, "Wrong alignment on NumPad_C_Push_6");
static_assert(sizeof(NumPad_C_Push_6) == 0x000008, "Wrong size on NumPad_C_Push_6");
static_assert(offsetof(NumPad_C_Push_6, Source) == 0x000000, "Member 'NumPad_C_Push_6::Source' has a wrong offset!");

// Function NumPad.NumPad_C.Push 7
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_7 final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_7) == 0x000008, "Wrong alignment on NumPad_C_Push_7");
static_assert(sizeof(NumPad_C_Push_7) == 0x000008, "Wrong size on NumPad_C_Push_7");
static_assert(offsetof(NumPad_C_Push_7, Source) == 0x000000, "Member 'NumPad_C_Push_7::Source' has a wrong offset!");

// Function NumPad.NumPad_C.Push 8
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_8 final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_8) == 0x000008, "Wrong alignment on NumPad_C_Push_8");
static_assert(sizeof(NumPad_C_Push_8) == 0x000008, "Wrong size on NumPad_C_Push_8");
static_assert(offsetof(NumPad_C_Push_8, Source) == 0x000000, "Member 'NumPad_C_Push_8::Source' has a wrong offset!");

// Function NumPad.NumPad_C.Push 9
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_9 final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_9) == 0x000008, "Wrong alignment on NumPad_C_Push_9");
static_assert(sizeof(NumPad_C_Push_9) == 0x000008, "Wrong size on NumPad_C_Push_9");
static_assert(offsetof(NumPad_C_Push_9, Source) == 0x000000, "Member 'NumPad_C_Push_9::Source' has a wrong offset!");

// Function NumPad.NumPad_C.Push 0
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_0 final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_0) == 0x000008, "Wrong alignment on NumPad_C_Push_0");
static_assert(sizeof(NumPad_C_Push_0) == 0x000008, "Wrong size on NumPad_C_Push_0");
static_assert(offsetof(NumPad_C_Push_0, Source) == 0x000000, "Member 'NumPad_C_Push_0::Source' has a wrong offset!");

// Function NumPad.NumPad_C.Push Cheat
// 0x0008 (0x0008 - 0x0000)
struct NumPad_C_Push_Cheat final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_Push_Cheat) == 0x000008, "Wrong alignment on NumPad_C_Push_Cheat");
static_assert(sizeof(NumPad_C_Push_Cheat) == 0x000008, "Wrong size on NumPad_C_Push_Cheat");
static_assert(offsetof(NumPad_C_Push_Cheat, Source) == 0x000000, "Member 'NumPad_C_Push_Cheat::Source' has a wrong offset!");

// Function NumPad.NumPad_C.ExecuteUbergraph_NumPad
// 0x0060 (0x0060 - 0x0000)
struct NumPad_C_ExecuteUbergraph_NumPad final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_CustomEvent_Source_10;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Source_9;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Source_8;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Source_7;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Source_6;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Source_5;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Source_4;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Source_3;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Source_2;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Source_1;                       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Source;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumPad_C_ExecuteUbergraph_NumPad) == 0x000008, "Wrong alignment on NumPad_C_ExecuteUbergraph_NumPad");
static_assert(sizeof(NumPad_C_ExecuteUbergraph_NumPad) == 0x000060, "Wrong size on NumPad_C_ExecuteUbergraph_NumPad");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, EntryPoint) == 0x000000, "Member 'NumPad_C_ExecuteUbergraph_NumPad::EntryPoint' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source_10) == 0x000008, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source_10' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source_9) == 0x000010, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source_9' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source_8) == 0x000018, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source_8' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source_7) == 0x000020, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source_7' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source_6) == 0x000028, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source_6' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source_5) == 0x000030, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source_5' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source_4) == 0x000038, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source_4' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source_3) == 0x000040, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source_3' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source_2) == 0x000048, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source_2' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source_1) == 0x000050, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source_1' has a wrong offset!");
static_assert(offsetof(NumPad_C_ExecuteUbergraph_NumPad, K2Node_CustomEvent_Source) == 0x000058, "Member 'NumPad_C_ExecuteUbergraph_NumPad::K2Node_CustomEvent_Source' has a wrong offset!");

}

