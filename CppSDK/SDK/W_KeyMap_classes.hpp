#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_KeyMap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_KeyMap.W_KeyMap_C
// 0x00F0 (0x03C0 - 0x02D0)
class UW_KeyMap_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowBackground;                                    // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Trigger_C*                           All_Trigger;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Background;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Background_Empty;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            Button_Default;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            Button_Unbind;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Choice_Overlay;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Key_Size;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Trigger_C*                           Key_Trigger;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KeyText;                                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_NameLine_C*                          W_NameLine;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 Index)>   On_Value_Change;                                   // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UW_Menu_C*                              Menu;                                              // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Action;                                            // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Name_Width;                                        // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Hovered;                                           // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputMappingContext*                   Mapping;                                           // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputMappingContext*                   Default_Mapping;                                   // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Key_Width;                                         // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Listen_Remap;                                      // 0x038C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputKeySelector*                      Input_key_sele;                                    // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APC_C*                                  PC_Ref;                                            // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Empty__;                                           // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Detail;                                            // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class USave_Settings_C*                       Save_Ref;                                          // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__W_KeyMap_Button_Default_K2Node_ComponentBoundEvent_7_On_Pressed__DelegateSignature();
	void BndEvt__W_KeyMap_Button_Unbind_K2Node_ComponentBoundEvent_4_On_Pressed__DelegateSignature();
	void BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_2_On_Enter__DelegateSignature();
	void BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_3_On_Leave__DelegateSignature();
	void BndEvt__W_KeyMap_Key_Trigger_K2Node_ComponentBoundEvent_6_On_Pressed__DelegateSignature();
	void BndEvt__W_Selector_All_Trigger_K2Node_ComponentBoundEvent_0_On_Enter__DelegateSignature();
	void BndEvt__W_Selector_All_Trigger_K2Node_ComponentBoundEvent_1_On_Leave__DelegateSignature();
	void Construct();
	void Convert_Names(const class FText& Value, class FText* Result);
	void ExecuteUbergraph_W_KeyMap(int32 EntryPoint);
	void InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void Load_Key();
	void On_Press_Key(const struct FKey& Key);
	void Override_Other_Action();
	void PreConstruct(bool IsDesignTime);
	void Reset_Key(bool Override);
	void Save_Input(const struct FKey& Key);
	void Set_HUD_Tablet_Help();
	void Set_KeyText(bool Listen);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Unbind_Key();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_KeyMap_C">();
	}
	static class UW_KeyMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_KeyMap_C>();
	}
};
static_assert(alignof(UW_KeyMap_C) == 0x000008, "Wrong alignment on UW_KeyMap_C");
static_assert(sizeof(UW_KeyMap_C) == 0x0003C0, "Wrong size on UW_KeyMap_C");
static_assert(offsetof(UW_KeyMap_C, UberGraphFrame) == 0x0002D0, "Member 'UW_KeyMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, ShowBackground) == 0x0002D8, "Member 'UW_KeyMap_C::ShowBackground' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, All_Trigger) == 0x0002E0, "Member 'UW_KeyMap_C::All_Trigger' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Background) == 0x0002E8, "Member 'UW_KeyMap_C::Background' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Background_Empty) == 0x0002F0, "Member 'UW_KeyMap_C::Background_Empty' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Button_Default) == 0x0002F8, "Member 'UW_KeyMap_C::Button_Default' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Button_Unbind) == 0x000300, "Member 'UW_KeyMap_C::Button_Unbind' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Choice_Overlay) == 0x000308, "Member 'UW_KeyMap_C::Choice_Overlay' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Key_Size) == 0x000310, "Member 'UW_KeyMap_C::Key_Size' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Key_Trigger) == 0x000318, "Member 'UW_KeyMap_C::Key_Trigger' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, KeyText) == 0x000320, "Member 'UW_KeyMap_C::KeyText' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, SizeBox) == 0x000328, "Member 'UW_KeyMap_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, W_NameLine) == 0x000330, "Member 'UW_KeyMap_C::W_NameLine' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, On_Value_Change) == 0x000338, "Member 'UW_KeyMap_C::On_Value_Change' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Menu) == 0x000348, "Member 'UW_KeyMap_C::Menu' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Action) == 0x000350, "Member 'UW_KeyMap_C::Action' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Height) == 0x000358, "Member 'UW_KeyMap_C::Height' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Name_Width) == 0x00035C, "Member 'UW_KeyMap_C::Name_Width' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Name_0) == 0x000360, "Member 'UW_KeyMap_C::Name_0' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Hovered) == 0x000370, "Member 'UW_KeyMap_C::Hovered' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Mapping) == 0x000378, "Member 'UW_KeyMap_C::Mapping' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Default_Mapping) == 0x000380, "Member 'UW_KeyMap_C::Default_Mapping' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Key_Width) == 0x000388, "Member 'UW_KeyMap_C::Key_Width' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Listen_Remap) == 0x00038C, "Member 'UW_KeyMap_C::Listen_Remap' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Input_key_sele) == 0x000390, "Member 'UW_KeyMap_C::Input_key_sele' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, PC_Ref) == 0x000398, "Member 'UW_KeyMap_C::PC_Ref' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Empty__) == 0x0003A0, "Member 'UW_KeyMap_C::Empty__' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Detail) == 0x0003A8, "Member 'UW_KeyMap_C::Detail' has a wrong offset!");
static_assert(offsetof(UW_KeyMap_C, Save_Ref) == 0x0003B8, "Member 'UW_KeyMap_C::Save_Ref' has a wrong offset!");

}

