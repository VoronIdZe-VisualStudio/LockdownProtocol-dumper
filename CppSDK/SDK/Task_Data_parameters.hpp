#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Data

#include "Basic.hpp"

#include "E_Difficulty_structs.hpp"
#include "Enum_Sectors_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Task_Data.Task_Data_C.Check PC Task
// 0x0040 (0x0040 - 0x0000)
struct Task_Data_C_Check_PC_Task final
{
public:
	bool                                          Finished;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _Count;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _Check;                                            // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Difficulty                                  Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AData_PC_C*                             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Data_C_Check_PC_Task) == 0x000008, "Wrong alignment on Task_Data_C_Check_PC_Task");
static_assert(sizeof(Task_Data_C_Check_PC_Task) == 0x000040, "Wrong size on Task_Data_C_Check_PC_Task");
static_assert(offsetof(Task_Data_C_Check_PC_Task, Finished) == 0x000000, "Member 'Task_Data_C_Check_PC_Task::Finished' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, Count) == 0x000004, "Member 'Task_Data_C_Check_PC_Task::Count' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, _Count) == 0x000008, "Member 'Task_Data_C_Check_PC_Task::_Count' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, _Check) == 0x00000C, "Member 'Task_Data_C_Check_PC_Task::_Check' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, Temp_byte_Variable) == 0x00000D, "Member 'Task_Data_C_Check_PC_Task::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, Temp_int_Variable) == 0x000010, "Member 'Task_Data_C_Check_PC_Task::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Task_Data_C_Check_PC_Task::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Task_Data_C_Check_PC_Task::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Task_Data_C_Check_PC_Task::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, Temp_int_Variable_1) == 0x000020, "Member 'Task_Data_C_Check_PC_Task::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'Task_Data_C_Check_PC_Task::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, K2Node_Select_Default) == 0x000028, "Member 'Task_Data_C_Check_PC_Task::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'Task_Data_C_Check_PC_Task::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, CallFunc_Array_Get_Item) == 0x000030, "Member 'Task_Data_C_Check_PC_Task::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Task_Data_C_Check_PC_Task::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Check_PC_Task, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'Task_Data_C_Check_PC_Task::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Task_Data.Task_Data_C.ExecuteUbergraph_Task_Data
// 0x02B8 (0x02B8 - 0x0000)
struct Task_Data_C_ExecuteUbergraph_Task_Data final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	Enum_Sectors                                  Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_6;                            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_10;                           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_11;                           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_12;                           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_13;                           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_Difficulty                                  Temp_byte_Variable_1;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Difficulty                                  Temp_byte_Variable_2;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_14;                           // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_15;                           // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	Enum_Sectors                                  Temp_byte_Variable_3;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AData_PC_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0158(0x0010)(ReferenceParm)
	class AData_PC_C*                             CallFunc_Array_Get_Item;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Map_Position_Location;                // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0194(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AData_PC_C*                             CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AData_PC_C*                             CallFunc_Array_Get_Item_2;                         // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_1;           // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue_1;          // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_PC_Task_Finished;                   // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Check_PC_Task_Count;                      // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Data_C_ExecuteUbergraph_Task_Data) == 0x000008, "Wrong alignment on Task_Data_C_ExecuteUbergraph_Task_Data");
static_assert(sizeof(Task_Data_C_ExecuteUbergraph_Task_Data) == 0x0002B8, "Wrong size on Task_Data_C_ExecuteUbergraph_Task_Data");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, EntryPoint) == 0x000000, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable) == 0x000008, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_1) == 0x000018, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_2) == 0x000028, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_3) == 0x000038, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_4) == 0x000048, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_5) == 0x000058, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_byte_Variable) == 0x000068, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_6) == 0x000070, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_7) == 0x000080, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_8) == 0x000090, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_9) == 0x0000A0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_10) == 0x0000B0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_10' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_11) == 0x0000C0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_11' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_12) == 0x0000D0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_12' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_13) == 0x0000E0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_13' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_byte_Variable_1) == 0x0000F0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_int_Variable) == 0x0000F4, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_byte_Variable_2) == 0x0000F8, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_int_Variable_1) == 0x0000FC, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_int_Loop_Counter_Variable) == 0x000100, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_int_Loop_Counter_Variable_1) == 0x000108, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Add_IntInt_ReturnValue_1) == 0x00010C, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_int_Array_Index_Variable) == 0x000110, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_14) == 0x000118, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_14' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_int_Array_Index_Variable_1) == 0x000128, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_int_Loop_Counter_Variable_2) == 0x00012C, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Add_IntInt_ReturnValue_2) == 0x000130, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_int_Array_Index_Variable_2) == 0x000134, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_string_Variable_15) == 0x000138, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_string_Variable_15' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, Temp_byte_Variable_3) == 0x000148, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, K2Node_Event_Delay) == 0x000150, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_GetAllActorsOfClass_OutActors) == 0x000158, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Array_Get_Item) == 0x000168, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Get_Map_Position_Location) == 0x000178, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Get_Map_Position_Location' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, K2Node_CreateDelegate_OutputDelegate) == 0x000194, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Array_Get_Item_2) == 0x0001B0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Greater_ByteByte_ReturnValue) == 0x0001B8, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Greater_ByteByte_ReturnValue_1) == 0x0001B9, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Greater_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Conv_ByteToString_ReturnValue) == 0x0001C0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Concat_StrStr_ReturnValue) == 0x0001D0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, K2Node_Select_Default) == 0x0001E0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_SelectString_ReturnValue) == 0x0001F0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Conv_ByteToString_ReturnValue_1) == 0x000200, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Conv_ByteToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000210, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000220, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000230, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_SelectString_ReturnValue_1) == 0x000240, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, K2Node_Select_Default_1) == 0x000250, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Array_Length_ReturnValue_1) == 0x000260, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000268, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Less_IntInt_ReturnValue_1) == 0x000278, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000280, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Array_Length_ReturnValue_2) == 0x000290, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Check_PC_Task_Finished) == 0x000294, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Check_PC_Task_Finished' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Check_PC_Task_Count) == 0x000298, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Check_PC_Task_Count' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Less_IntInt_ReturnValue_2) == 0x00029C, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Array_Add_ReturnValue) == 0x0002A0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Array_Length_ReturnValue_3) == 0x0002A4, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, K2Node_Select_Default_2) == 0x0002A8, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, K2Node_Select_Default_3) == 0x0002AC, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Task_Data_C_ExecuteUbergraph_Task_Data, CallFunc_Delay_Duration_ImplicitCast) == 0x0002B0, "Member 'Task_Data_C_ExecuteUbergraph_Task_Data::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function Task_Data.Task_Data_C.Select PC
// 0x0068 (0x0068 - 0x0000)
struct Task_Data_C_Select_PC final
{
public:
	int32                                         PC_Count;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AData_PC_C*>                     Temp_Cases;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AData_PC_C*                             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AData_PC_C*                             CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AData_PC_C*                             CallFunc_Array_Get_Item_2;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AData_PC_C*                             CallFunc_Array_Get_Item_3;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Data_C_Select_PC) == 0x000008, "Wrong alignment on Task_Data_C_Select_PC");
static_assert(sizeof(Task_Data_C_Select_PC) == 0x000068, "Wrong size on Task_Data_C_Select_PC");
static_assert(offsetof(Task_Data_C_Select_PC, PC_Count) == 0x000000, "Member 'Task_Data_C_Select_PC::PC_Count' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, Temp_Cases) == 0x000008, "Member 'Task_Data_C_Select_PC::Temp_Cases' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Task_Data_C_Select_PC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'Task_Data_C_Select_PC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'Task_Data_C_Select_PC::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Task_Data_C_Select_PC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'Task_Data_C_Select_PC::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, CallFunc_Array_Get_Item) == 0x000030, "Member 'Task_Data_C_Select_PC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'Task_Data_C_Select_PC::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'Task_Data_C_Select_PC::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, CallFunc_Array_Get_Item_2) == 0x000048, "Member 'Task_Data_C_Select_PC::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'Task_Data_C_Select_PC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'Task_Data_C_Select_PC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, CallFunc_Array_Get_Item_3) == 0x000058, "Member 'Task_Data_C_Select_PC::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'Task_Data_C_Select_PC::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Data_C_Select_PC, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'Task_Data_C_Select_PC::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Task_Data.Task_Data_C.Start Task
// 0x0008 (0x0008 - 0x0000)
struct Task_Data_C_Start_Task final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Data_C_Start_Task) == 0x000008, "Wrong alignment on Task_Data_C_Start_Task");
static_assert(sizeof(Task_Data_C_Start_Task) == 0x000008, "Wrong size on Task_Data_C_Start_Task");
static_assert(offsetof(Task_Data_C_Start_Task, Delay) == 0x000000, "Member 'Task_Data_C_Start_Task::Delay' has a wrong offset!");

}

