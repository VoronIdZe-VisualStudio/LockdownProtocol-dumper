#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BatteryCharger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_GenericMachine_State_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BatteryCharger.BatteryCharger_C
// 0x0070 (0x0318 - 0x02A8)
class ABatteryCharger_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_BatteryGauge;                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_BatterySocket;                 // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Battery;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Process;                                           // 0x02E0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Battery_Jauge_C*                     W_Screen;                                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer;                                             // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Charge_Speed;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	E_GenericMachine_State                        State;                                             // 0x0300(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            battery;                                           // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AButton_C*                              Button;                                            // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Analyzer_Sample_K2Node_ComponentBoundEvent_1_Place_Item__DelegateSignature();
	void BndEvt__Analyzer_Sample_K2Node_ComponentBoundEvent_2_Take_Item__DelegateSignature();
	void Clear();
	void ExecuteUbergraph_BatteryCharger(int32 EntryPoint);
	void Get_Key(class AActor** Key);
	void Get_Name(class AMec_C* Mec, class FString* Name_0);
	void Local_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Net_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void OnRep_Process();
	void OnRep_State();
	void Other_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Pause_Process();
	void Process_Screen();
	void Process_Tick();
	void ReceiveBeginPlay();
	void Start_Process();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BatteryCharger_C">();
	}
	static class ABatteryCharger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABatteryCharger_C>();
	}
};
static_assert(alignof(ABatteryCharger_C) == 0x000008, "Wrong alignment on ABatteryCharger_C");
static_assert(sizeof(ABatteryCharger_C) == 0x000318, "Wrong size on ABatteryCharger_C");
static_assert(offsetof(ABatteryCharger_C, UberGraphFrame) == 0x0002A8, "Member 'ABatteryCharger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, MapMesh_TaskMachine_BatteryGauge) == 0x0002B0, "Member 'ABatteryCharger_C::MapMesh_TaskMachine_BatteryGauge' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, MapMesh_TaskMachine_BatterySocket) == 0x0002B8, "Member 'ABatteryCharger_C::MapMesh_TaskMachine_BatterySocket' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, C_Battery) == 0x0002C0, "Member 'ABatteryCharger_C::C_Battery' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, Widget) == 0x0002C8, "Member 'ABatteryCharger_C::Widget' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, Root) == 0x0002D0, "Member 'ABatteryCharger_C::Root' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, Cube) == 0x0002D8, "Member 'ABatteryCharger_C::Cube' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, Process) == 0x0002E0, "Member 'ABatteryCharger_C::Process' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, W_Screen) == 0x0002E8, "Member 'ABatteryCharger_C::W_Screen' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, Timer) == 0x0002F0, "Member 'ABatteryCharger_C::Timer' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, Charge_Speed) == 0x0002F8, "Member 'ABatteryCharger_C::Charge_Speed' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, State) == 0x000300, "Member 'ABatteryCharger_C::State' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, battery) == 0x000308, "Member 'ABatteryCharger_C::battery' has a wrong offset!");
static_assert(offsetof(ABatteryCharger_C, Button) == 0x000310, "Member 'ABatteryCharger_C::Button' has a wrong offset!");

}

