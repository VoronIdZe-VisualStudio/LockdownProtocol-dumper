#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyCsv

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class EasyCsv.EasyCSV
// 0x0000 (0x0028 - 0x0028)
class UEasyCSV final : public UBlueprintFunctionLibrary
{
public:
	static struct FRotator ConvertQuatStringToRotator(const class FString& InString);
	static TArray<struct FRotator> ConvertQuatStringToRotatorArray(const class FString& InString);
	static struct FQuat ConvertStringToQuat(const class FString& InString);
	static TArray<struct FQuat> ConvertStringToQuatArray(const class FString& InString);
	static struct FRotator ConvertStringToRotator(const class FString& InString);
	static TArray<struct FRotator> ConvertStringToRotatorArray(const class FString& InString);
	static bool DoesStringRepresentContainer(const class FString& InString);
	static class FString EscapeCharacters(const class FString& InString);
	static TArray<class FString> GetColumnAsStringArray(const struct FEasyCsvInfo& CSV_Info, const class FString& ColumnName, bool* Success);
	static int32 GetColumnCount(const struct FEasyCsvInfo& CSV_Info);
	static void GetFTextComponentsFromRepresentativeFString(const class FString& InString, class FString* NameSpace, class FString* Key, class FString* SourceString);
	static TArray<class FString> GetMapHeaders(const struct FEasyCsvInfo& CSV_Info);
	static int32 GetMapKeyIndex(const struct FEasyCsvInfo& CSV_Info, const class FName Key);
	static TArray<class FName> GetMapKeys(const struct FEasyCsvInfo& CSV_Info);
	static TArray<class FString> GetRowAsStringArray(const struct FEasyCsvInfo& CSV_Info, const class FName RowKey, bool* Success);
	static int32 GetRowCount(const struct FEasyCsvInfo& CSV_Info);
	static class FString GetRowValueAsString(const struct FEasyCsvInfo& CSV_Info, const class FString& ColumnName, const class FName RowKey, bool* Success);
	static bool LoadStringFromLocalFile(const class FString& InPath, class FString* OutString);
	static bool MakeCsvInfoStructFromFile(const class FString& InPath, struct FEasyCsvInfo* OutCsvInfo, bool ParseHeaders, bool ParseKeys);
	static bool MakeCsvInfoStructFromString(const class FString& InString, struct FEasyCsvInfo* OutCsvInfo, bool ParseHeaders, bool ParseKeys);
	static class FString ReplaceEscapedCharacters(const class FString& InString);
	static bool SaveStringToFile(const class FString& InString, const class FString& InDirectory, const class FString& Filename, const class FString& Extension);
	static bool SaveStringToFileWithFullPath(const class FString& InString, const class FString& InFullPath);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EasyCSV">();
	}
	static class UEasyCSV* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEasyCSV>();
	}
};
static_assert(alignof(UEasyCSV) == 0x000008, "Wrong alignment on UEasyCSV");
static_assert(sizeof(UEasyCSV) == 0x000028, "Wrong size on UEasyCSV");

// Class EasyCsv.EasyCsvProjectSettings
// 0x0020 (0x0048 - 0x0028)
class UEasyCsvProjectSettings final : public UObject
{
public:
	int32                                         LogCharacterLimit;                                 // 0x0028(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintDisplayMessagesToLog;                        // 0x002C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintDisplayMessagesToScreen;                     // 0x002D(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DisplayMessagesOnScreenLifetime;                   // 0x0030(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintWarningMessagesToLog;                        // 0x0034(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintWarningMessagesToScreen;                     // 0x0035(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WarningMessagesOnScreenLifetime;                   // 0x0038(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintErrorMessagesToLog;                          // 0x003C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintErrorMessagesToScreen;                       // 0x003D(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ErrorMessagesOnScreenLifetime;                     // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EasyCsvProjectSettings">();
	}
	static class UEasyCsvProjectSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEasyCsvProjectSettings>();
	}
};
static_assert(alignof(UEasyCsvProjectSettings) == 0x000008, "Wrong alignment on UEasyCsvProjectSettings");
static_assert(sizeof(UEasyCsvProjectSettings) == 0x000048, "Wrong size on UEasyCsvProjectSettings");
static_assert(offsetof(UEasyCsvProjectSettings, LogCharacterLimit) == 0x000028, "Member 'UEasyCsvProjectSettings::LogCharacterLimit' has a wrong offset!");
static_assert(offsetof(UEasyCsvProjectSettings, bPrintDisplayMessagesToLog) == 0x00002C, "Member 'UEasyCsvProjectSettings::bPrintDisplayMessagesToLog' has a wrong offset!");
static_assert(offsetof(UEasyCsvProjectSettings, bPrintDisplayMessagesToScreen) == 0x00002D, "Member 'UEasyCsvProjectSettings::bPrintDisplayMessagesToScreen' has a wrong offset!");
static_assert(offsetof(UEasyCsvProjectSettings, DisplayMessagesOnScreenLifetime) == 0x000030, "Member 'UEasyCsvProjectSettings::DisplayMessagesOnScreenLifetime' has a wrong offset!");
static_assert(offsetof(UEasyCsvProjectSettings, bPrintWarningMessagesToLog) == 0x000034, "Member 'UEasyCsvProjectSettings::bPrintWarningMessagesToLog' has a wrong offset!");
static_assert(offsetof(UEasyCsvProjectSettings, bPrintWarningMessagesToScreen) == 0x000035, "Member 'UEasyCsvProjectSettings::bPrintWarningMessagesToScreen' has a wrong offset!");
static_assert(offsetof(UEasyCsvProjectSettings, WarningMessagesOnScreenLifetime) == 0x000038, "Member 'UEasyCsvProjectSettings::WarningMessagesOnScreenLifetime' has a wrong offset!");
static_assert(offsetof(UEasyCsvProjectSettings, bPrintErrorMessagesToLog) == 0x00003C, "Member 'UEasyCsvProjectSettings::bPrintErrorMessagesToLog' has a wrong offset!");
static_assert(offsetof(UEasyCsvProjectSettings, bPrintErrorMessagesToScreen) == 0x00003D, "Member 'UEasyCsvProjectSettings::bPrintErrorMessagesToScreen' has a wrong offset!");
static_assert(offsetof(UEasyCsvProjectSettings, ErrorMessagesOnScreenLifetime) == 0x000040, "Member 'UEasyCsvProjectSettings::ErrorMessagesOnScreenLifetime' has a wrong offset!");

}

