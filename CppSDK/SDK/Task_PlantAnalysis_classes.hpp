#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_PlantAnalysis

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Task_classes.hpp"
#include "E_Difficulty_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Task_PlantAnalysis.Task_PlantAnalysis_C
// 0x0048 (0x03B0 - 0x0368)
class ATask_PlantAnalysis_C final : public ATask_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Task_PlantAnalysis_C;               // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AAnalysis_PC_C*                         PC_Ref;                                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class APlant_C*>                       Plants;                                            // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AMixer_C*                               Mixer;                                             // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AAnalyzer_C*                            Analyzer;                                          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ACentrifuge_C*                          Centrifuge;                                        // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Min_Plants;                                        // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Plants;                                        // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Containers;                                        // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Task_PlantAnalysis_PC_Ref_K2Node_ComponentBoundEvent_0_Finito__DelegateSignature();
	void Clear();
	void ExecuteUbergraph_Task_PlantAnalysis(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Set_Plants();
	void Start_Task(double Delay);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Task_PlantAnalysis_C">();
	}
	static class ATask_PlantAnalysis_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATask_PlantAnalysis_C>();
	}
};
static_assert(alignof(ATask_PlantAnalysis_C) == 0x000008, "Wrong alignment on ATask_PlantAnalysis_C");
static_assert(sizeof(ATask_PlantAnalysis_C) == 0x0003B0, "Wrong size on ATask_PlantAnalysis_C");
static_assert(offsetof(ATask_PlantAnalysis_C, UberGraphFrame_Task_PlantAnalysis_C) == 0x000368, "Member 'ATask_PlantAnalysis_C::UberGraphFrame_Task_PlantAnalysis_C' has a wrong offset!");
static_assert(offsetof(ATask_PlantAnalysis_C, PC_Ref) == 0x000370, "Member 'ATask_PlantAnalysis_C::PC_Ref' has a wrong offset!");
static_assert(offsetof(ATask_PlantAnalysis_C, Plants) == 0x000378, "Member 'ATask_PlantAnalysis_C::Plants' has a wrong offset!");
static_assert(offsetof(ATask_PlantAnalysis_C, Mixer) == 0x000388, "Member 'ATask_PlantAnalysis_C::Mixer' has a wrong offset!");
static_assert(offsetof(ATask_PlantAnalysis_C, Analyzer) == 0x000390, "Member 'ATask_PlantAnalysis_C::Analyzer' has a wrong offset!");
static_assert(offsetof(ATask_PlantAnalysis_C, Centrifuge) == 0x000398, "Member 'ATask_PlantAnalysis_C::Centrifuge' has a wrong offset!");
static_assert(offsetof(ATask_PlantAnalysis_C, Min_Plants) == 0x0003A0, "Member 'ATask_PlantAnalysis_C::Min_Plants' has a wrong offset!");
static_assert(offsetof(ATask_PlantAnalysis_C, Max_Plants) == 0x0003A4, "Member 'ATask_PlantAnalysis_C::Max_Plants' has a wrong offset!");
static_assert(offsetof(ATask_PlantAnalysis_C, Containers) == 0x0003A8, "Member 'ATask_PlantAnalysis_C::Containers' has a wrong offset!");

}

