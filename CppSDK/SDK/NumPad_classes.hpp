#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NumPad

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass NumPad.NumPad_C
// 0x0098 (0x0340 - 0x02A8)
class ANumPad_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   C_Button_Fake1;                                    // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_Fake;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_0;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_9;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_8;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_7;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_6;                                        // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_5;                                        // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_4;                                        // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_3;                                        // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_2;                                        // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button_1;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(uint8 Num)>     Push_Num;                                          // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              Cheat_Pressed;                                     // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AButton_C*                              As_Button;                                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void Push_1(class AMec_C* Source);
	void Push_2(class AMec_C* Source);
	void Push_3(class AMec_C* Source);
	void Push_4(class AMec_C* Source);
	void Push_5(class AMec_C* Source);
	void Push_6(class AMec_C* Source);
	void Push_7(class AMec_C* Source);
	void Push_8(class AMec_C* Source);
	void Push_9(class AMec_C* Source);
	void Push_0(class AMec_C* Source);
	void Push_Cheat(class AMec_C* Source);
	void ExecuteUbergraph_NumPad(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NumPad_C">();
	}
	static class ANumPad_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANumPad_C>();
	}
};
static_assert(alignof(ANumPad_C) == 0x000008, "Wrong alignment on ANumPad_C");
static_assert(sizeof(ANumPad_C) == 0x000340, "Wrong size on ANumPad_C");
static_assert(offsetof(ANumPad_C, UberGraphFrame) == 0x0002A8, "Member 'ANumPad_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_Fake1) == 0x0002B0, "Member 'ANumPad_C::C_Button_Fake1' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_Fake) == 0x0002B8, "Member 'ANumPad_C::C_Button_Fake' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_0) == 0x0002C0, "Member 'ANumPad_C::C_Button_0' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_9) == 0x0002C8, "Member 'ANumPad_C::C_Button_9' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_8) == 0x0002D0, "Member 'ANumPad_C::C_Button_8' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_7) == 0x0002D8, "Member 'ANumPad_C::C_Button_7' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_6) == 0x0002E0, "Member 'ANumPad_C::C_Button_6' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_5) == 0x0002E8, "Member 'ANumPad_C::C_Button_5' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_4) == 0x0002F0, "Member 'ANumPad_C::C_Button_4' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_3) == 0x0002F8, "Member 'ANumPad_C::C_Button_3' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_2) == 0x000300, "Member 'ANumPad_C::C_Button_2' has a wrong offset!");
static_assert(offsetof(ANumPad_C, C_Button_1) == 0x000308, "Member 'ANumPad_C::C_Button_1' has a wrong offset!");
static_assert(offsetof(ANumPad_C, DefaultSceneRoot) == 0x000310, "Member 'ANumPad_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ANumPad_C, Push_Num) == 0x000318, "Member 'ANumPad_C::Push_Num' has a wrong offset!");
static_assert(offsetof(ANumPad_C, Cheat_Pressed) == 0x000328, "Member 'ANumPad_C::Cheat_Pressed' has a wrong offset!");
static_assert(offsetof(ANumPad_C, As_Button) == 0x000338, "Member 'ANumPad_C::As_Button' has a wrong offset!");

}

