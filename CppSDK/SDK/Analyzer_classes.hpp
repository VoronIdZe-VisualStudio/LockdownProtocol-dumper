#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Analyzer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_GenericMachine_State_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Analyzer.Analyzer_C
// 0x00F0 (0x0398 - 0x02A8)
class AAnalyzer_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_ContainerSocket_Frame;         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Collisions1;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Collisions2;                                       // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Collisions;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_SoundPath;                                       // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_SampleSlot;                                      // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button;                                          // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_Computer_Button1;              // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_Computer_Keyboard;             // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_Computer_Button;               // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_Lab_Analyser;                  // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   W;                                                 // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Pitch_A42388F14FADC938BBC329997F230F0B;   // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Volume_A42388F14FADC938BBC329997F230F0B;  // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_A42388F14FADC938BBC329997F230F0B; // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Process;                                           // 0x0348(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_GenericMachine_Jauge_C*              W_Screen;                                          // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer;                                             // 0x0358(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Charge_Speed;                                      // 0x0360(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	E_GenericMachine_State                        State;                                             // 0x0368(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAnalysis_PC_C*                         PC_Ref;                                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AButton_C*                              Button;                                            // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Process;                                       // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASampleSlot_C*                          Result;                                            // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASoundPath_C*                           Sound_Path;                                        // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Apply_State();
	void BndEvt__Analyzer_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature(class AMec_C* Source);
	void BndEvt__Analyzer_Result_K2Node_ComponentBoundEvent_3_Place_Container__DelegateSignature();
	void BndEvt__Analyzer_Result_K2Node_ComponentBoundEvent_4_Take_Container__DelegateSignature();
	void Clear();
	void ExecuteUbergraph_Analyzer(int32 EntryPoint);
	void Get_Key(class AActor** Key);
	void Get_Name(class AMec_C* Mec, class FString* Name_0);
	void Local_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Net_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void OnRep_Alimented();
	void OnRep_Process();
	void OnRep_State();
	void Other_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Pause_Process();
	void Process_Screen();
	void Process_Tick();
	void ReceiveBeginPlay();
	void Start_Anim();
	void Start_Process();
	bool State_is_Valid(const struct FStr_ItemState& Str_ItemState);
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Analyzer_C">();
	}
	static class AAnalyzer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAnalyzer_C>();
	}
};
static_assert(alignof(AAnalyzer_C) == 0x000008, "Wrong alignment on AAnalyzer_C");
static_assert(sizeof(AAnalyzer_C) == 0x000398, "Wrong size on AAnalyzer_C");
static_assert(offsetof(AAnalyzer_C, UberGraphFrame) == 0x0002A8, "Member 'AAnalyzer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, MapMesh_TaskMachine_ContainerSocket_Frame) == 0x0002B0, "Member 'AAnalyzer_C::MapMesh_TaskMachine_ContainerSocket_Frame' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Collisions1) == 0x0002B8, "Member 'AAnalyzer_C::Collisions1' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Collisions2) == 0x0002C0, "Member 'AAnalyzer_C::Collisions2' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Collisions) == 0x0002C8, "Member 'AAnalyzer_C::Collisions' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Audio) == 0x0002D0, "Member 'AAnalyzer_C::Audio' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, C_SoundPath) == 0x0002D8, "Member 'AAnalyzer_C::C_SoundPath' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, C_SampleSlot) == 0x0002E0, "Member 'AAnalyzer_C::C_SampleSlot' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, C_Button) == 0x0002E8, "Member 'AAnalyzer_C::C_Button' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, MapMesh_TaskMachine_Computer_Button1) == 0x0002F0, "Member 'AAnalyzer_C::MapMesh_TaskMachine_Computer_Button1' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, MapMesh_TaskMachine_Computer_Keyboard) == 0x0002F8, "Member 'AAnalyzer_C::MapMesh_TaskMachine_Computer_Keyboard' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, MapMesh_TaskMachine_Computer_Button) == 0x000300, "Member 'AAnalyzer_C::MapMesh_TaskMachine_Computer_Button' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, MapMesh_TaskMachine_Lab_Analyser) == 0x000308, "Member 'AAnalyzer_C::MapMesh_TaskMachine_Lab_Analyser' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, TextRender) == 0x000310, "Member 'AAnalyzer_C::TextRender' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, W) == 0x000318, "Member 'AAnalyzer_C::W' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Widget) == 0x000320, "Member 'AAnalyzer_C::Widget' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Root) == 0x000328, "Member 'AAnalyzer_C::Root' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Timeline_Pitch_A42388F14FADC938BBC329997F230F0B) == 0x000330, "Member 'AAnalyzer_C::Timeline_Pitch_A42388F14FADC938BBC329997F230F0B' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Timeline_Volume_A42388F14FADC938BBC329997F230F0B) == 0x000334, "Member 'AAnalyzer_C::Timeline_Volume_A42388F14FADC938BBC329997F230F0B' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Timeline__Direction_A42388F14FADC938BBC329997F230F0B) == 0x000338, "Member 'AAnalyzer_C::Timeline__Direction_A42388F14FADC938BBC329997F230F0B' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Timeline) == 0x000340, "Member 'AAnalyzer_C::Timeline' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Process) == 0x000348, "Member 'AAnalyzer_C::Process' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, W_Screen) == 0x000350, "Member 'AAnalyzer_C::W_Screen' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Timer) == 0x000358, "Member 'AAnalyzer_C::Timer' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Charge_Speed) == 0x000360, "Member 'AAnalyzer_C::Charge_Speed' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, State) == 0x000368, "Member 'AAnalyzer_C::State' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, PC_Ref) == 0x000370, "Member 'AAnalyzer_C::PC_Ref' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Button) == 0x000378, "Member 'AAnalyzer_C::Button' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Max_Process) == 0x000380, "Member 'AAnalyzer_C::Max_Process' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Result) == 0x000388, "Member 'AAnalyzer_C::Result' has a wrong offset!");
static_assert(offsetof(AAnalyzer_C, Sound_Path) == 0x000390, "Member 'AAnalyzer_C::Sound_Path' has a wrong offset!");

}

