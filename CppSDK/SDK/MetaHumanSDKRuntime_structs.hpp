#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MetaHumanSDKRuntime

#include "Basic.hpp"


namespace SDK
{

// Enum MetaHumanSDKRuntime.EMetaHumanBodyType
// NumValues: 0x0014
enum class EMetaHumanBodyType : uint8
{
	f_med_nrw                                = 0,
	f_med_ovw                                = 1,
	f_med_unw                                = 2,
	f_srt_nrw                                = 3,
	f_srt_ovw                                = 4,
	f_srt_unw                                = 5,
	f_tal_nrw                                = 6,
	f_tal_ovw                                = 7,
	f_tal_unw                                = 8,
	m_med_nrw                                = 9,
	m_med_ovw                                = 10,
	m_med_unw                                = 11,
	m_srt_nrw                                = 12,
	m_srt_ovw                                = 13,
	m_srt_unw                                = 14,
	m_tal_nrw                                = 15,
	m_tal_ovw                                = 16,
	m_tal_unw                                = 17,
	Count                                    = 18,
	EMetaHumanBodyType_MAX                   = 19,
};

// Enum MetaHumanSDKRuntime.EMetaHumanBodyBodyPartIndex
// NumValues: 0x0007
enum class EMetaHumanBodyBodyPartIndex : uint8
{
	Body                                     = 0,
	Face                                     = 1,
	Torso                                    = 2,
	Legs                                     = 3,
	Feet                                     = 4,
	Count                                    = 5,
	EMetaHumanBodyBodyPartIndex_MAX          = 6,
};

// ScriptStruct MetaHumanSDKRuntime.MetaHumanCustomizableBodyPart
// 0x0038 (0x0038 - 0x0000)
struct FMetaHumanCustomizableBodyPart final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UControlRig>                ControlRigClass;                                   // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ControlRigLODThreshold;                            // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsAsset*                          PhysicsAsset;                                      // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RigidBodyLODThreshold;                             // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ComponentName;                                     // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMetaHumanCustomizableBodyPart) == 0x000008, "Wrong alignment on FMetaHumanCustomizableBodyPart");
static_assert(sizeof(FMetaHumanCustomizableBodyPart) == 0x000038, "Wrong size on FMetaHumanCustomizableBodyPart");
static_assert(offsetof(FMetaHumanCustomizableBodyPart, SkeletalMeshComponent) == 0x000000, "Member 'FMetaHumanCustomizableBodyPart::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(FMetaHumanCustomizableBodyPart, ControlRigClass) == 0x000008, "Member 'FMetaHumanCustomizableBodyPart::ControlRigClass' has a wrong offset!");
static_assert(offsetof(FMetaHumanCustomizableBodyPart, ControlRigLODThreshold) == 0x000010, "Member 'FMetaHumanCustomizableBodyPart::ControlRigLODThreshold' has a wrong offset!");
static_assert(offsetof(FMetaHumanCustomizableBodyPart, PhysicsAsset) == 0x000018, "Member 'FMetaHumanCustomizableBodyPart::PhysicsAsset' has a wrong offset!");
static_assert(offsetof(FMetaHumanCustomizableBodyPart, RigidBodyLODThreshold) == 0x000020, "Member 'FMetaHumanCustomizableBodyPart::RigidBodyLODThreshold' has a wrong offset!");
static_assert(offsetof(FMetaHumanCustomizableBodyPart, ComponentName) == 0x000028, "Member 'FMetaHumanCustomizableBodyPart::ComponentName' has a wrong offset!");

}

