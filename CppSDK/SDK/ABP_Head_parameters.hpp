#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Head

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_Head.ABP_Head_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Head_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Head_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Head_C_AnimGraph");
static_assert(sizeof(ABP_Head_C_AnimGraph) == 0x000010, "Wrong size on ABP_Head_C_AnimGraph");
static_assert(offsetof(ABP_Head_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Head_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_Head.ABP_Head_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Head_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Head_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Head_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Head_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Head_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Head_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Head_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Head.ABP_Head_C.Dead
// 0x0001 (0x0001 - 0x0000)
struct ABP_Head_C_Dead final
{
public:
	bool                                          Front;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Head_C_Dead) == 0x000001, "Wrong alignment on ABP_Head_C_Dead");
static_assert(sizeof(ABP_Head_C_Dead) == 0x000001, "Wrong size on ABP_Head_C_Dead");
static_assert(offsetof(ABP_Head_C_Dead, Front) == 0x000000, "Member 'ABP_Head_C_Dead::Front' has a wrong offset!");

// Function ABP_Head.ABP_Head_C.ExecuteUbergraph_ABP_Head
// 0x02B0 (0x02B0 - 0x0000)
struct ABP_Head_C_ExecuteUbergraph_ABP_Head final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_DynamicCast_AsMec;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Front;                          // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Saturate___;                              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Head_C_ExecuteUbergraph_ABP_Head) == 0x000010, "Wrong alignment on ABP_Head_C_ExecuteUbergraph_ABP_Head");
static_assert(sizeof(ABP_Head_C_ExecuteUbergraph_ABP_Head) == 0x0002B0, "Wrong size on ABP_Head_C_ExecuteUbergraph_ABP_Head");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, EntryPoint) == 0x000000, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, K2Node_DynamicCast_AsMec) == 0x000010, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::K2Node_DynamicCast_AsMec' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_MakeRotator_ReturnValue) == 0x000020, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_MakeRotator_ReturnValue_1) == 0x000038, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_GetSocketTransform_ReturnValue) == 0x000070, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000D0, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, K2Node_Event_DeltaTimeX) == 0x0000E8, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, K2Node_CustomEvent_Front) == 0x0000EC, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::K2Node_CustomEvent_Front' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0000F0, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x000150, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_MakeVector_ReturnValue_1) == 0x000168, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_FindLookAtRotation_ReturnValue) == 0x000180, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_BreakRotator_Roll) == 0x000198, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_BreakRotator_Pitch) == 0x00019C, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_BreakRotator_Yaw) == 0x0001A0, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_GetFloatValue_ReturnValue) == 0x0001B0, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_Vector_Distance_ReturnValue) == 0x0001B8, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_MakeRotator_ReturnValue_2) == 0x0001C0, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_MapRangeClamped_ReturnValue) == 0x0001D8, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_VLerp_ReturnValue) == 0x0001E0, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_RLerp_ReturnValue) == 0x0001F8, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_VSize_ReturnValue) == 0x000210, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000218, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000220, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_Saturate___) == 0x000238, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_Saturate___' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_BreakRotator_Roll_1) == 0x000240, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_BreakRotator_Pitch_1) == 0x000244, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_BreakRotator_Yaw_1) == 0x000248, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_FInterpTo_ReturnValue) == 0x000250, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_FClamp_ReturnValue) == 0x000260, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_GetFloatValue_ReturnValue_1) == 0x000268, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_Lerp_ReturnValue) == 0x000270, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000278, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000280, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_RLerp_Alpha_ImplicitCast) == 0x000284, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000288, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x000290, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000298, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0002A0, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Head_C_ExecuteUbergraph_ABP_Head, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0002A4, "Member 'ABP_Head_C_ExecuteUbergraph_ABP_Head::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

}

