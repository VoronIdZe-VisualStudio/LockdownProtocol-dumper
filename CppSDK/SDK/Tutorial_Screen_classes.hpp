#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tutorial_Screen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Tutorial_Screen.Tutorial_Screen_C
// 0x0070 (0x0318 - 0x02A8)
class ATutorial_Screen_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MeshMedium_CorridorSouth_InfoPannel_A;             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMediaSoundComponent*                   MediaSound;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UW_TutoScreeWorld_C*                    Screen;                                            // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AButton_C*                              Button_List_Up;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMediaSource*                           Source_Selected;                                   // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AButton_C*                              Button_List_Down;                                  // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AButton_C*                              Button_List_Start_Video;                           // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UMediaSource*>                   Vidéos;                                            // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Video_Index;                                       // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Waiting;                                           // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Tutorial_Screen(int32 EntryPoint);
	void Move_in_Video(bool Foward);
	void Pause_Video(const struct FTimespan& Time);
	void Play_or_Pause();
	void Play_Video(const struct FTimespan& Time);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Set_Video(class UMediaSource* Source);
	void Waiting_Video();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Tutorial_Screen_C">();
	}
	static class ATutorial_Screen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATutorial_Screen_C>();
	}
};
static_assert(alignof(ATutorial_Screen_C) == 0x000008, "Wrong alignment on ATutorial_Screen_C");
static_assert(sizeof(ATutorial_Screen_C) == 0x000318, "Wrong size on ATutorial_Screen_C");
static_assert(offsetof(ATutorial_Screen_C, UberGraphFrame) == 0x0002A8, "Member 'ATutorial_Screen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, MeshMedium_CorridorSouth_InfoPannel_A) == 0x0002B0, "Member 'ATutorial_Screen_C::MeshMedium_CorridorSouth_InfoPannel_A' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, Audio) == 0x0002B8, "Member 'ATutorial_Screen_C::Audio' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, MediaSound) == 0x0002C0, "Member 'ATutorial_Screen_C::MediaSound' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, Widget) == 0x0002C8, "Member 'ATutorial_Screen_C::Widget' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, DefaultSceneRoot) == 0x0002D0, "Member 'ATutorial_Screen_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, Screen) == 0x0002D8, "Member 'ATutorial_Screen_C::Screen' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, Button_List_Up) == 0x0002E0, "Member 'ATutorial_Screen_C::Button_List_Up' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, Source_Selected) == 0x0002E8, "Member 'ATutorial_Screen_C::Source_Selected' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, Button_List_Down) == 0x0002F0, "Member 'ATutorial_Screen_C::Button_List_Down' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, Button_List_Start_Video) == 0x0002F8, "Member 'ATutorial_Screen_C::Button_List_Start_Video' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, Vidéos) == 0x000300, "Member 'ATutorial_Screen_C::Vidéos' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, Video_Index) == 0x000310, "Member 'ATutorial_Screen_C::Video_Index' has a wrong offset!");
static_assert(offsetof(ATutorial_Screen_C, Waiting) == 0x000314, "Member 'ATutorial_Screen_C::Waiting' has a wrong offset!");

}

