#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_KeyMap

#include "Basic.hpp"

#include "EnhancedInput_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_KeyMap.W_KeyMap_C.Convert Names
// 0x0088 (0x0088 - 0x0000)
struct W_KeyMap_C_Convert_Names final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Result;                                            // 0x0010(0x0010)(Parm, OutParm)
	class FString                                 Text;                                              // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0030(0x0010)()
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0010)()
};
static_assert(alignof(W_KeyMap_C_Convert_Names) == 0x000008, "Wrong alignment on W_KeyMap_C_Convert_Names");
static_assert(sizeof(W_KeyMap_C_Convert_Names) == 0x000088, "Wrong size on W_KeyMap_C_Convert_Names");
static_assert(offsetof(W_KeyMap_C_Convert_Names, Value) == 0x000000, "Member 'W_KeyMap_C_Convert_Names::Value' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Convert_Names, Result) == 0x000010, "Member 'W_KeyMap_C_Convert_Names::Result' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Convert_Names, Text) == 0x000020, "Member 'W_KeyMap_C_Convert_Names::Text' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Convert_Names, CallFunc_TextToUpper_ReturnValue) == 0x000030, "Member 'W_KeyMap_C_Convert_Names::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Convert_Names, K2Node_SwitchString_CmpSuccess) == 0x000040, "Member 'W_KeyMap_C_Convert_Names::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Convert_Names, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'W_KeyMap_C_Convert_Names::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Convert_Names, CallFunc_Replace_ReturnValue) == 0x000058, "Member 'W_KeyMap_C_Convert_Names::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Convert_Names, CallFunc_Replace_ReturnValue_1) == 0x000068, "Member 'W_KeyMap_C_Convert_Names::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Convert_Names, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'W_KeyMap_C_Convert_Names::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_KeyMap.W_KeyMap_C.ExecuteUbergraph_W_KeyMap
// 0x0410 (0x0410 - 0x0000)
struct W_KeyMap_C_ExecuteUbergraph_W_KeyMap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Menu_C*>                      CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        Temp_real_Variable;                                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Menu_C*                              CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Delta__;                                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable;                              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue_1;           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FKey& Key)>       K2Node_CreateDelegate_OutputDelegate;              // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APC_C*                                  K2Node_DynamicCast_AsPC;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_Key_1;                          // 0x0100(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_MapKey_ReturnValue;                       // 0x0120(0x0050)(ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item_1;                         // 0x0178(0x0050)(ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_MapKey_ReturnValue_1;                     // 0x01D0(0x0050)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_226[0x2];                                      // 0x0226(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0228(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0250(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item_2;                         // 0x0270(0x0050)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Override;                       // 0x02C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C7[0x1];                                      // 0x02C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Delta___1;                                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue_2;           // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue_3;           // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_Key;                            // 0x0310(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_Map_Find_Value;                           // 0x0328(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343[0x5];                                      // 0x0343(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_MapKey_ReturnValue_2;                     // 0x0348(0x0050)(ContainsInstancedReference)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_DynamicCast_AsMec;                          // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x03B8(0x0010)()
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_1;         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1;   // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap) == 0x000008, "Wrong alignment on W_KeyMap_C_ExecuteUbergraph_W_KeyMap");
static_assert(sizeof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap) == 0x000410, "Wrong size on W_KeyMap_C_ExecuteUbergraph_W_KeyMap");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, EntryPoint) == 0x000000, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, Temp_bool_Variable) == 0x000014, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_Event_IsDesignTime) == 0x000015, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_Event_MyGeometry) == 0x000018, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_Event_InDeltaTime) == 0x000050, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000058, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, Temp_real_Variable) == 0x000068, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Array_Get_Item) == 0x000070, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000080, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_GetRenderOpacity_ReturnValue) == 0x000088, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Delta__) == 0x000090, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Delta__' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, Temp_real_Variable_1) == 0x000098, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SelectFloat_ReturnValue) == 0x0000A0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, Temp_object_Variable) == 0x0000A8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SelectFloat_ReturnValue_1) == 0x0000B8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SelectFloat_ReturnValue_2) == 0x0000C0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_FInterpTo_ReturnValue) == 0x0000C8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_GetRenderOpacity_ReturnValue_1) == 0x0000D0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_GetRenderOpacity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000D4, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_GetPlayerController_ReturnValue) == 0x0000D8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_CreateDelegate_OutputDelegate) == 0x0000E0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_DynamicCast_AsPC) == 0x0000F0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_DynamicCast_AsPC' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_CustomEvent_Key_1) == 0x000100, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_CustomEvent_Key_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000118, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Not_PreBool_ReturnValue) == 0x000119, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_MapKey_ReturnValue) == 0x000120, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_MapKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_BooleanAND_ReturnValue) == 0x000170, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, Temp_int_Loop_Counter_Variable_1) == 0x000174, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Array_Get_Item_1) == 0x000178, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_MapKey_ReturnValue_1) == 0x0001D0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_MapKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Array_Length_ReturnValue) == 0x000220, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Less_IntInt_ReturnValue) == 0x000224, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000225, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000228, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000248, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x00024C, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000250, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, Temp_real_Variable_1_0) == 0x000258, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, Temp_real_Variable_0) == 0x000260, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000268, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Array_Get_Item_2) == 0x000270, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Array_Length_ReturnValue_1) == 0x0002C0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002C4, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0002C5, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_CustomEvent_Override) == 0x0002C6, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_CustomEvent_Override' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Delta___1) == 0x0002C8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Delta___1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_GetRenderOpacity_ReturnValue_2) == 0x0002D0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_GetRenderOpacity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SelectFloat_ReturnValue_3) == 0x0002D8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SelectFloat_ReturnValue_4) == 0x0002E0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0002E8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SelectFloat_ReturnValue_5) == 0x0002F0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_GetRenderOpacity_ReturnValue_3) == 0x0002F8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_GetRenderOpacity_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_FInterpTo_ReturnValue_1) == 0x000300, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000308, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_CustomEvent_Key) == 0x000310, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Map_Find_Value) == 0x000328, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Map_Find_ReturnValue) == 0x000340, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Map_Remove_ReturnValue) == 0x000341, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000342, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_MapKey_ReturnValue_2) == 0x000348, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_MapKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SaveGameToSlot_ReturnValue) == 0x000398, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_GetPlayerPawn_ReturnValue) == 0x0003A0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_DynamicCast_AsMec) == 0x0003A8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_DynamicCast_AsMec' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, K2Node_DynamicCast_bSuccess_1) == 0x0003B0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0003B1, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_GetText_ReturnValue) == 0x0003B8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x0003C8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x0003CC, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_FInterpTo_Current_ImplicitCast) == 0x0003D0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0003D8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0003E0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0003E8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_FInterpTo_Current_ImplicitCast_1) == 0x0003F0, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_FInterpTo_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x0003F8, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1) == 0x000400, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_ExecuteUbergraph_W_KeyMap, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x000408, "Member 'W_KeyMap_C_ExecuteUbergraph_W_KeyMap::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function W_KeyMap.W_KeyMap_C.InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'W_KeyMap_C_InpActEvt_IA_CloseMenu_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function W_KeyMap.W_KeyMap_C.On Press Key
// 0x0018 (0x0018 - 0x0000)
struct W_KeyMap_C_On_Press_Key final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_KeyMap_C_On_Press_Key) == 0x000008, "Wrong alignment on W_KeyMap_C_On_Press_Key");
static_assert(sizeof(W_KeyMap_C_On_Press_Key) == 0x000018, "Wrong size on W_KeyMap_C_On_Press_Key");
static_assert(offsetof(W_KeyMap_C_On_Press_Key, Key) == 0x000000, "Member 'W_KeyMap_C_On_Press_Key::Key' has a wrong offset!");

// Function W_KeyMap.W_KeyMap_C.Override Other Action
// 0x0170 (0x0170 - 0x0000)
struct W_KeyMap_C_Override_Other_Action final
{
public:
	class UInputAction*                           Action_to_Override;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_KeyMap_C*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0050(0x0010)()
	class UW_KeyMap_C*                            CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0050)(ContainsInstancedReference)
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item_2;                         // 0x0110(0x0050)(ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_KeyMap_C_Override_Other_Action) == 0x000008, "Wrong alignment on W_KeyMap_C_Override_Other_Action");
static_assert(sizeof(W_KeyMap_C_Override_Other_Action) == 0x000170, "Wrong size on W_KeyMap_C_Override_Other_Action");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, Action_to_Override) == 0x000000, "Member 'W_KeyMap_C_Override_Other_Action::Action_to_Override' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, Key) == 0x000008, "Member 'W_KeyMap_C_Override_Other_Action::Key' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'W_KeyMap_C_Override_Other_Action::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, Temp_int_Array_Index_Variable) == 0x000028, "Member 'W_KeyMap_C_Override_Other_Action::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'W_KeyMap_C_Override_Other_Action::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'W_KeyMap_C_Override_Other_Action::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, Temp_int_Array_Index_Variable_2) == 0x000038, "Member 'W_KeyMap_C_Override_Other_Action::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000040, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000050, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Array_Get_Item) == 0x000060, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000088, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, Temp_int_Loop_Counter_Variable_2) == 0x000090, "Member 'W_KeyMap_C_Override_Other_Action::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_GetDisplayName_ReturnValue) == 0x000098, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000BC, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Array_Get_Item_2) == 0x000110, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000160, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000161, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_BooleanAND_ReturnValue) == 0x000162, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000163, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Array_Length_ReturnValue_1) == 0x000164, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Array_Length_ReturnValue_2) == 0x000168, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Less_IntInt_ReturnValue_1) == 0x00016C, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Override_Other_Action, CallFunc_Less_IntInt_ReturnValue_2) == 0x00016D, "Member 'W_KeyMap_C_Override_Other_Action::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function W_KeyMap.W_KeyMap_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_KeyMap_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_KeyMap_C_PreConstruct) == 0x000001, "Wrong alignment on W_KeyMap_C_PreConstruct");
static_assert(sizeof(W_KeyMap_C_PreConstruct) == 0x000001, "Wrong size on W_KeyMap_C_PreConstruct");
static_assert(offsetof(W_KeyMap_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_KeyMap_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_KeyMap.W_KeyMap_C.Reset Key
// 0x0001 (0x0001 - 0x0000)
struct W_KeyMap_C_Reset_Key final
{
public:
	bool                                          Override;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_KeyMap_C_Reset_Key) == 0x000001, "Wrong alignment on W_KeyMap_C_Reset_Key");
static_assert(sizeof(W_KeyMap_C_Reset_Key) == 0x000001, "Wrong size on W_KeyMap_C_Reset_Key");
static_assert(offsetof(W_KeyMap_C_Reset_Key, Override) == 0x000000, "Member 'W_KeyMap_C_Reset_Key::Override' has a wrong offset!");

// Function W_KeyMap.W_KeyMap_C.Save Input
// 0x0018 (0x0018 - 0x0000)
struct W_KeyMap_C_Save_Input final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_KeyMap_C_Save_Input) == 0x000008, "Wrong alignment on W_KeyMap_C_Save_Input");
static_assert(sizeof(W_KeyMap_C_Save_Input) == 0x000018, "Wrong size on W_KeyMap_C_Save_Input");
static_assert(offsetof(W_KeyMap_C_Save_Input, Key) == 0x000000, "Member 'W_KeyMap_C_Save_Input::Key' has a wrong offset!");

// Function W_KeyMap.W_KeyMap_C.Set KeyText
// 0x00A8 (0x00A8 - 0x0000)
struct W_KeyMap_C_Set_KeyText final
{
public:
	bool                                          Listen;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Is_Mapped__;                                       // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0030(0x0010)()
	class FText                                   CallFunc_Convert_Names_Result;                     // 0x0040(0x0010)()
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item;                           // 0x0050(0x0050)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_KeyMap_C_Set_KeyText) == 0x000008, "Wrong alignment on W_KeyMap_C_Set_KeyText");
static_assert(sizeof(W_KeyMap_C_Set_KeyText) == 0x0000A8, "Wrong size on W_KeyMap_C_Set_KeyText");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, Listen) == 0x000000, "Member 'W_KeyMap_C_Set_KeyText::Listen' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, Key) == 0x000008, "Member 'W_KeyMap_C_Set_KeyText::Key' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, Is_Mapped__) == 0x000020, "Member 'W_KeyMap_C_Set_KeyText::Is_Mapped__' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, Temp_int_Array_Index_Variable) == 0x000024, "Member 'W_KeyMap_C_Set_KeyText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'W_KeyMap_C_Set_KeyText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'W_KeyMap_C_Set_KeyText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000030, "Member 'W_KeyMap_C_Set_KeyText::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, CallFunc_Convert_Names_Result) == 0x000040, "Member 'W_KeyMap_C_Set_KeyText::CallFunc_Convert_Names_Result' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, CallFunc_Array_Get_Item) == 0x000050, "Member 'W_KeyMap_C_Set_KeyText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'W_KeyMap_C_Set_KeyText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'W_KeyMap_C_Set_KeyText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Set_KeyText, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A5, "Member 'W_KeyMap_C_Set_KeyText::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_KeyMap.W_KeyMap_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_KeyMap_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_KeyMap_C_Tick) == 0x000004, "Wrong alignment on W_KeyMap_C_Tick");
static_assert(sizeof(W_KeyMap_C_Tick) == 0x00003C, "Wrong size on W_KeyMap_C_Tick");
static_assert(offsetof(W_KeyMap_C_Tick, MyGeometry) == 0x000000, "Member 'W_KeyMap_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_KeyMap_C_Tick, InDeltaTime) == 0x000038, "Member 'W_KeyMap_C_Tick::InDeltaTime' has a wrong offset!");

}

