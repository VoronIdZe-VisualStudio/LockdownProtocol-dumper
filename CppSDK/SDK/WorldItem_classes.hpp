#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WorldItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ItemImpactType_structs.hpp"
#include "Str_ItemState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass WorldItem.WorldItem_C
// 0x0218 (0x04C0 - 0x02A8)
class AWorldItem_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Mesh;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Interaction;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Root;                                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Scale_16CE25C74D057B68DC3C41B418D18404;   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_16CE25C74D057B68DC3C41B418D18404; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Final_Drop_Time_F92D86DD45BE9BF7304177A51F1E3DD3; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Final_Drop__Direction_F92D86DD45BE9BF7304177A51F1E3DD3; // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Final_Drop;                                     // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Drop_Direction;                                    // 0x02F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Mec_Velocity;                                      // 0x0308(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0320(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0338(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Physic_Timer;                                      // 0x0350(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Anim_Rotation;                                     // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta;                                             // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rebound;                                           // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Floor_T;                                           // 0x0370(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UData_Item_C*                           Data;                                              // 0x03D8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AInteraction_C*                         Interaction;                                       // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x03E8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Restitution;                                       // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ToFloor_Location_1;                                // 0x03F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ToFloor_Location_2;                                // 0x0410(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ToFloor_Rotation_1;                                // 0x0428(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               ToFloor_Rotation_2;                                // 0x0440(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        Gravity;                                           // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Drag;                                              // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemImpactType                              Impact_Type;                                       // 0x046C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawn;                                             // 0x046D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_46E[0x2];                                      // 0x046E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Spawn_Orientation;                                 // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Final_Position;                                    // 0x0474(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Debug_Position;                                    // 0x0475(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_476[0x2];                                      // 0x0476(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemDynamicMesh_C*                     Mesh;                                              // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Shadow;                                       // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Connection_Position;                               // 0x0488(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Connection_Orientation;                            // 0x04A0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Connection_Update;                                 // 0x04A4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          HaveSpawned;                                       // 0x04A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6[0x2];                                      // 0x04A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Actors_to_Ignore;                                  // 0x04A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)

public:
	void All_Final_Position(const struct FVector& Impact_Point, float Orientation);
	void All_Kill();
	void All_Spawn_Position(const struct FVector& Location_0, float Orientation);
	void BndEvt__NewItem_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature(class AMec_C* Source, const struct FStr_ItemState& State);
	void BndEvt__NewItem_Interaction_K2Node_ComponentBoundEvent_1_Focus__DelegateSignature(bool TRUE_0);
	void BndEvt__NewItem_Interaction_K2Node_ComponentBoundEvent_2_Focusable__DelegateSignature(bool TRUE_0);
	void Clear();
	void Client_Final_Position(const struct FVector& Impact_Point, float Orientation);
	void Client_Physic_Tick();
	void Debug_Place();
	void Detonate_C4();
	void ExecuteUbergraph_WorldItem(int32 EntryPoint);
	void Kill(const struct FVector& Location_0, const struct FVector& Normal);
	void Net_Physic_Tick();
	void New_Client_Travel(const struct FVector& Location_0, const struct FVector& Velocity_0, double Anim, E_ItemImpactType Last);
	void OnRep_Connection_Update();
	void OnRep_Data();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Spawned();
	void Start_Net_Physic(const struct FVector& Location_0, const struct FVector& Velocity_0);
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void TL_Final_Drop__FinishedFunc();
	void TL_Final_Drop__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WorldItem_C">();
	}
	static class AWorldItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWorldItem_C>();
	}
};
static_assert(alignof(AWorldItem_C) == 0x000010, "Wrong alignment on AWorldItem_C");
static_assert(sizeof(AWorldItem_C) == 0x0004C0, "Wrong size on AWorldItem_C");
static_assert(offsetof(AWorldItem_C, UberGraphFrame) == 0x0002A8, "Member 'AWorldItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Sphere) == 0x0002B0, "Member 'AWorldItem_C::Sphere' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, C_Mesh) == 0x0002B8, "Member 'AWorldItem_C::C_Mesh' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, C_Interaction) == 0x0002C0, "Member 'AWorldItem_C::C_Interaction' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Root) == 0x0002C8, "Member 'AWorldItem_C::Root' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Timeline_Scale_16CE25C74D057B68DC3C41B418D18404) == 0x0002D0, "Member 'AWorldItem_C::Timeline_Scale_16CE25C74D057B68DC3C41B418D18404' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Timeline__Direction_16CE25C74D057B68DC3C41B418D18404) == 0x0002D4, "Member 'AWorldItem_C::Timeline__Direction_16CE25C74D057B68DC3C41B418D18404' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Timeline) == 0x0002D8, "Member 'AWorldItem_C::Timeline' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, TL_Final_Drop_Time_F92D86DD45BE9BF7304177A51F1E3DD3) == 0x0002E0, "Member 'AWorldItem_C::TL_Final_Drop_Time_F92D86DD45BE9BF7304177A51F1E3DD3' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, TL_Final_Drop__Direction_F92D86DD45BE9BF7304177A51F1E3DD3) == 0x0002E4, "Member 'AWorldItem_C::TL_Final_Drop__Direction_F92D86DD45BE9BF7304177A51F1E3DD3' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, TL_Final_Drop) == 0x0002E8, "Member 'AWorldItem_C::TL_Final_Drop' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Drop_Direction) == 0x0002F0, "Member 'AWorldItem_C::Drop_Direction' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Mec_Velocity) == 0x000308, "Member 'AWorldItem_C::Mec_Velocity' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Velocity) == 0x000320, "Member 'AWorldItem_C::Velocity' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Location) == 0x000338, "Member 'AWorldItem_C::Location' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Physic_Timer) == 0x000350, "Member 'AWorldItem_C::Physic_Timer' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Anim_Rotation) == 0x000358, "Member 'AWorldItem_C::Anim_Rotation' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Delta) == 0x00035C, "Member 'AWorldItem_C::Delta' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Rebound) == 0x000360, "Member 'AWorldItem_C::Rebound' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Radius) == 0x000364, "Member 'AWorldItem_C::Radius' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Floor_T) == 0x000370, "Member 'AWorldItem_C::Floor_T' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Rate) == 0x0003D0, "Member 'AWorldItem_C::Rate' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Data) == 0x0003D8, "Member 'AWorldItem_C::Data' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Interaction) == 0x0003E0, "Member 'AWorldItem_C::Interaction' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Item_State) == 0x0003E8, "Member 'AWorldItem_C::Item_State' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Restitution) == 0x0003F0, "Member 'AWorldItem_C::Restitution' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, ToFloor_Location_1) == 0x0003F8, "Member 'AWorldItem_C::ToFloor_Location_1' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, ToFloor_Location_2) == 0x000410, "Member 'AWorldItem_C::ToFloor_Location_2' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, ToFloor_Rotation_1) == 0x000428, "Member 'AWorldItem_C::ToFloor_Rotation_1' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, ToFloor_Rotation_2) == 0x000440, "Member 'AWorldItem_C::ToFloor_Rotation_2' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Gravity) == 0x000458, "Member 'AWorldItem_C::Gravity' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Drag) == 0x000460, "Member 'AWorldItem_C::Drag' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Distance) == 0x000468, "Member 'AWorldItem_C::Distance' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Impact_Type) == 0x00046C, "Member 'AWorldItem_C::Impact_Type' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Spawn) == 0x00046D, "Member 'AWorldItem_C::Spawn' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Spawn_Orientation) == 0x000470, "Member 'AWorldItem_C::Spawn_Orientation' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Final_Position) == 0x000474, "Member 'AWorldItem_C::Final_Position' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Debug_Position) == 0x000475, "Member 'AWorldItem_C::Debug_Position' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Mesh) == 0x000478, "Member 'AWorldItem_C::Mesh' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Cast_Shadow) == 0x000480, "Member 'AWorldItem_C::Cast_Shadow' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Connection_Position) == 0x000488, "Member 'AWorldItem_C::Connection_Position' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Connection_Orientation) == 0x0004A0, "Member 'AWorldItem_C::Connection_Orientation' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Connection_Update) == 0x0004A4, "Member 'AWorldItem_C::Connection_Update' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, HaveSpawned) == 0x0004A5, "Member 'AWorldItem_C::HaveSpawned' has a wrong offset!");
static_assert(offsetof(AWorldItem_C, Actors_to_Ignore) == 0x0004A8, "Member 'AWorldItem_C::Actors_to_Ignore' has a wrong offset!");

}

