#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_C4Blast_FX

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_C4Blast_FX.BP_C4Blast_FX_C.ExecuteUbergraph_BP_C4Blast_FX
// 0x00D8 (0x00D8 - 0x0000)
struct BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x00CC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1; // 0x00D0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX) == 0x000008, "Wrong alignment on BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX");
static_assert(sizeof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX) == 0x0000D8, "Wrong size on BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, EntryPoint) == 0x000000, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_BreakVector_X) == 0x000008, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_BreakVector_X_1) == 0x000020, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_BreakVector_Y_1) == 0x000028, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000038, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000050, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000080, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000098, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000B0, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, K2Node_Event_DeltaSeconds) == 0x0000C8, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x0000CC, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1) == 0x0000D0, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0000D4, "Member 'BP_C4Blast_FX_C_ExecuteUbergraph_BP_C4Blast_FX::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

// Function BP_C4Blast_FX.BP_C4Blast_FX_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_C4Blast_FX_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_C4Blast_FX_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_C4Blast_FX_C_ReceiveTick");
static_assert(sizeof(BP_C4Blast_FX_C_ReceiveTick) == 0x000004, "Wrong size on BP_C4Blast_FX_C_ReceiveTick");
static_assert(offsetof(BP_C4Blast_FX_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_C4Blast_FX_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

