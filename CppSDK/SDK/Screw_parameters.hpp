#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Screw

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Str_ItemState_structs.hpp"


namespace SDK::Params
{

// Function Screw.Screw_C.Get Name
// 0x0018 (0x0018 - 0x0000)
struct Screw_C_Get_Name final
{
public:
	class AMec_C*                                 Mec;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_Get_Name) == 0x000008, "Wrong alignment on Screw_C_Get_Name");
static_assert(sizeof(Screw_C_Get_Name) == 0x000018, "Wrong size on Screw_C_Get_Name");
static_assert(offsetof(Screw_C_Get_Name, Mec) == 0x000000, "Member 'Screw_C_Get_Name::Mec' has a wrong offset!");
static_assert(offsetof(Screw_C_Get_Name, Name_0) == 0x000008, "Member 'Screw_C_Get_Name::Name_0' has a wrong offset!");

// Function Screw.Screw_C.Get Key
// 0x0008 (0x0008 - 0x0000)
struct Screw_C_Get_Key final
{
public:
	class AActor*                                 Key;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_Get_Key) == 0x000008, "Wrong alignment on Screw_C_Get_Key");
static_assert(sizeof(Screw_C_Get_Key) == 0x000008, "Wrong size on Screw_C_Get_Key");
static_assert(offsetof(Screw_C_Get_Key, Key) == 0x000000, "Member 'Screw_C_Get_Key::Key' has a wrong offset!");

// Function Screw.Screw_C.OnRep_Lock
// 0x0001 (0x0001 - 0x0000)
struct Screw_C_OnRep_Lock final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_OnRep_Lock) == 0x000001, "Wrong alignment on Screw_C_OnRep_Lock");
static_assert(sizeof(Screw_C_OnRep_Lock) == 0x000001, "Wrong size on Screw_C_OnRep_Lock");
static_assert(offsetof(Screw_C_OnRep_Lock, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Screw_C_OnRep_Lock::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Screw.Screw_C.Update Position
// 0x0130 (0x0130 - 0x0000)
struct Screw_C_Update_Position final
{
public:
	bool                                          Open_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0028(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_Update_Position) == 0x000008, "Wrong alignment on Screw_C_Update_Position");
static_assert(sizeof(Screw_C_Update_Position) == 0x000130, "Wrong size on Screw_C_Update_Position");
static_assert(offsetof(Screw_C_Update_Position, Open_0) == 0x000000, "Member 'Screw_C_Update_Position::Open_0' has a wrong offset!");
static_assert(offsetof(Screw_C_Update_Position, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Screw_C_Update_Position::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Screw_C_Update_Position, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'Screw_C_Update_Position::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Screw_C_Update_Position, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000028, "Member 'Screw_C_Update_Position::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Screw_C_Update_Position, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000128, "Member 'Screw_C_Update_Position::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function Screw.Screw_C.OnRep_Open
// 0x0001 (0x0001 - 0x0000)
struct Screw_C_OnRep_Open final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_OnRep_Open) == 0x000001, "Wrong alignment on Screw_C_OnRep_Open");
static_assert(sizeof(Screw_C_OnRep_Open) == 0x000001, "Wrong size on Screw_C_OnRep_Open");
static_assert(offsetof(Screw_C_OnRep_Open, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Screw_C_OnRep_Open::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Screw.Screw_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct Screw_C_UserConstructionScript final
{
public:
	class AInteraction_C*                         K2Node_DynamicCast_AsInteraction;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_UserConstructionScript) == 0x000008, "Wrong alignment on Screw_C_UserConstructionScript");
static_assert(sizeof(Screw_C_UserConstructionScript) == 0x000018, "Wrong size on Screw_C_UserConstructionScript");
static_assert(offsetof(Screw_C_UserConstructionScript, K2Node_DynamicCast_AsInteraction) == 0x000000, "Member 'Screw_C_UserConstructionScript::K2Node_DynamicCast_AsInteraction' has a wrong offset!");
static_assert(offsetof(Screw_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'Screw_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Screw_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'Screw_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function Screw.Screw_C.Net Interaction
// 0x0018 (0x0018 - 0x0000)
struct Screw_C_Net_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_Net_Interaction) == 0x000008, "Wrong alignment on Screw_C_Net_Interaction");
static_assert(sizeof(Screw_C_Net_Interaction) == 0x000018, "Wrong size on Screw_C_Net_Interaction");
static_assert(offsetof(Screw_C_Net_Interaction, Index_0) == 0x000000, "Member 'Screw_C_Net_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(Screw_C_Net_Interaction, Source) == 0x000008, "Member 'Screw_C_Net_Interaction::Source' has a wrong offset!");
static_assert(offsetof(Screw_C_Net_Interaction, Item_State) == 0x000010, "Member 'Screw_C_Net_Interaction::Item_State' has a wrong offset!");

// Function Screw.Screw_C.Local Interaction
// 0x0018 (0x0018 - 0x0000)
struct Screw_C_Local_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_Local_Interaction) == 0x000008, "Wrong alignment on Screw_C_Local_Interaction");
static_assert(sizeof(Screw_C_Local_Interaction) == 0x000018, "Wrong size on Screw_C_Local_Interaction");
static_assert(offsetof(Screw_C_Local_Interaction, Index_0) == 0x000000, "Member 'Screw_C_Local_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(Screw_C_Local_Interaction, Source) == 0x000008, "Member 'Screw_C_Local_Interaction::Source' has a wrong offset!");
static_assert(offsetof(Screw_C_Local_Interaction, Item_State) == 0x000010, "Member 'Screw_C_Local_Interaction::Item_State' has a wrong offset!");

// Function Screw.Screw_C.Other Interaction
// 0x0018 (0x0018 - 0x0000)
struct Screw_C_Other_Interaction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_Other_Interaction) == 0x000008, "Wrong alignment on Screw_C_Other_Interaction");
static_assert(sizeof(Screw_C_Other_Interaction) == 0x000018, "Wrong size on Screw_C_Other_Interaction");
static_assert(offsetof(Screw_C_Other_Interaction, Index_0) == 0x000000, "Member 'Screw_C_Other_Interaction::Index_0' has a wrong offset!");
static_assert(offsetof(Screw_C_Other_Interaction, Source) == 0x000008, "Member 'Screw_C_Other_Interaction::Source' has a wrong offset!");
static_assert(offsetof(Screw_C_Other_Interaction, Item_State) == 0x000010, "Member 'Screw_C_Other_Interaction::Item_State' has a wrong offset!");

// Function Screw.Screw_C.BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_0_Local Trigger__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         State;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature) == 0x000008, "Wrong alignment on Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature");
static_assert(sizeof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature) == 0x000010, "Wrong size on Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature");
static_assert(offsetof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature, Source) == 0x000000, "Member 'Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature::Source' has a wrong offset!");
static_assert(offsetof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature, State) == 0x000008, "Member 'Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature::State' has a wrong offset!");

// Function Screw.Screw_C.BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_1_Net Trigger__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         State;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature) == 0x000008, "Wrong alignment on Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature");
static_assert(sizeof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature) == 0x000010, "Wrong size on Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature");
static_assert(offsetof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature, Source) == 0x000000, "Member 'Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature::Source' has a wrong offset!");
static_assert(offsetof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature, State) == 0x000008, "Member 'Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_1_Net_Trigger__DelegateSignature::State' has a wrong offset!");

// Function Screw.Screw_C.BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_3_Focus__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_3_Focus__DelegateSignature final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_3_Focus__DelegateSignature) == 0x000001, "Wrong alignment on Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_3_Focus__DelegateSignature");
static_assert(sizeof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_3_Focus__DelegateSignature) == 0x000001, "Wrong size on Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_3_Focus__DelegateSignature");
static_assert(offsetof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_3_Focus__DelegateSignature, TRUE_0) == 0x000000, "Member 'Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_3_Focus__DelegateSignature::TRUE_0' has a wrong offset!");

// Function Screw.Screw_C.BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_4_Focusable__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_4_Focusable__DelegateSignature final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_4_Focusable__DelegateSignature) == 0x000001, "Wrong alignment on Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_4_Focusable__DelegateSignature");
static_assert(sizeof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_4_Focusable__DelegateSignature) == 0x000001, "Wrong size on Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_4_Focusable__DelegateSignature");
static_assert(offsetof(Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_4_Focusable__DelegateSignature, TRUE_0) == 0x000000, "Member 'Screw_C_BndEvt__Button_Interaction_K2Node_ComponentBoundEvent_4_Focusable__DelegateSignature::TRUE_0' has a wrong offset!");

// Function Screw.Screw_C.All Update Lock State
// 0x0002 (0x0002 - 0x0000)
struct Screw_C_All_Update_Lock_State final
{
public:
	bool                                          Open_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lock_0;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_All_Update_Lock_State) == 0x000001, "Wrong alignment on Screw_C_All_Update_Lock_State");
static_assert(sizeof(Screw_C_All_Update_Lock_State) == 0x000002, "Wrong size on Screw_C_All_Update_Lock_State");
static_assert(offsetof(Screw_C_All_Update_Lock_State, Open_0) == 0x000000, "Member 'Screw_C_All_Update_Lock_State::Open_0' has a wrong offset!");
static_assert(offsetof(Screw_C_All_Update_Lock_State, Lock_0) == 0x000001, "Member 'Screw_C_All_Update_Lock_State::Lock_0' has a wrong offset!");

// Function Screw.Screw_C.All Trigger
// 0x0008 (0x0008 - 0x0000)
struct Screw_C_All_Trigger final
{
public:
	class AMec_C*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_All_Trigger) == 0x000008, "Wrong alignment on Screw_C_All_Trigger");
static_assert(sizeof(Screw_C_All_Trigger) == 0x000008, "Wrong size on Screw_C_All_Trigger");
static_assert(offsetof(Screw_C_All_Trigger, Source) == 0x000000, "Member 'Screw_C_All_Trigger::Source' has a wrong offset!");

// Function Screw.Screw_C.ExecuteUbergraph_Screw
// 0x00C8 (0x00C8 - 0x0000)
struct Screw_C_ExecuteUbergraph_Screw final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index_2;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source_2;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_Event_Item_State_2;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index_1;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source_1;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_Event_Item_State_1;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Source;                               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_Event_Item_State;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source_1;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_ComponentBoundEvent_State_1;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_ComponentBoundEvent_Source;                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_ComponentBoundEvent_State;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_True_1;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_True;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Open;                           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Lock;                           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_CustomEvent_Source;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Screw_C_ExecuteUbergraph_Screw) == 0x000008, "Wrong alignment on Screw_C_ExecuteUbergraph_Screw");
static_assert(sizeof(Screw_C_ExecuteUbergraph_Screw) == 0x0000C8, "Wrong size on Screw_C_ExecuteUbergraph_Screw");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, EntryPoint) == 0x000000, "Member 'Screw_C_ExecuteUbergraph_Screw::EntryPoint' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'Screw_C_ExecuteUbergraph_Screw::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_Event_Index_2) == 0x000010, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_Event_Index_2' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_Event_Source_2) == 0x000018, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_Event_Source_2' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_Event_Item_State_2) == 0x000020, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_Event_Item_State_2' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_Event_Index_1) == 0x000028, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_Event_Index_1' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_Event_Source_1) == 0x000030, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_Event_Source_1' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_Event_Item_State_1) == 0x000038, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_Event_Item_State_1' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_Event_Index) == 0x000040, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_Event_Source) == 0x000048, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_Event_Item_State) == 0x000050, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_Event_Item_State' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000058, "Member 'Screw_C_ExecuteUbergraph_Screw::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000070, "Member 'Screw_C_ExecuteUbergraph_Screw::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_ComponentBoundEvent_Source_1) == 0x000088, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_ComponentBoundEvent_Source_1' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_ComponentBoundEvent_State_1) == 0x000090, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_ComponentBoundEvent_State_1' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_ComponentBoundEvent_Source) == 0x000098, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_ComponentBoundEvent_Source' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_ComponentBoundEvent_State) == 0x0000A0, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_ComponentBoundEvent_State' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_ComponentBoundEvent_True_1) == 0x0000A8, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_ComponentBoundEvent_True_1' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_ComponentBoundEvent_True) == 0x0000A9, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_ComponentBoundEvent_True' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, CallFunc_SelectInt_ReturnValue) == 0x0000AC, "Member 'Screw_C_ExecuteUbergraph_Screw::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_CustomEvent_Open) == 0x0000B0, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_CustomEvent_Open' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_CustomEvent_Lock) == 0x0000B1, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_CustomEvent_Lock' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, CallFunc_Not_PreBool_ReturnValue) == 0x0000B2, "Member 'Screw_C_ExecuteUbergraph_Screw::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, K2Node_CustomEvent_Source) == 0x0000B8, "Member 'Screw_C_ExecuteUbergraph_Screw::K2Node_CustomEvent_Source' has a wrong offset!");
static_assert(offsetof(Screw_C_ExecuteUbergraph_Screw, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000C0, "Member 'Screw_C_ExecuteUbergraph_Screw::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

