#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Analysis_PC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_AnalysisPC_State_structs.hpp"
#include "E_ItemType_structs.hpp"
#include "Str_ItemState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Analysis_PC.Analysis_PC_C
// 0x00F0 (0x0398 - 0x02A8)
class AAnalysis_PC_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Collisions3;                                       // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Collisions2;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Collisions1;                                       // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Collisions;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_Computer;                      // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ScreenRoot;                                        // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Button;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UW_AnalysisPC_UI_C*                     W_Screen;                                          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_AnalysisPC_State                            State;                                             // 0x0308(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStr_ItemState>                 Result_List;                                       // 0x0310(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<bool>                                  Validation_List;                                   // 0x0320(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	int32                                         List_Size;                                         // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Result_Request;                                    // 0x0334(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HardDrive;                                         // 0x0340(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Process;                                           // 0x0344(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          HDD_Step;                                          // 0x0348(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer;                                             // 0x0350(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         Item_State;                                        // 0x0358(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItemSlot_C*                            HDD;                                               // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AButton_C*                              Button;                                            // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Finito;                                            // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Is_In_Task;                                        // 0x0380(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         List_Step;                                         // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Plants_Count;                                      // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATask_PlantAnalysis_C*                  Task_Ref;                                          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	void All_Set_State(E_AnalysisPC_State State_0);
	void BndEvt__Analysis_PC_Button_K2Node_ComponentBoundEvent_0_Button_Push__DelegateSignature(class AMec_C* Source);
	void Check_Ingredients(bool* Finish, int32* Count);
	void Check_Result(const struct FStr_ItemState& Result);
	void Clear();
	void Create_List(const TArray<struct FStr_ItemState>& Results, const TArray<bool>& List);
	void ExecuteUbergraph_Analysis_PC(int32 EntryPoint);
	struct FStr_ItemState Generate_Item_State(bool NoDebuff);
	void Generate_List(int32 List_Size_0);
	void Get_Key(class AActor** Key);
	void Get_Name(class AMec_C* Mec, class FString* Name_0);
	void Local_Interaction(int32 Param_Index_0, class AActor* Source, const struct FStr_ItemState& Item_State_0);
	void Net_Interaction(int32 Param_Index_0, class AActor* Source, const struct FStr_ItemState& Item_State_0);
	void Next_Step();
	void OnRep_HardDrive();
	void OnRep_HDD_Step();
	void OnRep_Process();
	void OnRep_Result_List();
	void OnRep_State();
	void Other_Interaction(int32 Param_Index_0, class AActor* Source, const struct FStr_ItemState& Item_State_0);
	void Pause_Process();
	void Process_Tick();
	void ReceiveBeginPlay();
	void Set_Screen_Info();
	void Set_State(E_AnalysisPC_State State_0);
	void Start_Process();
	void Start_Task(int32 List_Size_0);
	bool State_is_Valid(const struct FStr_ItemState& Str_ItemState);
	void Update_Clear();
	void Update_List(const TArray<bool>& List);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Analysis_PC_C">();
	}
	static class AAnalysis_PC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAnalysis_PC_C>();
	}
};
static_assert(alignof(AAnalysis_PC_C) == 0x000008, "Wrong alignment on AAnalysis_PC_C");
static_assert(sizeof(AAnalysis_PC_C) == 0x000398, "Wrong size on AAnalysis_PC_C");
static_assert(offsetof(AAnalysis_PC_C, UberGraphFrame) == 0x0002A8, "Member 'AAnalysis_PC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Collisions3) == 0x0002B0, "Member 'AAnalysis_PC_C::Collisions3' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Collisions2) == 0x0002B8, "Member 'AAnalysis_PC_C::Collisions2' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Collisions1) == 0x0002C0, "Member 'AAnalysis_PC_C::Collisions1' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Collisions) == 0x0002C8, "Member 'AAnalysis_PC_C::Collisions' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, MapMesh_TaskMachine_Computer) == 0x0002D0, "Member 'AAnalysis_PC_C::MapMesh_TaskMachine_Computer' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, TextRender) == 0x0002D8, "Member 'AAnalysis_PC_C::TextRender' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Widget) == 0x0002E0, "Member 'AAnalysis_PC_C::Widget' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, ScreenRoot) == 0x0002E8, "Member 'AAnalysis_PC_C::ScreenRoot' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, C_Button) == 0x0002F0, "Member 'AAnalysis_PC_C::C_Button' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Root) == 0x0002F8, "Member 'AAnalysis_PC_C::Root' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, W_Screen) == 0x000300, "Member 'AAnalysis_PC_C::W_Screen' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, State) == 0x000308, "Member 'AAnalysis_PC_C::State' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Result_List) == 0x000310, "Member 'AAnalysis_PC_C::Result_List' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Validation_List) == 0x000320, "Member 'AAnalysis_PC_C::Validation_List' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, List_Size) == 0x000330, "Member 'AAnalysis_PC_C::List_Size' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Result_Request) == 0x000334, "Member 'AAnalysis_PC_C::Result_Request' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Index_0) == 0x00033C, "Member 'AAnalysis_PC_C::Index_0' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, HardDrive) == 0x000340, "Member 'AAnalysis_PC_C::HardDrive' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Process) == 0x000344, "Member 'AAnalysis_PC_C::Process' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, HDD_Step) == 0x000348, "Member 'AAnalysis_PC_C::HDD_Step' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Timer) == 0x000350, "Member 'AAnalysis_PC_C::Timer' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Item_State) == 0x000358, "Member 'AAnalysis_PC_C::Item_State' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, HDD) == 0x000360, "Member 'AAnalysis_PC_C::HDD' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Button) == 0x000368, "Member 'AAnalysis_PC_C::Button' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Finito) == 0x000370, "Member 'AAnalysis_PC_C::Finito' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Is_In_Task) == 0x000380, "Member 'AAnalysis_PC_C::Is_In_Task' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, List_Step) == 0x000384, "Member 'AAnalysis_PC_C::List_Step' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Plants_Count) == 0x000388, "Member 'AAnalysis_PC_C::Plants_Count' has a wrong offset!");
static_assert(offsetof(AAnalysis_PC_C, Task_Ref) == 0x000390, "Member 'AAnalysis_PC_C::Task_Ref' has a wrong offset!");

}

