#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_Difficulty_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Task.Task_C
// 0x00C0 (0x0368 - 0x02A8)
class ATask_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Root;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         Time_Value;                                        // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              Check;                                             // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          In_Task;                                           // 0x02E0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSpawn_Handler_C*                   Spawn_Handler;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AGM_C*                                  GM_Ref;                                            // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Rule_Value;                                        // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Default_Value;                                     // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 Value)>   Update_Count;                                      // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FString                                 Setting_Name;                                      // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         Max_Rule_Value;                                    // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        MapDots;                                           // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UTexture*>                       Tuto_Pages;                                        // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Tuto_Link;                                         // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UMediaSource*                           Tutorial_Video;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Difficulty                                  Difficulty;                                        // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void Start_Task(double Delay);
	void ExecuteUbergraph_Task(int32 EntryPoint);
	void Finito();
	void Clear();
	void All_Check_Task();
	void All_Update_Count(int32 Value);
	void Update();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Task_C">();
	}
	static class ATask_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATask_C>();
	}
};
static_assert(alignof(ATask_C) == 0x000008, "Wrong alignment on ATask_C");
static_assert(sizeof(ATask_C) == 0x000368, "Wrong size on ATask_C");
static_assert(offsetof(ATask_C, UberGraphFrame) == 0x0002A8, "Member 'ATask_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATask_C, Root) == 0x0002B0, "Member 'ATask_C::Root' has a wrong offset!");
static_assert(offsetof(ATask_C, Name_0) == 0x0002B8, "Member 'ATask_C::Name_0' has a wrong offset!");
static_assert(offsetof(ATask_C, Time_Value) == 0x0002C8, "Member 'ATask_C::Time_Value' has a wrong offset!");
static_assert(offsetof(ATask_C, Check) == 0x0002D0, "Member 'ATask_C::Check' has a wrong offset!");
static_assert(offsetof(ATask_C, In_Task) == 0x0002E0, "Member 'ATask_C::In_Task' has a wrong offset!");
static_assert(offsetof(ATask_C, Spawn_Handler) == 0x0002E8, "Member 'ATask_C::Spawn_Handler' has a wrong offset!");
static_assert(offsetof(ATask_C, GM_Ref) == 0x0002F0, "Member 'ATask_C::GM_Ref' has a wrong offset!");
static_assert(offsetof(ATask_C, Rule_Value) == 0x0002F8, "Member 'ATask_C::Rule_Value' has a wrong offset!");
static_assert(offsetof(ATask_C, Default_Value) == 0x0002FC, "Member 'ATask_C::Default_Value' has a wrong offset!");
static_assert(offsetof(ATask_C, Update_Count) == 0x000300, "Member 'ATask_C::Update_Count' has a wrong offset!");
static_assert(offsetof(ATask_C, Setting_Name) == 0x000310, "Member 'ATask_C::Setting_Name' has a wrong offset!");
static_assert(offsetof(ATask_C, Max_Rule_Value) == 0x000320, "Member 'ATask_C::Max_Rule_Value' has a wrong offset!");
static_assert(offsetof(ATask_C, MapDots) == 0x000328, "Member 'ATask_C::MapDots' has a wrong offset!");
static_assert(offsetof(ATask_C, Tuto_Pages) == 0x000338, "Member 'ATask_C::Tuto_Pages' has a wrong offset!");
static_assert(offsetof(ATask_C, Tuto_Link) == 0x000348, "Member 'ATask_C::Tuto_Link' has a wrong offset!");
static_assert(offsetof(ATask_C, Tutorial_Video) == 0x000358, "Member 'ATask_C::Tutorial_Video' has a wrong offset!");
static_assert(offsetof(ATask_C, Difficulty) == 0x000360, "Member 'ATask_C::Difficulty' has a wrong offset!");

}

