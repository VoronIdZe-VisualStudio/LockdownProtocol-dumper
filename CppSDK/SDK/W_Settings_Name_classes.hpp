#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Settings_Name

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Settings_Name.W_Settings_Name_C
// 0x0018 (0x02E8 - 0x02D0)
class UW_Settings_Name_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HorizontalBox;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_147;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_Settings_Name(int32 EntryPoint);
	void Set_Name(const class FText& Name_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Settings_Name_C">();
	}
	static class UW_Settings_Name_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Settings_Name_C>();
	}
};
static_assert(alignof(UW_Settings_Name_C) == 0x000008, "Wrong alignment on UW_Settings_Name_C");
static_assert(sizeof(UW_Settings_Name_C) == 0x0002E8, "Wrong size on UW_Settings_Name_C");
static_assert(offsetof(UW_Settings_Name_C, UberGraphFrame) == 0x0002D0, "Member 'UW_Settings_Name_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Settings_Name_C, HorizontalBox) == 0x0002D8, "Member 'UW_Settings_Name_C::HorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_Settings_Name_C, TextBlock_147) == 0x0002E0, "Member 'UW_Settings_Name_C::TextBlock_147' has a wrong offset!");

}

