#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_Astronaut_Aim

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass CR_Astronaut_Aim.CR_Astronaut_Aim_C
// 0x0188 (0x0C58 - 0x0AD0)
class UCR_Astronaut_Aim_C final : public UControlRig
{
public:
	struct FRigPose                               Input_Pose;                                        // 0x0AD0(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        Feet_Orientation;                                  // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pelvis_Orientation;                                // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Chest_Orientation;                                 // 0x0B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Aim_Root;                                          // 0x0B58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Aim_Target;                                        // 0x0B70(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Chest_Aim;                                         // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Chest_Pitch;                                       // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Chest_Pitch_Smooth;                                // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lean_Axis_Smooth;                                  // 0x0BA0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lean;                                              // 0x0BB8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Feet_Lock;                                         // 0x0BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hand_Aim_L;                                        // 0x0BD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         hand_Aim_R;                                        // 0x0BDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lean_Strength;                                     // 0x0BE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE4[0x4];                                      // 0x0BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Air_Lean;                                          // 0x0BE8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Air_Lean_Smooth;                                   // 0x0C00(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch_to_HeadLook;                                 // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C24[0x4];                                      // 0x0C24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Chest_Follow;                                      // 0x0C28(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	struct FVector                                Aim_Offset;                                        // 0x0C40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_Astronaut_Aim_C">();
	}
	static class UCR_Astronaut_Aim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_Astronaut_Aim_C>();
	}
};
static_assert(alignof(UCR_Astronaut_Aim_C) == 0x000008, "Wrong alignment on UCR_Astronaut_Aim_C");
static_assert(sizeof(UCR_Astronaut_Aim_C) == 0x000C58, "Wrong size on UCR_Astronaut_Aim_C");
static_assert(offsetof(UCR_Astronaut_Aim_C, Input_Pose) == 0x000AD0, "Member 'UCR_Astronaut_Aim_C::Input_Pose' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Feet_Orientation) == 0x000B40, "Member 'UCR_Astronaut_Aim_C::Feet_Orientation' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Pelvis_Orientation) == 0x000B48, "Member 'UCR_Astronaut_Aim_C::Pelvis_Orientation' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Chest_Orientation) == 0x000B50, "Member 'UCR_Astronaut_Aim_C::Chest_Orientation' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Aim_Root) == 0x000B58, "Member 'UCR_Astronaut_Aim_C::Aim_Root' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Aim_Target) == 0x000B70, "Member 'UCR_Astronaut_Aim_C::Aim_Target' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Chest_Aim) == 0x000B88, "Member 'UCR_Astronaut_Aim_C::Chest_Aim' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Chest_Pitch) == 0x000B90, "Member 'UCR_Astronaut_Aim_C::Chest_Pitch' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Chest_Pitch_Smooth) == 0x000B98, "Member 'UCR_Astronaut_Aim_C::Chest_Pitch_Smooth' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Lean_Axis_Smooth) == 0x000BA0, "Member 'UCR_Astronaut_Aim_C::Lean_Axis_Smooth' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Lean) == 0x000BB8, "Member 'UCR_Astronaut_Aim_C::Lean' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Feet_Lock) == 0x000BD0, "Member 'UCR_Astronaut_Aim_C::Feet_Lock' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Hand_Aim_L) == 0x000BD8, "Member 'UCR_Astronaut_Aim_C::Hand_Aim_L' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, hand_Aim_R) == 0x000BDC, "Member 'UCR_Astronaut_Aim_C::hand_Aim_R' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Lean_Strength) == 0x000BE0, "Member 'UCR_Astronaut_Aim_C::Lean_Strength' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Air_Lean) == 0x000BE8, "Member 'UCR_Astronaut_Aim_C::Air_Lean' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Air_Lean_Smooth) == 0x000C00, "Member 'UCR_Astronaut_Aim_C::Air_Lean_Smooth' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Height) == 0x000C18, "Member 'UCR_Astronaut_Aim_C::Height' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Pitch_to_HeadLook) == 0x000C20, "Member 'UCR_Astronaut_Aim_C::Pitch_to_HeadLook' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Chest_Follow) == 0x000C28, "Member 'UCR_Astronaut_Aim_C::Chest_Follow' has a wrong offset!");
static_assert(offsetof(UCR_Astronaut_Aim_C, Aim_Offset) == 0x000C40, "Member 'UCR_Astronaut_Aim_C::Aim_Offset' has a wrong offset!");

}

