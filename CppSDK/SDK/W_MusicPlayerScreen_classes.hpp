#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MusicPlayerScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MusicPlayerScreen.W_MusicPlayerScreen_C
// 0x0060 (0x0330 - 0x02D0)
class UW_MusicPlayerScreen_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Clock;                                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ClockMax;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayJauge;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Title;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Title_1;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VolumeJauge;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VolumeJauge_BG;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        MaxTime;                                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Play_M;                                            // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Volume_M;                                          // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Set_Volume(int32 Volume);
	void Set_Title(const class FString& Title_0, const class FString& Artists);
	void Set_Time(double Time_0);
	void Set_Max_Time(double Time_0);
	void ExecuteUbergraph_W_MusicPlayerScreen(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MusicPlayerScreen_C">();
	}
	static class UW_MusicPlayerScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MusicPlayerScreen_C>();
	}
};
static_assert(alignof(UW_MusicPlayerScreen_C) == 0x000008, "Wrong alignment on UW_MusicPlayerScreen_C");
static_assert(sizeof(UW_MusicPlayerScreen_C) == 0x000330, "Wrong size on UW_MusicPlayerScreen_C");
static_assert(offsetof(UW_MusicPlayerScreen_C, UberGraphFrame) == 0x0002D0, "Member 'UW_MusicPlayerScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, Clock) == 0x0002D8, "Member 'UW_MusicPlayerScreen_C::Clock' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, ClockMax) == 0x0002E0, "Member 'UW_MusicPlayerScreen_C::ClockMax' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, PlayJauge) == 0x0002E8, "Member 'UW_MusicPlayerScreen_C::PlayJauge' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, Title) == 0x0002F0, "Member 'UW_MusicPlayerScreen_C::Title' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, Title_1) == 0x0002F8, "Member 'UW_MusicPlayerScreen_C::Title_1' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, VolumeJauge) == 0x000300, "Member 'UW_MusicPlayerScreen_C::VolumeJauge' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, VolumeJauge_BG) == 0x000308, "Member 'UW_MusicPlayerScreen_C::VolumeJauge_BG' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, MaxTime) == 0x000310, "Member 'UW_MusicPlayerScreen_C::MaxTime' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, Time) == 0x000318, "Member 'UW_MusicPlayerScreen_C::Time' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, Play_M) == 0x000320, "Member 'UW_MusicPlayerScreen_C::Play_M' has a wrong offset!");
static_assert(offsetof(UW_MusicPlayerScreen_C, Volume_M) == 0x000328, "Member 'UW_MusicPlayerScreen_C::Volume_M' has a wrong offset!");

}

