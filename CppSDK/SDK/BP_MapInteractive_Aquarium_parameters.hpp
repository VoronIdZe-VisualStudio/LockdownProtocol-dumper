#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapInteractive_Aquarium

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MapInteractive_Aquarium.BP_MapInteractive_Aquarium_C.ExecuteUbergraph_BP_MapInteractive_Aquarium
// 0x0310 (0x0310 - 0x0000)
struct BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ConstParm, ReferenceParm)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue;            // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStaticMesh*                            CallFunc_Array_Random_OutItem;                     // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x01B8(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium) == 0x000010, "Wrong alignment on BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium");
static_assert(sizeof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium) == 0x000310, "Wrong size on BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, EntryPoint) == 0x000000, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, K2Node_Event_OtherActor) == 0x000020, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_RandomFloatInRange_ReturnValue) == 0x000030, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000038, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000040, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000060, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_VLerp_ReturnValue) == 0x000080, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_MakeRotator_ReturnValue) == 0x0000A8, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000C0, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_RInterpTo_ReturnValue) == 0x0000D8, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_VInterpTo_ReturnValue) == 0x0000F0, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Vector_Distance_ReturnValue) == 0x000108, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000110, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, K2Node_MakeArray_Array) == 0x000180, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_TransformRotation_ReturnValue) == 0x000190, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Array_Random_OutItem) == 0x0001A8, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Array_Random_OutIndex) == 0x0001B0, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x0001B8, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_SetStaticMesh_ReturnValue) == 0x0002B8, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0002C0, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Not_PreBool_ReturnValue) == 0x0002C8, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_SelectFloat_ReturnValue) == 0x0002D0, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_SelectFloat_ReturnValue_1) == 0x0002D8, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0002E0, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0002E8, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_FInterpTo_Constant_ReturnValue) == 0x0002F0, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Delay_Duration_ImplicitCast) == 0x0002F8, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0002FC, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000300, "Member 'BP_MapInteractive_Aquarium_C_ExecuteUbergraph_BP_MapInteractive_Aquarium::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_MapInteractive_Aquarium.BP_MapInteractive_Aquarium_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_MapInteractive_Aquarium_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapInteractive_Aquarium_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_MapInteractive_Aquarium_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_MapInteractive_Aquarium_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_MapInteractive_Aquarium_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_MapInteractive_Aquarium_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_MapInteractive_Aquarium.BP_MapInteractive_Aquarium_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MapInteractive_Aquarium_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapInteractive_Aquarium_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MapInteractive_Aquarium_C_ReceiveTick");
static_assert(sizeof(BP_MapInteractive_Aquarium_C_ReceiveTick) == 0x000004, "Wrong size on BP_MapInteractive_Aquarium_C_ReceiveTick");
static_assert(offsetof(BP_MapInteractive_Aquarium_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MapInteractive_Aquarium_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

