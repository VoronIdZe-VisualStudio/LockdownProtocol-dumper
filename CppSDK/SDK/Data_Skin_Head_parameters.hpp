#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Data_Skin_Head

#include "Basic.hpp"

#include "Enum_SelectedColor_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Str_Skin_Skin_structs.hpp"
#include "Str_SkinMaterial_structs.hpp"


namespace SDK::Params
{

// Function Data_Skin_Head.Data_Skin_Head_C.Set Head
// 0x0178 (0x0178 - 0x0000)
struct Data_Skin_Head_C_Set_Head final
{
public:
	class USkeletalMeshComponent*                 Mesh_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	Enum_SelectedColor                            Color;                                             // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Skin;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UData_Face_C*                           Face;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Helmet_Color;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Face_Material_Instnce;                             // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Face_M;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	Enum_SelectedColor                            Temp_byte_Variable;                                // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0050(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_Skin_Skin                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetMaterialSlotNames_ReturnValue;         // 0x00C8(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_SkinMaterial                      CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CallFunc_Map_Find_Value;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CallFunc_Map_Find_Value_1;                         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Data_Skin_Head_C_Set_Head) == 0x000008, "Wrong alignment on Data_Skin_Head_C_Set_Head");
static_assert(sizeof(Data_Skin_Head_C_Set_Head) == 0x000178, "Wrong size on Data_Skin_Head_C_Set_Head");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Mesh_0) == 0x000000, "Member 'Data_Skin_Head_C_Set_Head::Mesh_0' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Color) == 0x000008, "Member 'Data_Skin_Head_C_Set_Head::Color' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Skin) == 0x00000C, "Member 'Data_Skin_Head_C_Set_Head::Skin' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Face) == 0x000010, "Member 'Data_Skin_Head_C_Set_Head::Face' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Helmet_Color) == 0x000018, "Member 'Data_Skin_Head_C_Set_Head::Helmet_Color' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Face_Material_Instnce) == 0x000028, "Member 'Data_Skin_Head_C_Set_Head::Face_Material_Instnce' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Face_M) == 0x000030, "Member 'Data_Skin_Head_C_Set_Head::Face_M' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Temp_byte_Variable) == 0x000038, "Member 'Data_Skin_Head_C_Set_Head::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'Data_Skin_Head_C_Set_Head::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'Data_Skin_Head_C_Set_Head::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'Data_Skin_Head_C_Set_Head::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000050, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Array_Get_Item) == 0x000060, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000088, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000090, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x0000A8, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, Temp_int_Loop_Counter_Variable_1) == 0x0000C0, "Member 'Data_Skin_Head_C_Set_Head::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_GetMaterialSlotNames_ReturnValue) == 0x0000C8, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_GetMaterialSlotNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000D8, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000E8, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Map_Find_Value) == 0x000158, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Less_IntInt_ReturnValue_1) == 0x000161, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Map_Find_Value_1) == 0x000168, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Data_Skin_Head_C_Set_Head, CallFunc_Map_Find_ReturnValue_1) == 0x000170, "Member 'Data_Skin_Head_C_Set_Head::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

}

