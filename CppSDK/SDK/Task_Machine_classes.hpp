#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Machine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Task_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Task_Machine.Task_Machine_C
// 0x0040 (0x03A8 - 0x0368)
class ATask_Machine_C final : public ATask_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Task_Machine_C;                     // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Placed;                                            // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Random;                                            // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABottleSlot_C*>                  Bottles;                                           // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABottleSlot_C*>                  Task_Bottles;                                      // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AMachinePannel_C*>               Machines;                                          // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void Check_Machines(bool* End);
	void Check_Machines_End();
	void Clear();
	void ExecuteUbergraph_Task_Machine(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Start_Task(double Delay);
	void Suffle_Bottles();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Task_Machine_C">();
	}
	static class ATask_Machine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATask_Machine_C>();
	}
};
static_assert(alignof(ATask_Machine_C) == 0x000008, "Wrong alignment on ATask_Machine_C");
static_assert(sizeof(ATask_Machine_C) == 0x0003A8, "Wrong size on ATask_Machine_C");
static_assert(offsetof(ATask_Machine_C, UberGraphFrame_Task_Machine_C) == 0x000368, "Member 'ATask_Machine_C::UberGraphFrame_Task_Machine_C' has a wrong offset!");
static_assert(offsetof(ATask_Machine_C, Placed) == 0x000370, "Member 'ATask_Machine_C::Placed' has a wrong offset!");
static_assert(offsetof(ATask_Machine_C, Random) == 0x000374, "Member 'ATask_Machine_C::Random' has a wrong offset!");
static_assert(offsetof(ATask_Machine_C, Bottles) == 0x000378, "Member 'ATask_Machine_C::Bottles' has a wrong offset!");
static_assert(offsetof(ATask_Machine_C, Task_Bottles) == 0x000388, "Member 'ATask_Machine_C::Task_Bottles' has a wrong offset!");
static_assert(offsetof(ATask_Machine_C, Machines) == 0x000398, "Member 'ATask_Machine_C::Machines' has a wrong offset!");

}

