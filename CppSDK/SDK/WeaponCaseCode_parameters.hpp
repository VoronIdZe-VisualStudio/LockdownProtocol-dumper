#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponCaseCode

#include "Basic.hpp"

#include "E_NumType_structs.hpp"
#include "Engine_structs.hpp"
#include "Str_WeaponCase_Step_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Str_WeaponCase_Result_structs.hpp"
#include "E_NumPassState_structs.hpp"


namespace SDK::Params
{

// Function WeaponCaseCode.WeaponCaseCode_C.Check Code
// 0x0090 (0x0090 - 0x0000)
struct WeaponCaseCode_C_Check_Code final
{
public:
	uint8                                         Temp_Num;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_Other;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_Index;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NumType                                     Temp_byte_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NumType                                     Temp_byte_Variable_1;                              // 0x0009(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NumType                                     Temp_byte_Variable_2;                              // 0x000A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NumPassState                                Temp_byte_Variable_3;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_WeaponCase_Step                   K2Node_MakeStruct_Str_WeaponCase_Step;             // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NumPassState                                Temp_byte_Variable_4;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Identical_ReturnValue;              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item_1;                         // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NumPassState                                Temp_byte_Variable_5;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item_2;                         // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NumPassState                                K2Node_Select_Default;                             // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NumPassState                                K2Node_Select_Default_1;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_WeaponCase_Result                 K2Node_MakeStruct_Str_WeaponCase_Result;           // 0x0060(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(WeaponCaseCode_C_Check_Code) == 0x000008, "Wrong alignment on WeaponCaseCode_C_Check_Code");
static_assert(sizeof(WeaponCaseCode_C_Check_Code) == 0x000090, "Wrong size on WeaponCaseCode_C_Check_Code");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_Num) == 0x000000, "Member 'WeaponCaseCode_C_Check_Code::Temp_Num' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_Other) == 0x000001, "Member 'WeaponCaseCode_C_Check_Code::Temp_Other' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_Index) == 0x000004, "Member 'WeaponCaseCode_C_Check_Code::Temp_Index' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_byte_Variable) == 0x000008, "Member 'WeaponCaseCode_C_Check_Code::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_byte_Variable_1) == 0x000009, "Member 'WeaponCaseCode_C_Check_Code::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_byte_Variable_2) == 0x00000A, "Member 'WeaponCaseCode_C_Check_Code::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WeaponCaseCode_C_Check_Code::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WeaponCaseCode_C_Check_Code::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_bool_Variable) == 0x000018, "Member 'WeaponCaseCode_C_Check_Code::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_int_Variable) == 0x00001C, "Member 'WeaponCaseCode_C_Check_Code::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_byte_Variable_3) == 0x000020, "Member 'WeaponCaseCode_C_Check_Code::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'WeaponCaseCode_C_Check_Code::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'WeaponCaseCode_C_Check_Code::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'WeaponCaseCode_C_Check_Code::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_bool_Variable_1) == 0x000030, "Member 'WeaponCaseCode_C_Check_Code::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, K2Node_MakeStruct_Str_WeaponCase_Step) == 0x000034, "Member 'WeaponCaseCode_C_Check_Code::K2Node_MakeStruct_Str_WeaponCase_Step' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_byte_Variable_4) == 0x00003D, "Member 'WeaponCaseCode_C_Check_Code::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Array_Get_Item) == 0x000044, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Array_Identical_ReturnValue) == 0x000045, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Array_Identical_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Array_Get_Item_1) == 0x00004D, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004E, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, Temp_byte_Variable_5) == 0x000055, "Member 'WeaponCaseCode_C_Check_Code::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_Array_Get_Item_2) == 0x000056, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, K2Node_Select_Default) == 0x000057, "Member 'WeaponCaseCode_C_Check_Code::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000058, "Member 'WeaponCaseCode_C_Check_Code::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, K2Node_Select_Default_1) == 0x000059, "Member 'WeaponCaseCode_C_Check_Code::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Check_Code, K2Node_MakeStruct_Str_WeaponCase_Result) == 0x000060, "Member 'WeaponCaseCode_C_Check_Code::K2Node_MakeStruct_Str_WeaponCase_Result' has a wrong offset!");

// Function WeaponCaseCode.WeaponCaseCode_C.Clear Values
// 0x0048 (0x0048 - 0x0000)
struct WeaponCaseCode_C_Clear_Values final
{
public:
	E_NumType                                     Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_2;                              // 0x0002(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_WeaponCase_Step                   K2Node_MakeStruct_Str_WeaponCase_Step;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_WeaponCase_Result                 K2Node_MakeStruct_Str_WeaponCase_Result;           // 0x0018(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(WeaponCaseCode_C_Clear_Values) == 0x000008, "Wrong alignment on WeaponCaseCode_C_Clear_Values");
static_assert(sizeof(WeaponCaseCode_C_Clear_Values) == 0x000048, "Wrong size on WeaponCaseCode_C_Clear_Values");
static_assert(offsetof(WeaponCaseCode_C_Clear_Values, Temp_byte_Variable) == 0x000000, "Member 'WeaponCaseCode_C_Clear_Values::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Clear_Values, Temp_byte_Variable_1) == 0x000001, "Member 'WeaponCaseCode_C_Clear_Values::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Clear_Values, Temp_byte_Variable_2) == 0x000002, "Member 'WeaponCaseCode_C_Clear_Values::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Clear_Values, Temp_int_Variable) == 0x000004, "Member 'WeaponCaseCode_C_Clear_Values::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Clear_Values, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'WeaponCaseCode_C_Clear_Values::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Clear_Values, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WeaponCaseCode_C_Clear_Values::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Clear_Values, K2Node_MakeStruct_Str_WeaponCase_Step) == 0x000010, "Member 'WeaponCaseCode_C_Clear_Values::K2Node_MakeStruct_Str_WeaponCase_Step' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Clear_Values, K2Node_MakeStruct_Str_WeaponCase_Result) == 0x000018, "Member 'WeaponCaseCode_C_Clear_Values::K2Node_MakeStruct_Str_WeaponCase_Result' has a wrong offset!");

// Function WeaponCaseCode.WeaponCaseCode_C.ExecuteUbergraph_WeaponCaseCode
// 0x03C8 (0x03C8 - 0x0000)
struct WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Path_Distance;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location;                        // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Path_Distance_1;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_1;                      // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_1;       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Path_Distance_2;                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_2;                      // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_2;       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Path_Distance_3;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_3;                      // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_3;       // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Path_Distance_4;                      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_4;                      // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_4;       // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Path_Distance_5;                      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_5;                      // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_5;       // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Path_Distance_6;                      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_6;                      // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_6;       // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Path_Distance_7;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_7;                      // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_7;       // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Path_Distance_8;                      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_8;                      // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_8;       // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Path_Distance_9;                      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_9;                      // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_9;       // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Path_Distance_10;                     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_10;                     // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_10;      // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Path_Distance_11;                     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Path_Location_11;                     // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_11;      // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponCase_UI_C*                     K2Node_DynamicCast_AsW_Weapon_Case_UI;             // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGM_C*                                  K2Node_DynamicCast_AsGM;                           // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0234(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_Num;                            // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246[0x2];                                      // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0252(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_253[0x1];                                      // 0x0253(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Delay_1;                        // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_WeaponCase_Step                   K2Node_MakeStruct_Str_WeaponCase_Step;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NumPassState                                K2Node_CustomEvent_Result_State;                   // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_WeaponCase_Result                 K2Node_MakeStruct_Str_WeaponCase_Result;           // 0x0270(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Delay;                          // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_WeaponCase_Step                   K2Node_MakeStruct_Str_WeaponCase_Step_1;           // 0x02AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_WeaponCase_Result                 K2Node_MakeStruct_Str_WeaponCase_Result_1;         // 0x02B8(0x0030)(HasGetValueTypeHash)
	struct FStr_WeaponCase_Step                   K2Node_MakeStruct_Str_WeaponCase_Step_2;           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_WeaponCase_Result                 K2Node_MakeStruct_Str_WeaponCase_Result_2;         // 0x02F0(0x0030)(HasGetValueTypeHash)
	struct FStr_WeaponCase_Step                   K2Node_MakeStruct_Str_WeaponCase_Step_3;           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_WeaponCase_Result                 K2Node_MakeStruct_Str_WeaponCase_Result_3;         // 0x0330(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0368(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0378(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_WeaponCase_Step                   K2Node_MakeStruct_Str_WeaponCase_Step_4;           // 0x0384(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_WeaponCase_Result                 K2Node_MakeStruct_Str_WeaponCase_Result_4;         // 0x0390(0x0030)(HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode) == 0x000008, "Wrong alignment on WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode");
static_assert(sizeof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode) == 0x0003C8, "Wrong size on WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, EntryPoint) == 0x000000, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance) == 0x000008, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location) == 0x000010, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000028, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_1) == 0x000030, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_1) == 0x000038, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_1) == 0x000050, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_2) == 0x000060, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_2' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_2) == 0x000068, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_2' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_2) == 0x000088, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_3) == 0x000090, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_3' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_3) == 0x000098, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_3' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_3) == 0x0000B0, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_4) == 0x0000B8, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_4' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_4) == 0x0000C0, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_4' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_4) == 0x0000D8, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_5) == 0x0000E0, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_5' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_5) == 0x0000E8, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_5' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_5) == 0x000100, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_6) == 0x000108, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_6' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_6) == 0x000110, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_6' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_6) == 0x000128, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, Temp_int_Array_Index_Variable) == 0x000134, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_7) == 0x000138, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_7' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_7) == 0x000140, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_7' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_7) == 0x000158, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_8) == 0x000160, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_8' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_8) == 0x000168, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_8' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_8) == 0x000180, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_9) == 0x000188, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_9' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_9) == 0x000190, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_9' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_9) == 0x0001A8, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_IsValid_ReturnValue_1) == 0x0001B0, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_10) == 0x0001B8, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_10' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_10) == 0x0001C0, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_10' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_10) == 0x0001D8, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Distance_11) == 0x0001E0, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Distance_11' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Get_Path_Location_11) == 0x0001E8, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Get_Path_Location_11' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_SpawnSoundAtLocation_ReturnValue_11) == 0x000200, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_SpawnSoundAtLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_GetWidget_ReturnValue) == 0x000208, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_GetGameMode_ReturnValue) == 0x000210, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_DynamicCast_AsW_Weapon_Case_UI) == 0x000218, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_DynamicCast_AsW_Weapon_Case_UI' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_DynamicCast_AsGM) == 0x000228, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_DynamicCast_AsGM' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_DynamicCast_bSuccess_1) == 0x000230, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_CreateDelegate_OutputDelegate) == 0x000234, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_CustomEvent_Num) == 0x000244, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_CustomEvent_Num' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Less_IntInt_ReturnValue) == 0x000245, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Add_IntInt_ReturnValue_1) == 0x000248, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Array_Length_ReturnValue) == 0x00024C, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Less_IntInt_ReturnValue_1) == 0x000250, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_SwitchEnum_CmpSuccess) == 0x000251, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, Temp_byte_Variable) == 0x000252, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_CustomEvent_Delay_1) == 0x000254, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_CustomEvent_Delay_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000258, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_MakeStruct_Str_WeaponCase_Step) == 0x000260, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_MakeStruct_Str_WeaponCase_Step' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_CustomEvent_Result_State) == 0x000268, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_CustomEvent_Result_State' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_MakeStruct_Str_WeaponCase_Result) == 0x000270, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_MakeStruct_Str_WeaponCase_Result' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_SwitchEnum_CmpSuccess_1) == 0x0002A0, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_HasAuthority_ReturnValue) == 0x0002A1, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, Temp_int_Variable) == 0x0002A4, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_CustomEvent_Delay) == 0x0002A8, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_MakeStruct_Str_WeaponCase_Step_1) == 0x0002AC, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_MakeStruct_Str_WeaponCase_Step_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_MakeStruct_Str_WeaponCase_Result_1) == 0x0002B8, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_MakeStruct_Str_WeaponCase_Result_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_MakeStruct_Str_WeaponCase_Step_2) == 0x0002E8, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_MakeStruct_Str_WeaponCase_Step_2' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_MakeStruct_Str_WeaponCase_Result_2) == 0x0002F0, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_MakeStruct_Str_WeaponCase_Result_2' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_MakeStruct_Str_WeaponCase_Step_3) == 0x000320, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_MakeStruct_Str_WeaponCase_Step_3' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, Temp_int_Variable_1) == 0x000328, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_MakeStruct_Str_WeaponCase_Result_3) == 0x000330, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_MakeStruct_Str_WeaponCase_Result_3' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Greater_IntInt_ReturnValue) == 0x000360, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_Subtract_IntInt_ReturnValue) == 0x000364, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_CreateDelegate_OutputDelegate_1) == 0x000368, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000378, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000380, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_MakeStruct_Str_WeaponCase_Step_4) == 0x000384, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_MakeStruct_Str_WeaponCase_Step_4' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, K2Node_MakeStruct_Str_WeaponCase_Result_4) == 0x000390, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::K2Node_MakeStruct_Str_WeaponCase_Result_4' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x0003C0, "Member 'WeaponCaseCode_C_ExecuteUbergraph_WeaponCaseCode::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");

// Function WeaponCaseCode.WeaponCaseCode_C.Generate Code
// 0x0040 (0x0040 - 0x0000)
struct WeaponCaseCode_C_Generate_Code final
{
public:
	int32                                         Temp_Index;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Available_Values;                                  // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<uint8>                                 K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponCaseCode_C_Generate_Code) == 0x000008, "Wrong alignment on WeaponCaseCode_C_Generate_Code");
static_assert(sizeof(WeaponCaseCode_C_Generate_Code) == 0x000040, "Wrong size on WeaponCaseCode_C_Generate_Code");
static_assert(offsetof(WeaponCaseCode_C_Generate_Code, Temp_Index) == 0x000000, "Member 'WeaponCaseCode_C_Generate_Code::Temp_Index' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Generate_Code, Available_Values) == 0x000008, "Member 'WeaponCaseCode_C_Generate_Code::Available_Values' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Generate_Code, K2Node_MakeArray_Array) == 0x000018, "Member 'WeaponCaseCode_C_Generate_Code::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Generate_Code, Temp_int_Variable) == 0x000028, "Member 'WeaponCaseCode_C_Generate_Code::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Generate_Code, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WeaponCaseCode_C_Generate_Code::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Generate_Code, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WeaponCaseCode_C_Generate_Code::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Generate_Code, CallFunc_Array_Get_Item) == 0x000034, "Member 'WeaponCaseCode_C_Generate_Code::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Generate_Code, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WeaponCaseCode_C_Generate_Code::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_Generate_Code, CallFunc_RandomInteger_ReturnValue) == 0x00003C, "Member 'WeaponCaseCode_C_Generate_Code::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");

// Function WeaponCaseCode.WeaponCaseCode_C.Generate Steps
// 0x0004 (0x0004 - 0x0000)
struct WeaponCaseCode_C_Generate_Steps final
{
public:
	int32                                         Step_Count;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponCaseCode_C_Generate_Steps) == 0x000004, "Wrong alignment on WeaponCaseCode_C_Generate_Steps");
static_assert(sizeof(WeaponCaseCode_C_Generate_Steps) == 0x000004, "Wrong size on WeaponCaseCode_C_Generate_Steps");
static_assert(offsetof(WeaponCaseCode_C_Generate_Steps, Step_Count) == 0x000000, "Member 'WeaponCaseCode_C_Generate_Steps::Step_Count' has a wrong offset!");

// Function WeaponCaseCode.WeaponCaseCode_C.Play State Sound
// 0x0001 (0x0001 - 0x0000)
struct WeaponCaseCode_C_Play_State_Sound final
{
public:
	E_NumPassState                                Result_State;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponCaseCode_C_Play_State_Sound) == 0x000001, "Wrong alignment on WeaponCaseCode_C_Play_State_Sound");
static_assert(sizeof(WeaponCaseCode_C_Play_State_Sound) == 0x000001, "Wrong size on WeaponCaseCode_C_Play_State_Sound");
static_assert(offsetof(WeaponCaseCode_C_Play_State_Sound, Result_State) == 0x000000, "Member 'WeaponCaseCode_C_Play_State_Sound::Result_State' has a wrong offset!");

// Function WeaponCaseCode.WeaponCaseCode_C.Push Num
// 0x0001 (0x0001 - 0x0000)
struct WeaponCaseCode_C_Push_Num final
{
public:
	uint8                                         Num;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponCaseCode_C_Push_Num) == 0x000001, "Wrong alignment on WeaponCaseCode_C_Push_Num");
static_assert(sizeof(WeaponCaseCode_C_Push_Num) == 0x000001, "Wrong size on WeaponCaseCode_C_Push_Num");
static_assert(offsetof(WeaponCaseCode_C_Push_Num, Num) == 0x000000, "Member 'WeaponCaseCode_C_Push_Num::Num' has a wrong offset!");

// Function WeaponCaseCode.WeaponCaseCode_C.Start Opening
// 0x0004 (0x0004 - 0x0000)
struct WeaponCaseCode_C_Start_Opening final
{
public:
	int32                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponCaseCode_C_Start_Opening) == 0x000004, "Wrong alignment on WeaponCaseCode_C_Start_Opening");
static_assert(sizeof(WeaponCaseCode_C_Start_Opening) == 0x000004, "Wrong size on WeaponCaseCode_C_Start_Opening");
static_assert(offsetof(WeaponCaseCode_C_Start_Opening, Delay) == 0x000000, "Member 'WeaponCaseCode_C_Start_Opening::Delay' has a wrong offset!");

// Function WeaponCaseCode.WeaponCaseCode_C.Start Waiting
// 0x0004 (0x0004 - 0x0000)
struct WeaponCaseCode_C_Start_Waiting final
{
public:
	int32                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponCaseCode_C_Start_Waiting) == 0x000004, "Wrong alignment on WeaponCaseCode_C_Start_Waiting");
static_assert(sizeof(WeaponCaseCode_C_Start_Waiting) == 0x000004, "Wrong size on WeaponCaseCode_C_Start_Waiting");
static_assert(offsetof(WeaponCaseCode_C_Start_Waiting, Delay) == 0x000000, "Member 'WeaponCaseCode_C_Start_Waiting::Delay' has a wrong offset!");

// Function WeaponCaseCode.WeaponCaseCode_C.UserConstructionScript
// 0x0040 (0x0040 - 0x0000)
struct WeaponCaseCode_C_UserConstructionScript final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(uint8 Num)>                    K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASoundPath_C*                           K2Node_DynamicCast_AsSound_Path;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ANumPad_C*                              K2Node_DynamicCast_AsNum_Pad;                      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponCaseCode_C_UserConstructionScript) == 0x000008, "Wrong alignment on WeaponCaseCode_C_UserConstructionScript");
static_assert(sizeof(WeaponCaseCode_C_UserConstructionScript) == 0x000040, "Wrong size on WeaponCaseCode_C_UserConstructionScript");
static_assert(offsetof(WeaponCaseCode_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WeaponCaseCode_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WeaponCaseCode_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_UserConstructionScript, K2Node_DynamicCast_AsSound_Path) == 0x000020, "Member 'WeaponCaseCode_C_UserConstructionScript::K2Node_DynamicCast_AsSound_Path' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WeaponCaseCode_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_UserConstructionScript, K2Node_DynamicCast_AsNum_Pad) == 0x000030, "Member 'WeaponCaseCode_C_UserConstructionScript::K2Node_DynamicCast_AsNum_Pad' has a wrong offset!");
static_assert(offsetof(WeaponCaseCode_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WeaponCaseCode_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

