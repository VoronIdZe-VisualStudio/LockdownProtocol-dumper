#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Plant

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Plant.Plant_C
// 0x0050 (0x02F8 - 0x02A8)
class APlant_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere2;                                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere1;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CA_Interaction;                                    // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Type;                                              // 0x02E0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AInteraction_C*                         Interaction;                                       // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Fake;                                              // 0x02F0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void All_Trigger(class AMec_C* Source);
	void All_Update_Type(bool Lock, int32 Type_0);
	void BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_0_Local_Trigger__DelegateSignature(class AMec_C* Source, const struct FStr_ItemState& State);
	void BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_1_Focus__DelegateSignature(bool TRUE_0);
	void BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_2_Focusable__DelegateSignature(bool TRUE_0);
	void BndEvt__Plant_Interaction_K2Node_ComponentBoundEvent_3_Net_Trigger__DelegateSignature(class AMec_C* Source, const struct FStr_ItemState& State);
	void ExecuteUbergraph_Plant(int32 EntryPoint);
	void Get_Key(class AActor** Key);
	void Get_Name(class AMec_C* Mec, class FString* Name_0);
	void Local_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Lock_Plant(bool Lock);
	void Net_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void OnRep_Fake();
	void OnRep_Type();
	void Other_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void ReceiveBeginPlay();
	void Request_Update();
	void Set_Type(int32 Type_0, bool Fake_0);
	void Update_Type();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Plant_C">();
	}
	static class APlant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlant_C>();
	}
};
static_assert(alignof(APlant_C) == 0x000008, "Wrong alignment on APlant_C");
static_assert(sizeof(APlant_C) == 0x0002F8, "Wrong size on APlant_C");
static_assert(offsetof(APlant_C, UberGraphFrame) == 0x0002A8, "Member 'APlant_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APlant_C, Sphere2) == 0x0002B0, "Member 'APlant_C::Sphere2' has a wrong offset!");
static_assert(offsetof(APlant_C, Sphere1) == 0x0002B8, "Member 'APlant_C::Sphere1' has a wrong offset!");
static_assert(offsetof(APlant_C, Arrow) == 0x0002C0, "Member 'APlant_C::Arrow' has a wrong offset!");
static_assert(offsetof(APlant_C, CA_Interaction) == 0x0002C8, "Member 'APlant_C::CA_Interaction' has a wrong offset!");
static_assert(offsetof(APlant_C, Sphere) == 0x0002D0, "Member 'APlant_C::Sphere' has a wrong offset!");
static_assert(offsetof(APlant_C, Root) == 0x0002D8, "Member 'APlant_C::Root' has a wrong offset!");
static_assert(offsetof(APlant_C, Type) == 0x0002E0, "Member 'APlant_C::Type' has a wrong offset!");
static_assert(offsetof(APlant_C, Interaction) == 0x0002E8, "Member 'APlant_C::Interaction' has a wrong offset!");
static_assert(offsetof(APlant_C, Fake) == 0x0002F0, "Member 'APlant_C::Fake' has a wrong offset!");

}

