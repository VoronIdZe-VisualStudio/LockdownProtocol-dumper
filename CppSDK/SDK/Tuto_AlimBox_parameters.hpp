#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tuto_AlimBox

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_Alim_FuzeState_structs.hpp"
#include "Str_Item_structs.hpp"
#include "Str_ItemState_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Tuto_AlimBox.Tuto_AlimBox_C.All Set Glass State
// 0x0001 (0x0001 - 0x0000)
struct Tuto_AlimBox_C_All_Set_Glass_State final
{
public:
	bool                                          Close;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tuto_AlimBox_C_All_Set_Glass_State) == 0x000001, "Wrong alignment on Tuto_AlimBox_C_All_Set_Glass_State");
static_assert(sizeof(Tuto_AlimBox_C_All_Set_Glass_State) == 0x000001, "Wrong size on Tuto_AlimBox_C_All_Set_Glass_State");
static_assert(offsetof(Tuto_AlimBox_C_All_Set_Glass_State, Close) == 0x000000, "Member 'Tuto_AlimBox_C_All_Set_Glass_State::Close' has a wrong offset!");

// Function Tuto_AlimBox.Tuto_AlimBox_C.Check Fuzes
// 0x0068 (0x0068 - 0x0000)
struct Tuto_AlimBox_C_Check_Fuzes final
{
public:
	E_Alim_FuzeState                              _Target_Fuze_State;                                // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _Linked_;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AItemSlot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            CallFunc_Array_Get_Item_2;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            CallFunc_Array_Get_Item_3;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            CallFunc_Array_Get_Item_4;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tuto_AlimBox_C_Check_Fuzes) == 0x000008, "Wrong alignment on Tuto_AlimBox_C_Check_Fuzes");
static_assert(sizeof(Tuto_AlimBox_C_Check_Fuzes) == 0x000068, "Wrong size on Tuto_AlimBox_C_Check_Fuzes");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, _Target_Fuze_State) == 0x000000, "Member 'Tuto_AlimBox_C_Check_Fuzes::_Target_Fuze_State' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, _Linked_) == 0x000001, "Member 'Tuto_AlimBox_C_Check_Fuzes::_Linked_' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Tuto_AlimBox_C_Check_Fuzes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Tuto_AlimBox_C_Check_Fuzes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Array_Get_Item) == 0x000018, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Array_Get_Item_2) == 0x000030, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Array_LastIndex_ReturnValue) == 0x000038, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Array_Get_Item_3) == 0x000040, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Less_IntInt_ReturnValue_2) == 0x000049, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004A, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_BooleanOR_ReturnValue_1) == 0x00004B, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004C, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Array_Get_Item_4) == 0x000058, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Less_IntInt_ReturnValue_3) == 0x000060, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Less_IntInt_ReturnValue_4) == 0x000061, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000062, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_Less_IntInt_ReturnValue_5) == 0x000063, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_BooleanOR_ReturnValue_2) == 0x000064, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000065, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_BooleanOR_ReturnValue_3) == 0x000066, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Check_Fuzes, CallFunc_BooleanOR_ReturnValue_4) == 0x000067, "Member 'Tuto_AlimBox_C_Check_Fuzes::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function Tuto_AlimBox.Tuto_AlimBox_C.ExecuteUbergraph_Tuto_AlimBox
// 0x03A8 (0x03A8 - 0x0000)
struct Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_C*                                  K2Node_DynamicCast_AsGM;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_In_Color;                       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Out_Color;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0138(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_Close;                          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1; // 0x0240(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AItemSlot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E[0x2];                                      // 0x034E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            CallFunc_Array_Get_Item_2;                         // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItemSlot_C*                            CallFunc_Array_Get_Item_3;                         // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItemSlot_C*                            CallFunc_Array_Get_Item_4;                         // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox) == 0x000008, "Wrong alignment on Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox");
static_assert(sizeof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox) == 0x0003A8, "Wrong size on Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, EntryPoint) == 0x000000, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_int_Variable) == 0x000004, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_struct_Variable) == 0x000008, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_struct_Variable_1) == 0x000018, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_struct_Variable_2) == 0x000028, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_struct_Variable_3) == 0x000038, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_LinearColorLerp_ReturnValue) == 0x000048, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000058, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_struct_Variable_4) == 0x000070, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_HasAuthority_ReturnValue) == 0x000080, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_struct_Variable_5) == 0x000084, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_HasAuthority_ReturnValue_1) == 0x000094, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_int_Loop_Counter_Variable_1) == 0x0000A0, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_int_Variable_1) == 0x0000A4, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_int_Loop_Counter_Variable_2) == 0x0000AC, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B0, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_int_Array_Index_Variable_1) == 0x0000B4, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_GetGameMode_ReturnValue) == 0x0000B8, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, K2Node_DynamicCast_AsGM) == 0x0000D0, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::K2Node_DynamicCast_AsGM' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_int_Array_Index_Variable_2) == 0x0000DC, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, K2Node_CustomEvent_In_Color) == 0x0000F4, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::K2Node_CustomEvent_In_Color' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, K2Node_CustomEvent_Out_Color) == 0x0000F8, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::K2Node_CustomEvent_Out_Color' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, K2Node_Select_Default) == 0x0000FC, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000110, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_struct_Variable_6) == 0x000128, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000138, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, K2Node_CustomEvent_Close) == 0x000238, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::K2Node_CustomEvent_Close' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1) == 0x000240, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Array_Get_Item_1) == 0x000340, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Array_Length_ReturnValue_1) == 0x000348, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_HasAuthority_ReturnValue_2) == 0x00034C, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Less_IntInt_ReturnValue_1) == 0x00034D, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Array_Get_Item_2) == 0x000350, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Array_Length_ReturnValue_2) == 0x000358, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Less_IntInt_ReturnValue_2) == 0x00035C, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, Temp_struct_Variable_7) == 0x000360, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Array_Get_Item_3) == 0x000370, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, K2Node_Select_Default_1) == 0x000378, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000388, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox, CallFunc_Array_Get_Item_4) == 0x0003A0, "Member 'Tuto_AlimBox_C_ExecuteUbergraph_Tuto_AlimBox::CallFunc_Array_Get_Item_4' has a wrong offset!");

// Function Tuto_AlimBox.Tuto_AlimBox_C.Generate Fuzes
// 0x0038 (0x0038 - 0x0000)
struct Tuto_AlimBox_C_Generate_Fuzes final
{
public:
	int32                                         _Center_Color;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tuto_AlimBox_C_Generate_Fuzes) == 0x000008, "Wrong alignment on Tuto_AlimBox_C_Generate_Fuzes");
static_assert(sizeof(Tuto_AlimBox_C_Generate_Fuzes) == 0x000038, "Wrong size on Tuto_AlimBox_C_Generate_Fuzes");
static_assert(offsetof(Tuto_AlimBox_C_Generate_Fuzes, _Center_Color) == 0x000000, "Member 'Tuto_AlimBox_C_Generate_Fuzes::_Center_Color' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Generate_Fuzes, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000004, "Member 'Tuto_AlimBox_C_Generate_Fuzes::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Generate_Fuzes, CallFunc_Multiply_IntInt_ReturnValue) == 0x000008, "Member 'Tuto_AlimBox_C_Generate_Fuzes::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Generate_Fuzes, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x00000C, "Member 'Tuto_AlimBox_C_Generate_Fuzes::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Generate_Fuzes, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Tuto_AlimBox_C_Generate_Fuzes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Generate_Fuzes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'Tuto_AlimBox_C_Generate_Fuzes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Generate_Fuzes, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000018, "Member 'Tuto_AlimBox_C_Generate_Fuzes::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Generate_Fuzes, K2Node_MakeArray_Array) == 0x000020, "Member 'Tuto_AlimBox_C_Generate_Fuzes::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Generate_Fuzes, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x000030, "Member 'Tuto_AlimBox_C_Generate_Fuzes::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");

// Function Tuto_AlimBox.Tuto_AlimBox_C.Get MapPosition
// 0x0078 (0x0078 - 0x0000)
struct Tuto_AlimBox_C_Get_MapPosition final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tuto_AlimBox_C_Get_MapPosition) == 0x000008, "Wrong alignment on Tuto_AlimBox_C_Get_MapPosition");
static_assert(sizeof(Tuto_AlimBox_C_Get_MapPosition) == 0x000078, "Wrong size on Tuto_AlimBox_C_Get_MapPosition");
static_assert(offsetof(Tuto_AlimBox_C_Get_MapPosition, Location) == 0x000000, "Member 'Tuto_AlimBox_C_Get_MapPosition::Location' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Get_MapPosition, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'Tuto_AlimBox_C_Get_MapPosition::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Get_MapPosition, CallFunc_BreakVector_X) == 0x000030, "Member 'Tuto_AlimBox_C_Get_MapPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Get_MapPosition, CallFunc_BreakVector_Y) == 0x000038, "Member 'Tuto_AlimBox_C_Get_MapPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Get_MapPosition, CallFunc_BreakVector_Z) == 0x000040, "Member 'Tuto_AlimBox_C_Get_MapPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Get_MapPosition, CallFunc_BreakVector_X_1) == 0x000048, "Member 'Tuto_AlimBox_C_Get_MapPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Get_MapPosition, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'Tuto_AlimBox_C_Get_MapPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Get_MapPosition, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'Tuto_AlimBox_C_Get_MapPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Get_MapPosition, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'Tuto_AlimBox_C_Get_MapPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function Tuto_AlimBox.Tuto_AlimBox_C.Set Request Colors
// 0x0008 (0x0008 - 0x0000)
struct Tuto_AlimBox_C_Set_Request_Colors final
{
public:
	int32                                         In_Color_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Out_Color_0;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tuto_AlimBox_C_Set_Request_Colors) == 0x000004, "Wrong alignment on Tuto_AlimBox_C_Set_Request_Colors");
static_assert(sizeof(Tuto_AlimBox_C_Set_Request_Colors) == 0x000008, "Wrong size on Tuto_AlimBox_C_Set_Request_Colors");
static_assert(offsetof(Tuto_AlimBox_C_Set_Request_Colors, In_Color_0) == 0x000000, "Member 'Tuto_AlimBox_C_Set_Request_Colors::In_Color_0' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Set_Request_Colors, Out_Color_0) == 0x000004, "Member 'Tuto_AlimBox_C_Set_Request_Colors::Out_Color_0' has a wrong offset!");

// Function Tuto_AlimBox.Tuto_AlimBox_C.Spawn Batteries
// 0x0060 (0x0060 - 0x0000)
struct Tuto_AlimBox_C_Spawn_Batteries final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min_Charge;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Charge;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStr_Item>                      Array;                                             // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FStr_Item>                      Items;                                             // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_MakeStruct_Str_ItemState;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_Item                              K2Node_MakeStruct_Str_Item;                        // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tuto_AlimBox_C_Spawn_Batteries) == 0x000008, "Wrong alignment on Tuto_AlimBox_C_Spawn_Batteries");
static_assert(sizeof(Tuto_AlimBox_C_Spawn_Batteries) == 0x000060, "Wrong size on Tuto_AlimBox_C_Spawn_Batteries");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, Count) == 0x000000, "Member 'Tuto_AlimBox_C_Spawn_Batteries::Count' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, Min_Charge) == 0x000004, "Member 'Tuto_AlimBox_C_Spawn_Batteries::Min_Charge' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, Max_Charge) == 0x000008, "Member 'Tuto_AlimBox_C_Spawn_Batteries::Max_Charge' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, Array) == 0x000010, "Member 'Tuto_AlimBox_C_Spawn_Batteries::Array' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, Items) == 0x000020, "Member 'Tuto_AlimBox_C_Spawn_Batteries::Items' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, Temp_int_Variable) == 0x000030, "Member 'Tuto_AlimBox_C_Spawn_Batteries::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000034, "Member 'Tuto_AlimBox_C_Spawn_Batteries::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, K2Node_MakeStruct_Str_ItemState) == 0x000038, "Member 'Tuto_AlimBox_C_Spawn_Batteries::K2Node_MakeStruct_Str_ItemState' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'Tuto_AlimBox_C_Spawn_Batteries::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, K2Node_MakeStruct_Str_Item) == 0x000048, "Member 'Tuto_AlimBox_C_Spawn_Batteries::K2Node_MakeStruct_Str_Item' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Tuto_AlimBox_C_Spawn_Batteries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Spawn_Batteries, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'Tuto_AlimBox_C_Spawn_Batteries::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function Tuto_AlimBox.Tuto_AlimBox_C.Update PowerLine
// 0x01E0 (0x01E0 - 0x0000)
struct Tuto_AlimBox_C_Update_PowerLine final
{
public:
	struct FLinearColor                           Request_A;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Request_B;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Valid_A;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Valid_B;                                           // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Drain_A;                                           // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Drain_B;                                           // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Alim_FuzeState                              Temp_byte_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Alim_FuzeState                              Temp_byte_Variable_1;                              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_4;                // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_5;                // 0x0184(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_6;                // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_7;                // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tuto_AlimBox_C_Update_PowerLine) == 0x000008, "Wrong alignment on Tuto_AlimBox_C_Update_PowerLine");
static_assert(sizeof(Tuto_AlimBox_C_Update_PowerLine) == 0x0001E0, "Wrong size on Tuto_AlimBox_C_Update_PowerLine");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Request_A) == 0x000000, "Member 'Tuto_AlimBox_C_Update_PowerLine::Request_A' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Request_B) == 0x000010, "Member 'Tuto_AlimBox_C_Update_PowerLine::Request_B' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Valid_A) == 0x000020, "Member 'Tuto_AlimBox_C_Update_PowerLine::Valid_A' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Valid_B) == 0x000030, "Member 'Tuto_AlimBox_C_Update_PowerLine::Valid_B' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Drain_A) == 0x000040, "Member 'Tuto_AlimBox_C_Update_PowerLine::Drain_A' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Drain_B) == 0x000050, "Member 'Tuto_AlimBox_C_Update_PowerLine::Drain_B' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_struct_Variable) == 0x000060, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_int_Variable) == 0x000070, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_struct_Variable_1) == 0x000074, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_byte_Variable) == 0x000084, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_struct_Variable_2) == 0x000088, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_struct_Variable_3) == 0x000098, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_int_Variable_1) == 0x0000A8, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_struct_Variable_4) == 0x0000AC, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_int_Array_Index_Variable) == 0x0000BC, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_struct_Variable_5) == 0x0000C8, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, Temp_byte_Variable_1) == 0x0000D9, "Member 'Tuto_AlimBox_C_Update_PowerLine::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Greater_IntInt_ReturnValue) == 0x0000DA, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_BooleanAND_ReturnValue) == 0x0000DB, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_BooleanAND_ReturnValue_1) == 0x0000DD, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_SelectFloat_ReturnValue) == 0x0000E0, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E8, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E9, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000EA, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_BooleanAND_ReturnValue_2) == 0x0000EB, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, K2Node_Select_Default) == 0x0000EC, "Member 'Tuto_AlimBox_C_Update_PowerLine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000FC, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000FD, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_SelectColor_ReturnValue) == 0x000100, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000110, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_SelectColor_ReturnValue_1) == 0x000114, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000124, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, K2Node_Select_Default_1) == 0x000128, "Member 'Tuto_AlimBox_C_Update_PowerLine::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_SelectColor_ReturnValue_2) == 0x000138, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000148, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_SelectColor_ReturnValue_3) == 0x00014C, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_BooleanAND_ReturnValue_3) == 0x00015C, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Greater_IntInt_ReturnValue_5) == 0x00015D, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, K2Node_Select_Default_2) == 0x000160, "Member 'Tuto_AlimBox_C_Update_PowerLine::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_SelectColor_ReturnValue_4) == 0x000170, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_SelectColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Greater_IntInt_ReturnValue_6) == 0x000180, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_SelectColor_ReturnValue_5) == 0x000184, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_SelectColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Array_Get_Item) == 0x000198, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, K2Node_Select_Default_3) == 0x0001A0, "Member 'Tuto_AlimBox_C_Update_PowerLine::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_SelectColor_ReturnValue_6) == 0x0001B0, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_SelectColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_SelectColor_ReturnValue_7) == 0x0001C0, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_SelectColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Array_Length_ReturnValue) == 0x0001D0, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001D4, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_Update_PowerLine, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0001D8, "Member 'Tuto_AlimBox_C_Update_PowerLine::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Tuto_AlimBox.Tuto_AlimBox_C.UserConstructionScript
// 0x00B8 (0x00B8 - 0x0000)
struct Tuto_AlimBox_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItemSlot_C*                            K2Node_DynamicCast_AsItem_Slot;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            K2Node_DynamicCast_AsItem_Slot_1;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASoundPath_C*                           K2Node_DynamicCast_AsSound_Path;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItemSlot_C*                            K2Node_DynamicCast_AsItem_Slot_2;                  // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tuto_AlimBox_C_UserConstructionScript) == 0x000008, "Wrong alignment on Tuto_AlimBox_C_UserConstructionScript");
static_assert(sizeof(Tuto_AlimBox_C_UserConstructionScript) == 0x0000B8, "Wrong size on Tuto_AlimBox_C_UserConstructionScript");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, Temp_int_Variable) == 0x000000, "Member 'Tuto_AlimBox_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, Temp_int_Variable_1) == 0x000004, "Member 'Tuto_AlimBox_C_UserConstructionScript::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, Temp_int_Variable_2) == 0x000008, "Member 'Tuto_AlimBox_C_UserConstructionScript::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, Temp_int_Variable_3) == 0x00000C, "Member 'Tuto_AlimBox_C_UserConstructionScript::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Tuto_AlimBox_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Tuto_AlimBox_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Tuto_AlimBox_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, Temp_int_Variable_4) == 0x00001C, "Member 'Tuto_AlimBox_C_UserConstructionScript::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, Temp_int_Variable_5) == 0x000020, "Member 'Tuto_AlimBox_C_UserConstructionScript::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, Temp_int_Variable_6) == 0x000024, "Member 'Tuto_AlimBox_C_UserConstructionScript::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_DynamicCast_AsItem_Slot) == 0x000028, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_DynamicCast_AsItem_Slot' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_DynamicCast_AsItem_Slot_1) == 0x000038, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_DynamicCast_AsItem_Slot_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'Tuto_AlimBox_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue_1) == 0x000048, "Member 'Tuto_AlimBox_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000050, "Member 'Tuto_AlimBox_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Tuto_AlimBox_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'Tuto_AlimBox_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_CreateDelegate_OutputDelegate_1) == 0x000070, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_DynamicCast_AsSound_Path) == 0x000080, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_DynamicCast_AsSound_Path' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, Temp_int_Variable_7) == 0x00008C, "Member 'Tuto_AlimBox_C_UserConstructionScript::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_Select_Default) == 0x000090, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000094, "Member 'Tuto_AlimBox_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000098, "Member 'Tuto_AlimBox_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue_2) == 0x0000A0, "Member 'Tuto_AlimBox_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'Tuto_AlimBox_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_DynamicCast_AsItem_Slot_2) == 0x0000A8, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_DynamicCast_AsItem_Slot_2' has a wrong offset!");
static_assert(offsetof(Tuto_AlimBox_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'Tuto_AlimBox_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

}

