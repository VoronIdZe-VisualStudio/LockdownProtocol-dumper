#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tablet

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Tablet.Tablet_C.ExecuteUbergraph_Tablet
// 0x0058 (0x0058 - 0x0000)
struct Tablet_C_ExecuteUbergraph_Tablet final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Tablet_UI_C*                         K2Node_DynamicCast_AsW_Tablet_UI;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_Movement;                       // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Mec_Ref;                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Lock;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATask_C*>                        K2Node_CustomEvent_Tasks;                          // 0x0040(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_Video;                          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tablet_C_ExecuteUbergraph_Tablet) == 0x000008, "Wrong alignment on Tablet_C_ExecuteUbergraph_Tablet");
static_assert(sizeof(Tablet_C_ExecuteUbergraph_Tablet) == 0x000058, "Wrong size on Tablet_C_ExecuteUbergraph_Tablet");
static_assert(offsetof(Tablet_C_ExecuteUbergraph_Tablet, EntryPoint) == 0x000000, "Member 'Tablet_C_ExecuteUbergraph_Tablet::EntryPoint' has a wrong offset!");
static_assert(offsetof(Tablet_C_ExecuteUbergraph_Tablet, CallFunc_GetWidget_ReturnValue) == 0x000008, "Member 'Tablet_C_ExecuteUbergraph_Tablet::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tablet_C_ExecuteUbergraph_Tablet, K2Node_DynamicCast_AsW_Tablet_UI) == 0x000010, "Member 'Tablet_C_ExecuteUbergraph_Tablet::K2Node_DynamicCast_AsW_Tablet_UI' has a wrong offset!");
static_assert(offsetof(Tablet_C_ExecuteUbergraph_Tablet, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Tablet_C_ExecuteUbergraph_Tablet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Tablet_C_ExecuteUbergraph_Tablet, K2Node_CustomEvent_Movement) == 0x000020, "Member 'Tablet_C_ExecuteUbergraph_Tablet::K2Node_CustomEvent_Movement' has a wrong offset!");
static_assert(offsetof(Tablet_C_ExecuteUbergraph_Tablet, K2Node_CustomEvent_Mec_Ref) == 0x000030, "Member 'Tablet_C_ExecuteUbergraph_Tablet::K2Node_CustomEvent_Mec_Ref' has a wrong offset!");
static_assert(offsetof(Tablet_C_ExecuteUbergraph_Tablet, K2Node_CustomEvent_Lock) == 0x000038, "Member 'Tablet_C_ExecuteUbergraph_Tablet::K2Node_CustomEvent_Lock' has a wrong offset!");
static_assert(offsetof(Tablet_C_ExecuteUbergraph_Tablet, K2Node_CustomEvent_Tasks) == 0x000040, "Member 'Tablet_C_ExecuteUbergraph_Tablet::K2Node_CustomEvent_Tasks' has a wrong offset!");
static_assert(offsetof(Tablet_C_ExecuteUbergraph_Tablet, K2Node_CustomEvent_Video) == 0x000050, "Member 'Tablet_C_ExecuteUbergraph_Tablet::K2Node_CustomEvent_Video' has a wrong offset!");

// Function Tablet.Tablet_C.Initiate
// 0x0008 (0x0008 - 0x0000)
struct Tablet_C_Initiate final
{
public:
	class AMec_C*                                 Mec_Ref_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tablet_C_Initiate) == 0x000008, "Wrong alignment on Tablet_C_Initiate");
static_assert(sizeof(Tablet_C_Initiate) == 0x000008, "Wrong size on Tablet_C_Initiate");
static_assert(offsetof(Tablet_C_Initiate, Mec_Ref_0) == 0x000000, "Member 'Tablet_C_Initiate::Mec_Ref_0' has a wrong offset!");

// Function Tablet.Tablet_C.Lock Mouse
// 0x0001 (0x0001 - 0x0000)
struct Tablet_C_Lock_Mouse final
{
public:
	bool                                          Lock;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tablet_C_Lock_Mouse) == 0x000001, "Wrong alignment on Tablet_C_Lock_Mouse");
static_assert(sizeof(Tablet_C_Lock_Mouse) == 0x000001, "Wrong size on Tablet_C_Lock_Mouse");
static_assert(offsetof(Tablet_C_Lock_Mouse, Lock) == 0x000000, "Member 'Tablet_C_Lock_Mouse::Lock' has a wrong offset!");

// Function Tablet.Tablet_C.Move
// 0x0010 (0x0010 - 0x0000)
struct Tablet_C_Move final
{
public:
	struct FVector2D                              Movement;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tablet_C_Move) == 0x000008, "Wrong alignment on Tablet_C_Move");
static_assert(sizeof(Tablet_C_Move) == 0x000010, "Wrong size on Tablet_C_Move");
static_assert(offsetof(Tablet_C_Move, Movement) == 0x000000, "Member 'Tablet_C_Move::Movement' has a wrong offset!");

// Function Tablet.Tablet_C.Set Screen Shader
// 0x0001 (0x0001 - 0x0000)
struct Tablet_C_Set_Screen_Shader final
{
public:
	bool                                          Video;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tablet_C_Set_Screen_Shader) == 0x000001, "Wrong alignment on Tablet_C_Set_Screen_Shader");
static_assert(sizeof(Tablet_C_Set_Screen_Shader) == 0x000001, "Wrong size on Tablet_C_Set_Screen_Shader");
static_assert(offsetof(Tablet_C_Set_Screen_Shader, Video) == 0x000000, "Member 'Tablet_C_Set_Screen_Shader::Video' has a wrong offset!");

// Function Tablet.Tablet_C.Update Tasks
// 0x0010 (0x0010 - 0x0000)
struct Tablet_C_Update_Tasks final
{
public:
	TArray<class ATask_C*>                        Tasks;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Tablet_C_Update_Tasks) == 0x000008, "Wrong alignment on Tablet_C_Update_Tasks");
static_assert(sizeof(Tablet_C_Update_Tasks) == 0x000010, "Wrong size on Tablet_C_Update_Tasks");
static_assert(offsetof(Tablet_C_Update_Tasks, Tasks) == 0x000000, "Member 'Tablet_C_Update_Tasks::Tasks' has a wrong offset!");

}

