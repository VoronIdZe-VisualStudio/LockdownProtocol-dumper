#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CameraScreen.CameraScreen_C
// 0x0048 (0x02F0 - 0x02A8)
class ACameraScreen_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Root;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ARoomCamera_C*                          Camera_Ref;                                        // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ACameraRoomHandler_C*                   Camera_Handler;                                    // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Delay;                                             // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_Ref;                                         // 0x02D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Screen_M;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar;                                            // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Capture_Tick();
	void ExecuteUbergraph_CameraScreen(int32 EntryPoint);
	void Set_New_Camera(class ARoomCamera_C* Camera, int32 Index_0);
	void Start_Screen(float Rate);
	void Stop_Screen();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CameraScreen_C">();
	}
	static class ACameraScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACameraScreen_C>();
	}
};
static_assert(alignof(ACameraScreen_C) == 0x000008, "Wrong alignment on ACameraScreen_C");
static_assert(sizeof(ACameraScreen_C) == 0x0002F0, "Wrong size on ACameraScreen_C");
static_assert(offsetof(ACameraScreen_C, UberGraphFrame) == 0x0002A8, "Member 'ACameraScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACameraScreen_C, Root) == 0x0002B0, "Member 'ACameraScreen_C::Root' has a wrong offset!");
static_assert(offsetof(ACameraScreen_C, Plane) == 0x0002B8, "Member 'ACameraScreen_C::Plane' has a wrong offset!");
static_assert(offsetof(ACameraScreen_C, Camera_Ref) == 0x0002C0, "Member 'ACameraScreen_C::Camera_Ref' has a wrong offset!");
static_assert(offsetof(ACameraScreen_C, Camera_Handler) == 0x0002C8, "Member 'ACameraScreen_C::Camera_Handler' has a wrong offset!");
static_assert(offsetof(ACameraScreen_C, Delay) == 0x0002D0, "Member 'ACameraScreen_C::Delay' has a wrong offset!");
static_assert(offsetof(ACameraScreen_C, Timer_Ref) == 0x0002D8, "Member 'ACameraScreen_C::Timer_Ref' has a wrong offset!");
static_assert(offsetof(ACameraScreen_C, Screen_M) == 0x0002E0, "Member 'ACameraScreen_C::Screen_M' has a wrong offset!");
static_assert(offsetof(ACameraScreen_C, NewVar) == 0x0002E8, "Member 'ACameraScreen_C::NewVar' has a wrong offset!");

}

