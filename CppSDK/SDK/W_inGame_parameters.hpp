#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_inGame

#include "Basic.hpp"

#include "E_SessionState_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_inGame.W_inGame_C.Death Hidders
// 0x0001 (0x0001 - 0x0000)
struct W_inGame_C_Death_Hidders final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame_C_Death_Hidders) == 0x000001, "Wrong alignment on W_inGame_C_Death_Hidders");
static_assert(sizeof(W_inGame_C_Death_Hidders) == 0x000001, "Wrong size on W_inGame_C_Death_Hidders");
static_assert(offsetof(W_inGame_C_Death_Hidders, TRUE_0) == 0x000000, "Member 'W_inGame_C_Death_Hidders::TRUE_0' has a wrong offset!");

// Function W_inGame.W_inGame_C.ExecuteUbergraph_W_inGame
// 0x03B8 (0x03B8 - 0x0000)
struct W_inGame_C_ExecuteUbergraph_W_inGame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SessionState                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0028(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0040(0x0010)()
	class FText                                   Temp_text_Variable_4;                              // 0x0050(0x0010)()
	bool                                          Temp_bool_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_5;                              // 0x0068(0x0010)()
	class FText                                   Temp_text_Variable_6;                              // 0x0078(0x0010)()
	bool                                          Temp_bool_Variable_2;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_7;                              // 0x0090(0x0010)()
	class FText                                   Temp_text_Variable_8;                              // 0x00A0(0x0010)()
	bool                                          Temp_bool_Variable_3;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_9;                              // 0x00B8(0x0010)()
	class FText                                   Temp_text_Variable_10;                             // 0x00C8(0x0010)()
	bool                                          Temp_bool_Variable_5;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_11;                             // 0x00E0(0x0010)()
	class FText                                   Temp_text_Variable_12;                             // 0x00F0(0x0010)()
	bool                                          Temp_bool_Variable_6;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_2;                            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Delta__;                                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_True_3;                         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_True_2;                         // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x01A0(0x0010)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hacker;                         // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x01D8(0x0010)()
	class FText                                   K2Node_Select_Default_2;                           // 0x01E8(0x0010)()
	class FText                                   K2Node_Select_Default_3;                           // 0x01F8(0x0010)()
	class UTexture*                               K2Node_Select_Default_4;                           // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Employee_Wins;                  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Is_Employee;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_5;                           // 0x0218(0x0010)()
	class FText                                   K2Node_Select_Default_6;                           // 0x0228(0x0010)()
	class FText                                   K2Node_Select_Default_7;                           // 0x0238(0x0010)()
	class UTexture*                               K2Node_Select_Default_8;                           // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_6;              // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_True_1;                         // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Key;                            // 0x0290(0x0010)()
	ESlateVisibility                              K2Node_Select_Default_9;                           // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_True;                           // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_7;              // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMainGI_C*                              K2Node_DynamicCast_AsMain_GI;                      // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue_1;          // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x02F8(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame_C_ExecuteUbergraph_W_inGame) == 0x000008, "Wrong alignment on W_inGame_C_ExecuteUbergraph_W_inGame");
static_assert(sizeof(W_inGame_C_ExecuteUbergraph_W_inGame) == 0x0003B8, "Wrong size on W_inGame_C_ExecuteUbergraph_W_inGame");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, EntryPoint) == 0x000000, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_byte_Variable) == 0x000004, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable) == 0x000008, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_1) == 0x000018, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_2) == 0x000028, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_bool_Variable) == 0x000038, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_3) == 0x000040, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_4) == 0x000050, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_bool_Variable_1) == 0x000060, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_5) == 0x000068, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_6) == 0x000078, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_bool_Variable_2) == 0x000088, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_7) == 0x000090, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_8) == 0x0000A0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_bool_Variable_3) == 0x0000B0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_bool_Variable_4) == 0x0000B1, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_9) == 0x0000B8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_10) == 0x0000C8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_bool_Variable_5) == 0x0000D8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_11) == 0x0000E0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_text_Variable_12) == 0x0000F0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_bool_Variable_6) == 0x000100, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_object_Variable) == 0x000108, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_object_Variable_1) == 0x000110, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_bool_Variable_7) == 0x000118, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_object_Variable_2) == 0x000120, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_object_Variable_3) == 0x000128, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_bool_Variable_8) == 0x000130, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_byte_Variable_1) == 0x000131, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, Temp_byte_Variable_2) == 0x000132, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_Delta__) == 0x000138, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_Delta__' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_GetEffectMaterial_ReturnValue) == 0x000140, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_GetEffectMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x00014C, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000160, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_CustomEvent_True_3) == 0x000178, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_CustomEvent_True_3' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_CustomEvent_True_2) == 0x000179, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_CustomEvent_True_2' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_SelectFloat_ReturnValue) == 0x000180, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimation_ReturnValue) == 0x000188, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimation_ReturnValue_1) == 0x000190, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimation_ReturnValue_2) == 0x000198, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Select_Default) == 0x0001A0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimation_ReturnValue_3) == 0x0001B0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0001B8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0001C0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimationForward_ReturnValue) == 0x0001C8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_CustomEvent_Hacker) == 0x0001D0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_CustomEvent_Hacker' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Select_Default_1) == 0x0001D8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Select_Default_2) == 0x0001E8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Select_Default_3) == 0x0001F8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Select_Default_4) == 0x000208, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_CustomEvent_Employee_Wins) == 0x000210, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_CustomEvent_Employee_Wins' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_CustomEvent_Is_Employee) == 0x000211, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_CustomEvent_Is_Employee' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Select_Default_5) == 0x000218, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Select_Default_6) == 0x000228, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Select_Default_7) == 0x000238, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Select_Default_8) == 0x000248, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_MapRangeClamped_ReturnValue) == 0x000250, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_SelectFloat_ReturnValue_1) == 0x000258, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimation_ReturnValue_4) == 0x000260, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000268, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimation_ReturnValue_5) == 0x000270, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000278, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimation_ReturnValue_6) == 0x000280, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_CustomEvent_True_1) == 0x000288, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_CustomEvent_True_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_CustomEvent_Key) == 0x000290, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Select_Default_9) == 0x0002A0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_CustomEvent_True) == 0x0002A1, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_CustomEvent_True' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0002A8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0002B0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_PlayAnimation_ReturnValue_7) == 0x0002B8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_PlayAnimation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_GetGameInstance_ReturnValue) == 0x0002C0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_DynamicCast_AsMain_GI) == 0x0002C8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_DynamicCast_AsMain_GI' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_DynamicCast_bSuccess) == 0x0002D0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_GetEffectMaterial_ReturnValue_1) == 0x0002D8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_GetEffectMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_BreakVector_X) == 0x0002E0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_BreakVector_Y) == 0x0002E8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_BreakVector_Z) == 0x0002F0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Event_MyGeometry) == 0x0002F8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Event_InDeltaTime) == 0x000330, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000338, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000340, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_MakeVector_ReturnValue) == 0x000348, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_Event_IsDesignTime) == 0x000360, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_VInterpTo_ReturnValue) == 0x000368, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000380, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, K2Node_MakeStruct_LinearColor) == 0x000390, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x0003A0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0003A4, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0003A8, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_inGame_C_ExecuteUbergraph_W_inGame, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x0003B0, "Member 'W_inGame_C_ExecuteUbergraph_W_inGame::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function W_inGame.W_inGame_C.Game End
// 0x0002 (0x0002 - 0x0000)
struct W_inGame_C_Game_End_0 final
{
public:
	bool                                          Employee_Wins;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Employee;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame_C_Game_End_0) == 0x000001, "Wrong alignment on W_inGame_C_Game_End_0");
static_assert(sizeof(W_inGame_C_Game_End_0) == 0x000002, "Wrong size on W_inGame_C_Game_End_0");
static_assert(offsetof(W_inGame_C_Game_End_0, Employee_Wins) == 0x000000, "Member 'W_inGame_C_Game_End_0::Employee_Wins' has a wrong offset!");
static_assert(offsetof(W_inGame_C_Game_End_0, Is_Employee) == 0x000001, "Member 'W_inGame_C_Game_End_0::Is_Employee' has a wrong offset!");

// Function W_inGame.W_inGame_C.Game Start
// 0x0001 (0x0001 - 0x0000)
struct W_inGame_C_Game_Start_0 final
{
public:
	bool                                          Hacker;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame_C_Game_Start_0) == 0x000001, "Wrong alignment on W_inGame_C_Game_Start_0");
static_assert(sizeof(W_inGame_C_Game_Start_0) == 0x000001, "Wrong size on W_inGame_C_Game_Start_0");
static_assert(offsetof(W_inGame_C_Game_Start_0, Hacker) == 0x000000, "Member 'W_inGame_C_Game_Start_0::Hacker' has a wrong offset!");

// Function W_inGame.W_inGame_C.Hide HUD
// 0x0001 (0x0001 - 0x0000)
struct W_inGame_C_Hide_HUD final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame_C_Hide_HUD) == 0x000001, "Wrong alignment on W_inGame_C_Hide_HUD");
static_assert(sizeof(W_inGame_C_Hide_HUD) == 0x000001, "Wrong size on W_inGame_C_Hide_HUD");
static_assert(offsetof(W_inGame_C_Hide_HUD, TRUE_0) == 0x000000, "Member 'W_inGame_C_Hide_HUD::TRUE_0' has a wrong offset!");

// Function W_inGame.W_inGame_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_inGame_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame_C_PreConstruct) == 0x000001, "Wrong alignment on W_inGame_C_PreConstruct");
static_assert(sizeof(W_inGame_C_PreConstruct) == 0x000001, "Wrong size on W_inGame_C_PreConstruct");
static_assert(offsetof(W_inGame_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_inGame_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_inGame.W_inGame_C.Set Tablet Help Key
// 0x0010 (0x0010 - 0x0000)
struct W_inGame_C_Set_Tablet_Help_Key final
{
public:
	class FText                                   Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_inGame_C_Set_Tablet_Help_Key) == 0x000008, "Wrong alignment on W_inGame_C_Set_Tablet_Help_Key");
static_assert(sizeof(W_inGame_C_Set_Tablet_Help_Key) == 0x000010, "Wrong size on W_inGame_C_Set_Tablet_Help_Key");
static_assert(offsetof(W_inGame_C_Set_Tablet_Help_Key, Key) == 0x000000, "Member 'W_inGame_C_Set_Tablet_Help_Key::Key' has a wrong offset!");

// Function W_inGame.W_inGame_C.Show Tablet Help
// 0x0001 (0x0001 - 0x0000)
struct W_inGame_C_Show_Tablet_Help final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame_C_Show_Tablet_Help) == 0x000001, "Wrong alignment on W_inGame_C_Show_Tablet_Help");
static_assert(sizeof(W_inGame_C_Show_Tablet_Help) == 0x000001, "Wrong size on W_inGame_C_Show_Tablet_Help");
static_assert(offsetof(W_inGame_C_Show_Tablet_Help, TRUE_0) == 0x000000, "Member 'W_inGame_C_Show_Tablet_Help::TRUE_0' has a wrong offset!");

// Function W_inGame.W_inGame_C.Show Task Tab
// 0x0001 (0x0001 - 0x0000)
struct W_inGame_C_Show_Task_Tab final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame_C_Show_Task_Tab) == 0x000001, "Wrong alignment on W_inGame_C_Show_Task_Tab");
static_assert(sizeof(W_inGame_C_Show_Task_Tab) == 0x000001, "Wrong size on W_inGame_C_Show_Task_Tab");
static_assert(offsetof(W_inGame_C_Show_Task_Tab, TRUE_0) == 0x000000, "Member 'W_inGame_C_Show_Task_Tab::TRUE_0' has a wrong offset!");

// Function W_inGame.W_inGame_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_inGame_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame_C_Tick) == 0x000004, "Wrong alignment on W_inGame_C_Tick");
static_assert(sizeof(W_inGame_C_Tick) == 0x00003C, "Wrong size on W_inGame_C_Tick");
static_assert(offsetof(W_inGame_C_Tick, MyGeometry) == 0x000000, "Member 'W_inGame_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_inGame_C_Tick, InDeltaTime) == 0x000038, "Member 'W_inGame_C_Tick::InDeltaTime' has a wrong offset!");

}

