#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Vents

#include "Basic.hpp"

#include "Enum_Sectors_structs.hpp"
#include "E_Difficulty_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Task_Vents.Task_Vents_C.Check Filters State
// 0x0058 (0x0058 - 0x0000)
struct Task_Vents_C_Check_Filters_State final
{
public:
	bool                                          Finished;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _Count;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _All_Clean;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Difficulty                                  Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVent_C*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Vents_C_Check_Filters_State) == 0x000008, "Wrong alignment on Task_Vents_C_Check_Filters_State");
static_assert(sizeof(Task_Vents_C_Check_Filters_State) == 0x000058, "Wrong size on Task_Vents_C_Check_Filters_State");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, Finished) == 0x000000, "Member 'Task_Vents_C_Check_Filters_State::Finished' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, Count) == 0x000004, "Member 'Task_Vents_C_Check_Filters_State::Count' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, _Count) == 0x000008, "Member 'Task_Vents_C_Check_Filters_State::_Count' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, _All_Clean) == 0x00000C, "Member 'Task_Vents_C_Check_Filters_State::_All_Clean' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, Temp_byte_Variable) == 0x00000D, "Member 'Task_Vents_C_Check_Filters_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, Temp_int_Variable) == 0x000010, "Member 'Task_Vents_C_Check_Filters_State::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Task_Vents_C_Check_Filters_State::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Task_Vents_C_Check_Filters_State::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Task_Vents_C_Check_Filters_State::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, Temp_int_Variable_1) == 0x000020, "Member 'Task_Vents_C_Check_Filters_State::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, CallFunc_Array_Get_Item) == 0x000028, "Member 'Task_Vents_C_Check_Filters_State::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, K2Node_Select_Default) == 0x000030, "Member 'Task_Vents_C_Check_Filters_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'Task_Vents_C_Check_Filters_State::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'Task_Vents_C_Check_Filters_State::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Task_Vents_C_Check_Filters_State::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'Task_Vents_C_Check_Filters_State::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Check_Filters_State, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'Task_Vents_C_Check_Filters_State::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function Task_Vents.Task_Vents_C.ExecuteUbergraph_Task_Vents
// 0x00D8 (0x00D8 - 0x0000)
struct Task_Vents_C_ExecuteUbergraph_Task_Vents final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Difficulty                                  Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AVent_C*>                        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Filters_State_Finished;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Check_Filters_State_Count;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVent_C*                                CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFilterCleaner_C*>               CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFilterCleaner_C*                       CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AVent_C*                                CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Map_Position_Location;                // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Vents_C_ExecuteUbergraph_Task_Vents) == 0x000008, "Wrong alignment on Task_Vents_C_ExecuteUbergraph_Task_Vents");
static_assert(sizeof(Task_Vents_C_ExecuteUbergraph_Task_Vents) == 0x0000D8, "Wrong size on Task_Vents_C_ExecuteUbergraph_Task_Vents");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, EntryPoint) == 0x000000, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, Temp_int_Variable) == 0x000004, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, Temp_byte_Variable) == 0x000014, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, Temp_int_Array_Index_Variable_2) == 0x000024, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, K2Node_Event_Delay) == 0x000028, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Check_Filters_State_Finished) == 0x000050, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Check_Filters_State_Finished' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Check_Filters_State_Count) == 0x000054, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Check_Filters_State_Count' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, Temp_int_Loop_Counter_Variable_2) == 0x000058, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Array_Get_Item) == 0x000060, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000070, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Get_Map_Position_Location) == 0x0000A8, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Get_Map_Position_Location' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000C0, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Array_Length_ReturnValue_3) == 0x0000C8, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, K2Node_Select_Default) == 0x0000CC, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_ExecuteUbergraph_Task_Vents, CallFunc_Delay_Duration_ImplicitCast) == 0x0000D0, "Member 'Task_Vents_C_ExecuteUbergraph_Task_Vents::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function Task_Vents.Task_Vents_C.Select Vents
// 0x0080 (0x0080 - 0x0000)
struct Task_Vents_C_Select_Vents final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVent_C*>                        Temp_Vents_for_Task;                               // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<Enum_Sectors>                          TempSectors;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<class AVent_C*>                        Temp_Vents;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVent_C*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Sectors                                  CallFunc_Array_Get_Item_1;                         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVent_C*                                CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Vents_C_Select_Vents) == 0x000008, "Wrong alignment on Task_Vents_C_Select_Vents");
static_assert(sizeof(Task_Vents_C_Select_Vents) == 0x000080, "Wrong size on Task_Vents_C_Select_Vents");
static_assert(offsetof(Task_Vents_C_Select_Vents, Count) == 0x000000, "Member 'Task_Vents_C_Select_Vents::Count' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, Temp_Vents_for_Task) == 0x000008, "Member 'Task_Vents_C_Select_Vents::Temp_Vents_for_Task' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, TempSectors) == 0x000018, "Member 'Task_Vents_C_Select_Vents::TempSectors' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, Temp_Vents) == 0x000028, "Member 'Task_Vents_C_Select_Vents::Temp_Vents' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'Task_Vents_C_Select_Vents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'Task_Vents_C_Select_Vents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, Temp_int_Array_Index_Variable) == 0x000040, "Member 'Task_Vents_C_Select_Vents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'Task_Vents_C_Select_Vents::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Array_Get_Item) == 0x000048, "Member 'Task_Vents_C_Select_Vents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'Task_Vents_C_Select_Vents::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Array_Get_Item_1) == 0x000054, "Member 'Task_Vents_C_Select_Vents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Task_Vents_C_Select_Vents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'Task_Vents_C_Select_Vents::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'Task_Vents_C_Select_Vents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'Task_Vents_C_Select_Vents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'Task_Vents_C_Select_Vents::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Array_Add_ReturnValue_1) == 0x000070, "Member 'Task_Vents_C_Select_Vents::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'Task_Vents_C_Select_Vents::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000078, "Member 'Task_Vents_C_Select_Vents::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Vents_C_Select_Vents, CallFunc_Less_IntInt_ReturnValue_1) == 0x000079, "Member 'Task_Vents_C_Select_Vents::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Task_Vents.Task_Vents_C.Start Task
// 0x0008 (0x0008 - 0x0000)
struct Task_Vents_C_Start_Task final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Vents_C_Start_Task) == 0x000008, "Wrong alignment on Task_Vents_C_Start_Task");
static_assert(sizeof(Task_Vents_C_Start_Task) == 0x000008, "Wrong size on Task_Vents_C_Start_Task");
static_assert(offsetof(Task_Vents_C_Start_Task, Delay) == 0x000000, "Member 'Task_Vents_C_Start_Task::Delay' has a wrong offset!");

}

