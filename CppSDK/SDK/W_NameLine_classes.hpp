#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_NameLine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_NameLine.W_NameLine_C
// 0x0048 (0x0318 - 0x02D0)
class UW_NameLine_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                All_BG;                                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Name_Size;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NameText1;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NameText2;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Width;                                             // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Target_Opacity;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hovered;                                           // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Opacity;                                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_NameLine(int32 EntryPoint);
	void Initiate(const class FString& Name_0, const class FString& Detail, int32 Width_0);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_NameLine_C">();
	}
	static class UW_NameLine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_NameLine_C>();
	}
};
static_assert(alignof(UW_NameLine_C) == 0x000008, "Wrong alignment on UW_NameLine_C");
static_assert(sizeof(UW_NameLine_C) == 0x000318, "Wrong size on UW_NameLine_C");
static_assert(offsetof(UW_NameLine_C, UberGraphFrame) == 0x0002D0, "Member 'UW_NameLine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_NameLine_C, All_BG) == 0x0002D8, "Member 'UW_NameLine_C::All_BG' has a wrong offset!");
static_assert(offsetof(UW_NameLine_C, Name_Size) == 0x0002E0, "Member 'UW_NameLine_C::Name_Size' has a wrong offset!");
static_assert(offsetof(UW_NameLine_C, NameText1) == 0x0002E8, "Member 'UW_NameLine_C::NameText1' has a wrong offset!");
static_assert(offsetof(UW_NameLine_C, NameText2) == 0x0002F0, "Member 'UW_NameLine_C::NameText2' has a wrong offset!");
static_assert(offsetof(UW_NameLine_C, Width) == 0x0002F8, "Member 'UW_NameLine_C::Width' has a wrong offset!");
static_assert(offsetof(UW_NameLine_C, Target_Opacity) == 0x000300, "Member 'UW_NameLine_C::Target_Opacity' has a wrong offset!");
static_assert(offsetof(UW_NameLine_C, Hovered) == 0x000308, "Member 'UW_NameLine_C::Hovered' has a wrong offset!");
static_assert(offsetof(UW_NameLine_C, Opacity) == 0x000310, "Member 'UW_NameLine_C::Opacity' has a wrong offset!");

}

