#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ContainerCleaner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_GenericMachine_State_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ContainerCleaner.ContainerCleaner_C
// 0x00B0 (0x0358 - 0x02A8)
class AContainerCleaner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   CA_Button;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_ContainerCleaner_Lights;       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MapMesh_TaskMachine_ContainerCleaner;              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        MS_ContainerSlot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_SoundPath;                                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_ContainerSlot;                                   // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Link_Cube;                                         // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Pitch_3998E98E43EFC83354650BAFAB20A746;   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Volume_3998E98E43EFC83354650BAFAB20A746;  // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_3998E98E43EFC83354650BAFAB20A746; // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Container_Placed;                                  // 0x0310(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Process;                                           // 0x0314(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_GenericMachine_Jauge_C*              W_Screen;                                          // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer;                                             // 0x0320(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Charge_Speed;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         Last_Charge;                                       // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GenericMachine_State                        State;                                             // 0x0334(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_C*                              Button;                                            // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Alimented;                                         // 0x0340(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Max_Process;                                       // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AContainerSlot_C*                       Container_Slot;                                    // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASoundPath_C*                           SoundPath;                                         // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void All_Set_Process(int32 Process_0);
	void All_Set_State(E_GenericMachine_State State_0);
	void BndEvt__Centrifuge_Button_K2Node_ComponentBoundEvent_2_Button_Push__DelegateSignature(class AMec_C* Source);
	void BndEvt__ContainerCleaner_Container_Slot_K2Node_ComponentBoundEvent_3_Place_Container__DelegateSignature();
	void BndEvt__ContainerCleaner_Container_Slot_K2Node_ComponentBoundEvent_4_Take_Container__DelegateSignature();
	void Clear();
	void ExecuteUbergraph_ContainerCleaner(int32 EntryPoint);
	void Get_Key(class AActor** Key);
	void Get_Name(class AMec_C* Mec, class FString* Name_0);
	void Local_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Net_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Other_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Pause_Process();
	void Process_Tick();
	void ReceiveBeginPlay();
	void Set_Process(int32 Process_0);
	void Set_Process_Screen();
	void Set_State(E_GenericMachine_State Selection);
	void Start_Anim();
	void Start_Process();
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ContainerCleaner_C">();
	}
	static class AContainerCleaner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AContainerCleaner_C>();
	}
};
static_assert(alignof(AContainerCleaner_C) == 0x000008, "Wrong alignment on AContainerCleaner_C");
static_assert(sizeof(AContainerCleaner_C) == 0x000358, "Wrong size on AContainerCleaner_C");
static_assert(offsetof(AContainerCleaner_C, UberGraphFrame) == 0x0002A8, "Member 'AContainerCleaner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, CA_Button) == 0x0002B0, "Member 'AContainerCleaner_C::CA_Button' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, MapMesh_TaskMachine_ContainerCleaner_Lights) == 0x0002B8, "Member 'AContainerCleaner_C::MapMesh_TaskMachine_ContainerCleaner_Lights' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, MapMesh_TaskMachine_ContainerCleaner) == 0x0002C0, "Member 'AContainerCleaner_C::MapMesh_TaskMachine_ContainerCleaner' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, MS_ContainerSlot) == 0x0002C8, "Member 'AContainerCleaner_C::MS_ContainerSlot' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, C_SoundPath) == 0x0002D0, "Member 'AContainerCleaner_C::C_SoundPath' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, C_ContainerSlot) == 0x0002D8, "Member 'AContainerCleaner_C::C_ContainerSlot' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Link_Cube) == 0x0002E0, "Member 'AContainerCleaner_C::Link_Cube' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Widget) == 0x0002E8, "Member 'AContainerCleaner_C::Widget' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Root) == 0x0002F0, "Member 'AContainerCleaner_C::Root' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Timeline_Pitch_3998E98E43EFC83354650BAFAB20A746) == 0x0002F8, "Member 'AContainerCleaner_C::Timeline_Pitch_3998E98E43EFC83354650BAFAB20A746' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Timeline_Volume_3998E98E43EFC83354650BAFAB20A746) == 0x0002FC, "Member 'AContainerCleaner_C::Timeline_Volume_3998E98E43EFC83354650BAFAB20A746' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Timeline__Direction_3998E98E43EFC83354650BAFAB20A746) == 0x000300, "Member 'AContainerCleaner_C::Timeline__Direction_3998E98E43EFC83354650BAFAB20A746' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Timeline) == 0x000308, "Member 'AContainerCleaner_C::Timeline' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Container_Placed) == 0x000310, "Member 'AContainerCleaner_C::Container_Placed' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Process) == 0x000314, "Member 'AContainerCleaner_C::Process' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, W_Screen) == 0x000318, "Member 'AContainerCleaner_C::W_Screen' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Timer) == 0x000320, "Member 'AContainerCleaner_C::Timer' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Charge_Speed) == 0x000328, "Member 'AContainerCleaner_C::Charge_Speed' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Last_Charge) == 0x000330, "Member 'AContainerCleaner_C::Last_Charge' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, State) == 0x000334, "Member 'AContainerCleaner_C::State' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Button) == 0x000338, "Member 'AContainerCleaner_C::Button' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Alimented) == 0x000340, "Member 'AContainerCleaner_C::Alimented' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Max_Process) == 0x000344, "Member 'AContainerCleaner_C::Max_Process' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, Container_Slot) == 0x000348, "Member 'AContainerCleaner_C::Container_Slot' has a wrong offset!");
static_assert(offsetof(AContainerCleaner_C, SoundPath) == 0x000350, "Member 'AContainerCleaner_C::SoundPath' has a wrong offset!");

}

