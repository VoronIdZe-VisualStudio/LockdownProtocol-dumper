#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FunctionLibrary.FunctionLibrary_C.Delta
// 0x0018 (0x0018 - 0x0000)
struct FunctionLibrary_C_Delta final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        _;                                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_Delta) == 0x000008, "Wrong alignment on FunctionLibrary_C_Delta");
static_assert(sizeof(FunctionLibrary_C_Delta) == 0x000018, "Wrong size on FunctionLibrary_C_Delta");
static_assert(offsetof(FunctionLibrary_C_Delta, __WorldContext) == 0x000000, "Member 'FunctionLibrary_C_Delta::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Delta, _) == 0x000008, "Member 'FunctionLibrary_C_Delta::_' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Delta, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'FunctionLibrary_C_Delta::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");

// Function FunctionLibrary.FunctionLibrary_C.Delta(clamp)
// 0x0030 (0x0030 - 0x0000)
struct FunctionLibrary_C_Delta_clamp_ final
{
public:
	double                                        clamp;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        _;                                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_Delta_clamp_) == 0x000008, "Wrong alignment on FunctionLibrary_C_Delta_clamp_");
static_assert(sizeof(FunctionLibrary_C_Delta_clamp_) == 0x000030, "Wrong size on FunctionLibrary_C_Delta_clamp_");
static_assert(offsetof(FunctionLibrary_C_Delta_clamp_, clamp) == 0x000000, "Member 'FunctionLibrary_C_Delta_clamp_::clamp' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Delta_clamp_, __WorldContext) == 0x000008, "Member 'FunctionLibrary_C_Delta_clamp_::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Delta_clamp_, _) == 0x000010, "Member 'FunctionLibrary_C_Delta_clamp_::_' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Delta_clamp_, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'FunctionLibrary_C_Delta_clamp_::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Delta_clamp_, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'FunctionLibrary_C_Delta_clamp_::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Delta_clamp_, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'FunctionLibrary_C_Delta_clamp_::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function FunctionLibrary.FunctionLibrary_C.DeltaValue
// 0x0028 (0x0028 - 0x0000)
struct FunctionLibrary_C_DeltaValue final
{
public:
	double                                        _;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        __;                                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_DeltaValue) == 0x000008, "Wrong alignment on FunctionLibrary_C_DeltaValue");
static_assert(sizeof(FunctionLibrary_C_DeltaValue) == 0x000028, "Wrong size on FunctionLibrary_C_DeltaValue");
static_assert(offsetof(FunctionLibrary_C_DeltaValue, _) == 0x000000, "Member 'FunctionLibrary_C_DeltaValue::_' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_DeltaValue, __WorldContext) == 0x000008, "Member 'FunctionLibrary_C_DeltaValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_DeltaValue, __) == 0x000010, "Member 'FunctionLibrary_C_DeltaValue::__' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_DeltaValue, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000018, "Member 'FunctionLibrary_C_DeltaValue::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_DeltaValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'FunctionLibrary_C_DeltaValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function FunctionLibrary.FunctionLibrary_C.Is Even
// 0x0020 (0x0020 - 0x0000)
struct FunctionLibrary_C_Is_Even final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Even;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_Is_Even) == 0x000008, "Wrong alignment on FunctionLibrary_C_Is_Even");
static_assert(sizeof(FunctionLibrary_C_Is_Even) == 0x000020, "Wrong size on FunctionLibrary_C_Is_Even");
static_assert(offsetof(FunctionLibrary_C_Is_Even, Value) == 0x000000, "Member 'FunctionLibrary_C_Is_Even::Value' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Is_Even, __WorldContext) == 0x000008, "Member 'FunctionLibrary_C_Is_Even::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Is_Even, Even) == 0x000010, "Member 'FunctionLibrary_C_Is_Even::Even' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Is_Even, CallFunc_Percent_IntInt_ReturnValue) == 0x000014, "Member 'FunctionLibrary_C_Is_Even::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Is_Even, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'FunctionLibrary_C_Is_Even::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function FunctionLibrary.FunctionLibrary_C.Map Range
// 0x0058 (0x0058 - 0x0000)
struct FunctionLibrary_C_Map_Range final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_A;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_B;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out_A;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out_B;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        exp;                                               // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        __;                                                // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_Map_Range) == 0x000008, "Wrong alignment on FunctionLibrary_C_Map_Range");
static_assert(sizeof(FunctionLibrary_C_Map_Range) == 0x000058, "Wrong size on FunctionLibrary_C_Map_Range");
static_assert(offsetof(FunctionLibrary_C_Map_Range, Value) == 0x000000, "Member 'FunctionLibrary_C_Map_Range::Value' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range, In_A) == 0x000008, "Member 'FunctionLibrary_C_Map_Range::In_A' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range, In_B) == 0x000010, "Member 'FunctionLibrary_C_Map_Range::In_B' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range, Out_A) == 0x000018, "Member 'FunctionLibrary_C_Map_Range::Out_A' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range, Out_B) == 0x000020, "Member 'FunctionLibrary_C_Map_Range::Out_B' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range, exp) == 0x000028, "Member 'FunctionLibrary_C_Map_Range::exp' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range, __WorldContext) == 0x000030, "Member 'FunctionLibrary_C_Map_Range::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range, __) == 0x000038, "Member 'FunctionLibrary_C_Map_Range::__' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'FunctionLibrary_C_Map_Range::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'FunctionLibrary_C_Map_Range::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range, CallFunc_Lerp_ReturnValue) == 0x000050, "Member 'FunctionLibrary_C_Map_Range::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function FunctionLibrary.FunctionLibrary_C.Map Range (Vector)
// 0x00C8 (0x00C8 - 0x0000)
struct FunctionLibrary_C_Map_Range__Vector_ final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_A;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_B;                                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out_A;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out_B;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        exp;                                               // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _;                                                 // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_Map_Range__Vector_) == 0x000008, "Wrong alignment on FunctionLibrary_C_Map_Range__Vector_");
static_assert(sizeof(FunctionLibrary_C_Map_Range__Vector_) == 0x0000C8, "Wrong size on FunctionLibrary_C_Map_Range__Vector_");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, Vector) == 0x000000, "Member 'FunctionLibrary_C_Map_Range__Vector_::Vector' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, In_A) == 0x000018, "Member 'FunctionLibrary_C_Map_Range__Vector_::In_A' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, In_B) == 0x000020, "Member 'FunctionLibrary_C_Map_Range__Vector_::In_B' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, Out_A) == 0x000028, "Member 'FunctionLibrary_C_Map_Range__Vector_::Out_A' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, Out_B) == 0x000030, "Member 'FunctionLibrary_C_Map_Range__Vector_::Out_B' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, exp) == 0x000038, "Member 'FunctionLibrary_C_Map_Range__Vector_::exp' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, __WorldContext) == 0x000040, "Member 'FunctionLibrary_C_Map_Range__Vector_::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, _) == 0x000048, "Member 'FunctionLibrary_C_Map_Range__Vector_::_' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, CallFunc_Normal_ReturnValue) == 0x000060, "Member 'FunctionLibrary_C_Map_Range__Vector_::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, CallFunc_VSize_ReturnValue) == 0x000078, "Member 'FunctionLibrary_C_Map_Range__Vector_::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, CallFunc_MapRangeClamped_ReturnValue) == 0x000080, "Member 'FunctionLibrary_C_Map_Range__Vector_::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000088, "Member 'FunctionLibrary_C_Map_Range__Vector_::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, CallFunc_Lerp_ReturnValue) == 0x000090, "Member 'FunctionLibrary_C_Map_Range__Vector_::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000098, "Member 'FunctionLibrary_C_Map_Range__Vector_::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Map_Range__Vector_, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B0, "Member 'FunctionLibrary_C_Map_Range__Vector_::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function FunctionLibrary.FunctionLibrary_C.OneMinus
// 0x0028 (0x0028 - 0x0000)
struct FunctionLibrary_C_OneMinus final
{
public:
	double                                        _;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        __;                                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_OneMinus) == 0x000008, "Wrong alignment on FunctionLibrary_C_OneMinus");
static_assert(sizeof(FunctionLibrary_C_OneMinus) == 0x000028, "Wrong size on FunctionLibrary_C_OneMinus");
static_assert(offsetof(FunctionLibrary_C_OneMinus, _) == 0x000000, "Member 'FunctionLibrary_C_OneMinus::_' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_OneMinus, __WorldContext) == 0x000008, "Member 'FunctionLibrary_C_OneMinus::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_OneMinus, __) == 0x000010, "Member 'FunctionLibrary_C_OneMinus::__' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_OneMinus, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'FunctionLibrary_C_OneMinus::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_OneMinus, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'FunctionLibrary_C_OneMinus::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function FunctionLibrary.FunctionLibrary_C.Power(sign)
// 0x0040 (0x0040 - 0x0000)
struct FunctionLibrary_C_Power_sign_ final
{
public:
	double                                        base;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        exp;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Returne_Value;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_Power_sign_) == 0x000008, "Wrong alignment on FunctionLibrary_C_Power_sign_");
static_assert(sizeof(FunctionLibrary_C_Power_sign_) == 0x000040, "Wrong size on FunctionLibrary_C_Power_sign_");
static_assert(offsetof(FunctionLibrary_C_Power_sign_, base) == 0x000000, "Member 'FunctionLibrary_C_Power_sign_::base' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Power_sign_, exp) == 0x000008, "Member 'FunctionLibrary_C_Power_sign_::exp' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Power_sign_, __WorldContext) == 0x000010, "Member 'FunctionLibrary_C_Power_sign_::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Power_sign_, Returne_Value) == 0x000018, "Member 'FunctionLibrary_C_Power_sign_::Returne_Value' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Power_sign_, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'FunctionLibrary_C_Power_sign_::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Power_sign_, CallFunc_SignOfFloat_ReturnValue) == 0x000028, "Member 'FunctionLibrary_C_Power_sign_::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Power_sign_, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'FunctionLibrary_C_Power_sign_::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Power_sign_, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'FunctionLibrary_C_Power_sign_::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function FunctionLibrary.FunctionLibrary_C.Saturate
// 0x0020 (0x0020 - 0x0000)
struct FunctionLibrary_C_Saturate final
{
public:
	double                                        _;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        __;                                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_Saturate) == 0x000008, "Wrong alignment on FunctionLibrary_C_Saturate");
static_assert(sizeof(FunctionLibrary_C_Saturate) == 0x000020, "Wrong size on FunctionLibrary_C_Saturate");
static_assert(offsetof(FunctionLibrary_C_Saturate, _) == 0x000000, "Member 'FunctionLibrary_C_Saturate::_' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Saturate, __WorldContext) == 0x000008, "Member 'FunctionLibrary_C_Saturate::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Saturate, __) == 0x000010, "Member 'FunctionLibrary_C_Saturate::__' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Saturate, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'FunctionLibrary_C_Saturate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function FunctionLibrary.FunctionLibrary_C.StickHandler
// 0x00C8 (0x00C8 - 0x0000)
struct FunctionLibrary_C_StickHandler final
{
public:
	struct FVector2D                              In;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Power;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Deadzones;                                         // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Out_X;                                             // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out_Y;                                             // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Amplitude;                                         // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inner;                                             // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Outter;                                            // 0x0049(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Range___;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_StickHandler) == 0x000008, "Wrong alignment on FunctionLibrary_C_StickHandler");
static_assert(sizeof(FunctionLibrary_C_StickHandler) == 0x0000C8, "Wrong size on FunctionLibrary_C_StickHandler");
static_assert(offsetof(FunctionLibrary_C_StickHandler, In) == 0x000000, "Member 'FunctionLibrary_C_StickHandler::In' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, Power) == 0x000010, "Member 'FunctionLibrary_C_StickHandler::Power' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, Deadzones) == 0x000018, "Member 'FunctionLibrary_C_StickHandler::Deadzones' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, __WorldContext) == 0x000028, "Member 'FunctionLibrary_C_StickHandler::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, Out_X) == 0x000030, "Member 'FunctionLibrary_C_StickHandler::Out_X' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, Out_Y) == 0x000038, "Member 'FunctionLibrary_C_StickHandler::Out_Y' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, Amplitude) == 0x000040, "Member 'FunctionLibrary_C_StickHandler::Amplitude' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, Inner) == 0x000048, "Member 'FunctionLibrary_C_StickHandler::Inner' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, Outter) == 0x000049, "Member 'FunctionLibrary_C_StickHandler::Outter' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_Normal2D_ReturnValue) == 0x000050, "Member 'FunctionLibrary_C_StickHandler::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_BreakVector2D_X) == 0x000060, "Member 'FunctionLibrary_C_StickHandler::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'FunctionLibrary_C_StickHandler::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_VSize2D_ReturnValue) == 0x000070, "Member 'FunctionLibrary_C_StickHandler::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'FunctionLibrary_C_StickHandler::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_Map_Range___) == 0x000080, "Member 'FunctionLibrary_C_StickHandler::CallFunc_Map_Range___' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_MakeVector2D_ReturnValue) == 0x000088, "Member 'FunctionLibrary_C_StickHandler::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000098, "Member 'FunctionLibrary_C_StickHandler::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000A0, "Member 'FunctionLibrary_C_StickHandler::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'FunctionLibrary_C_StickHandler::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_BreakVector2D_X_1) == 0x0000B8, "Member 'FunctionLibrary_C_StickHandler::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_StickHandler, CallFunc_BreakVector2D_Y_1) == 0x0000C0, "Member 'FunctionLibrary_C_StickHandler::CallFunc_BreakVector2D_Y_1' has a wrong offset!");

// Function FunctionLibrary.FunctionLibrary_C.Text Round
// 0x00C8 (0x00C8 - 0x0000)
struct FunctionLibrary_C_Text_Round final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Fraction;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Dot;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 _;                                                 // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Final_String;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         String_Array;                                      // 0x0038(0x0010)(Edit, BlueprintVisible)
	class FString                                 Temp_string_Variable;                              // 0x0048(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0058(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0078(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FunctionLibrary_C_Text_Round) == 0x000008, "Wrong alignment on FunctionLibrary_C_Text_Round");
static_assert(sizeof(FunctionLibrary_C_Text_Round) == 0x0000C8, "Wrong size on FunctionLibrary_C_Text_Round");
static_assert(offsetof(FunctionLibrary_C_Text_Round, Value) == 0x000000, "Member 'FunctionLibrary_C_Text_Round::Value' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, Fraction) == 0x000008, "Member 'FunctionLibrary_C_Text_Round::Fraction' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, Use_Dot) == 0x00000C, "Member 'FunctionLibrary_C_Text_Round::Use_Dot' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, __WorldContext) == 0x000010, "Member 'FunctionLibrary_C_Text_Round::__WorldContext' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, _) == 0x000018, "Member 'FunctionLibrary_C_Text_Round::_' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, Final_String) == 0x000028, "Member 'FunctionLibrary_C_Text_Round::Final_String' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, String_Array) == 0x000038, "Member 'FunctionLibrary_C_Text_Round::String_Array' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, Temp_string_Variable) == 0x000048, "Member 'FunctionLibrary_C_Text_Round::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000058, "Member 'FunctionLibrary_C_Text_Round::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'FunctionLibrary_C_Text_Round::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000078, "Member 'FunctionLibrary_C_Text_Round::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, Temp_int_Array_Index_Variable) == 0x000088, "Member 'FunctionLibrary_C_Text_Round::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'FunctionLibrary_C_Text_Round::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_Array_Get_Item) == 0x000090, "Member 'FunctionLibrary_C_Text_Round::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_Contains_ReturnValue) == 0x0000A0, "Member 'FunctionLibrary_C_Text_Round::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'FunctionLibrary_C_Text_Round::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'FunctionLibrary_C_Text_Round::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'FunctionLibrary_C_Text_Round::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'FunctionLibrary_C_Text_Round::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_Array_Add_ReturnValue_1) == 0x0000B4, "Member 'FunctionLibrary_C_Text_Round::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FunctionLibrary_C_Text_Round, CallFunc_JoinStringArray_ReturnValue) == 0x0000B8, "Member 'FunctionLibrary_C_Text_Round::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");

}

