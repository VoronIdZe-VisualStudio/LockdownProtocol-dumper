#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Data_MeleeType

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Data_MeleeType.Data_MeleeType_C
// 0x0040 (0x0070 - 0x0030)
class UData_MeleeType_C final : public UPrimaryDataAsset
{
public:
	int32                                         Heal;                                              // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Stamina;                                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stun;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Crit_Heal;                                         // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Crit_Stamina;                                      // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Crit_Stun;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cost;                                              // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Cast_Time;                                         // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Recover_Time;                                      // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Range;                                             // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Data_MeleeType_C">();
	}
	static class UData_MeleeType_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UData_MeleeType_C>();
	}
};
static_assert(alignof(UData_MeleeType_C) == 0x000008, "Wrong alignment on UData_MeleeType_C");
static_assert(sizeof(UData_MeleeType_C) == 0x000070, "Wrong size on UData_MeleeType_C");
static_assert(offsetof(UData_MeleeType_C, Heal) == 0x000030, "Member 'UData_MeleeType_C::Heal' has a wrong offset!");
static_assert(offsetof(UData_MeleeType_C, Stamina) == 0x000034, "Member 'UData_MeleeType_C::Stamina' has a wrong offset!");
static_assert(offsetof(UData_MeleeType_C, Stun) == 0x000038, "Member 'UData_MeleeType_C::Stun' has a wrong offset!");
static_assert(offsetof(UData_MeleeType_C, Crit_Heal) == 0x000040, "Member 'UData_MeleeType_C::Crit_Heal' has a wrong offset!");
static_assert(offsetof(UData_MeleeType_C, Crit_Stamina) == 0x000044, "Member 'UData_MeleeType_C::Crit_Stamina' has a wrong offset!");
static_assert(offsetof(UData_MeleeType_C, Crit_Stun) == 0x000048, "Member 'UData_MeleeType_C::Crit_Stun' has a wrong offset!");
static_assert(offsetof(UData_MeleeType_C, Cost) == 0x000050, "Member 'UData_MeleeType_C::Cost' has a wrong offset!");
static_assert(offsetof(UData_MeleeType_C, Cast_Time) == 0x000058, "Member 'UData_MeleeType_C::Cast_Time' has a wrong offset!");
static_assert(offsetof(UData_MeleeType_C, Recover_Time) == 0x000060, "Member 'UData_MeleeType_C::Recover_Time' has a wrong offset!");
static_assert(offsetof(UData_MeleeType_C, Range) == 0x000068, "Member 'UData_MeleeType_C::Range' has a wrong offset!");

}

