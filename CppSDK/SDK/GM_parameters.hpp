#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GM

#include "Basic.hpp"

#include "E_PlayerRole_structs.hpp"
#include "Enum_SelectedColor_structs.hpp"
#include "Str_ColorLink_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_Difficulty_structs.hpp"
#include "Engine_structs.hpp"
#include "SteamCorePro_structs.hpp"


namespace SDK::Params
{

// Function GM.GM_C.Ban Player
// 0x0008 (0x0008 - 0x0000)
struct GM_C_Ban_Player final
{
public:
	class AMec_C*                                 Mec;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Ban_Player) == 0x000008, "Wrong alignment on GM_C_Ban_Player");
static_assert(sizeof(GM_C_Ban_Player) == 0x000008, "Wrong size on GM_C_Ban_Player");
static_assert(offsetof(GM_C_Ban_Player, Mec) == 0x000000, "Member 'GM_C_Ban_Player::Mec' has a wrong offset!");

// Function GM.GM_C.Check Deaths
// 0x0030 (0x0030 - 0x0000)
struct GM_C_Check_Deaths final
{
public:
	bool                                          All_Dead;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          All_Innocents_Dead;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Check_Deaths) == 0x000008, "Wrong alignment on GM_C_Check_Deaths");
static_assert(sizeof(GM_C_Check_Deaths) == 0x000030, "Wrong size on GM_C_Check_Deaths");
static_assert(offsetof(GM_C_Check_Deaths, All_Dead) == 0x000000, "Member 'GM_C_Check_Deaths::All_Dead' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Deaths, All_Innocents_Dead) == 0x000001, "Member 'GM_C_Check_Deaths::All_Innocents_Dead' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Deaths, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GM_C_Check_Deaths::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Deaths, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GM_C_Check_Deaths::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Deaths, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'GM_C_Check_Deaths::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Deaths, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'GM_C_Check_Deaths::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Deaths, CallFunc_Array_Get_Item) == 0x000018, "Member 'GM_C_Check_Deaths::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Deaths, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'GM_C_Check_Deaths::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Deaths, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'GM_C_Check_Deaths::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Deaths, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'GM_C_Check_Deaths::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Deaths, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'GM_C_Check_Deaths::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GM.GM_C.Check Player List
// 0x0038 (0x0038 - 0x0000)
struct GM_C_Check_Player_List final
{
public:
	class AMec_C*                                 New_Mec;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_Place;                                       // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Check_Player_List) == 0x000008, "Wrong alignment on GM_C_Check_Player_List");
static_assert(sizeof(GM_C_Check_Player_List) == 0x000038, "Wrong size on GM_C_Check_Player_List");
static_assert(offsetof(GM_C_Check_Player_List, New_Mec) == 0x000000, "Member 'GM_C_Check_Player_List::New_Mec' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Player_List, Index_0) == 0x000008, "Member 'GM_C_Check_Player_List::Index_0' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Player_List, Found_Place) == 0x00000C, "Member 'GM_C_Check_Player_List::Found_Place' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Player_List, Temp_int_Array_Index_Variable) == 0x000010, "Member 'GM_C_Check_Player_List::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Player_List, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'GM_C_Check_Player_List::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Player_List, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'GM_C_Check_Player_List::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Player_List, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'GM_C_Check_Player_List::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Player_List, CallFunc_Array_Get_Item) == 0x000020, "Member 'GM_C_Check_Player_List::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Player_List, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GM_C_Check_Player_List::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Player_List, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'GM_C_Check_Player_List::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Player_List, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'GM_C_Check_Player_List::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GM.GM_C.Check Players Ready
// 0x0038 (0x0038 - 0x0000)
struct GM_C_Check_Players_Ready final
{
public:
	bool                                          Ready;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _Ready;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMec_C*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Check_Players_Ready) == 0x000008, "Wrong alignment on GM_C_Check_Players_Ready");
static_assert(sizeof(GM_C_Check_Players_Ready) == 0x000038, "Wrong size on GM_C_Check_Players_Ready");
static_assert(offsetof(GM_C_Check_Players_Ready, Ready) == 0x000000, "Member 'GM_C_Check_Players_Ready::Ready' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Players_Ready, _Ready) == 0x000001, "Member 'GM_C_Check_Players_Ready::_Ready' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Players_Ready, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GM_C_Check_Players_Ready::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Players_Ready, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GM_C_Check_Players_Ready::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Players_Ready, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GM_C_Check_Players_Ready::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Players_Ready, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'GM_C_Check_Players_Ready::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Players_Ready, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'GM_C_Check_Players_Ready::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Players_Ready, CallFunc_Array_Get_Item) == 0x000028, "Member 'GM_C_Check_Players_Ready::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Players_Ready, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'GM_C_Check_Players_Ready::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Players_Ready, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'GM_C_Check_Players_Ready::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Check_Players_Ready, K2Node_SwitchEnum_CmpSuccess) == 0x000032, "Member 'GM_C_Check_Players_Ready::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GM.GM_C.End Game
// 0x0002 (0x0002 - 0x0000)
struct GM_C_End_Game final
{
public:
	bool                                          Innocent_Win;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_End_Game) == 0x000001, "Wrong alignment on GM_C_End_Game");
static_assert(sizeof(GM_C_End_Game) == 0x000002, "Wrong size on GM_C_End_Game");
static_assert(offsetof(GM_C_End_Game, Innocent_Win) == 0x000000, "Member 'GM_C_End_Game::Innocent_Win' has a wrong offset!");
static_assert(offsetof(GM_C_End_Game, Force) == 0x000001, "Member 'GM_C_End_Game::Force' has a wrong offset!");

// Function GM.GM_C.ExecuteUbergraph_GM
// 0x06D8 (0x06D8 - 0x0000)
struct GM_C_ExecuteUbergraph_GM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerRole                                  Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerRole                                  Temp_byte_Variable_1;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerRole                                  Temp_byte_Variable_2;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerRole                                  Temp_byte_Variable_3;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerRole                                  Temp_byte_Variable_4;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerRole                                  Temp_byte_Variable_5;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_12;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_12;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerRole                                  Temp_byte_Variable_6;                              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Difficulty                                  Temp_byte_Variable_7;                              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_13;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_14;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_13;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_15;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_CustomEvent_Mec_2;                          // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Check_Player_List_Index;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Players_Ready_Ready;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_NewPlayer;                            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_ExitingController;                    // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_C*                                  K2Node_DynamicCast_AsPC;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_C*                                  K2Node_DynamicCast_AsPC_1;                         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_GetSteamIdFromPlayerState_ReturnValue;    // 0x0178(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Time;                           // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATaskManager_C*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_14;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Innocent_Win;                   // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Force;                          // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Finished_Tasks_End;                 // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Clear;                          // 0x01BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerSpawn_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x01C0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_15;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerSpawn_C*                         CallFunc_Array_Get_Item;                           // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0200(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 K2Node_CustomEvent_Mec_1;                          // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_PlayerRole                                  K2Node_Select_Default;                             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Deaths_All_Dead;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Difficulty                                  Temp_byte_Variable_8;                              // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players;                // 0x02D8(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_1;                         // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_1;              // 0x02F8(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_2;                         // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_2;              // 0x0318(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_3;                         // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_3;              // 0x0338(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_4;                         // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_4;              // 0x0358(0x0010)(ReferenceParm)
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_5;              // 0x0368(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_5;                         // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 CallFunc_Array_Get_Item_6;                         // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_6;              // 0x0398(0x0010)(ReferenceParm)
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_7;              // 0x03A8(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_7;                         // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 CallFunc_Array_Get_Item_8;                         // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2[0x6];                                      // 0x03D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_8;              // 0x03D8(0x0010)(ReferenceParm)
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_9;              // 0x03E8(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_9;                         // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 CallFunc_Array_Get_Item_10;                        // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412[0x6];                                      // 0x0412(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_10;             // 0x0418(0x0010)(ReferenceParm)
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_11;             // 0x0428(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_11;                        // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 CallFunc_Array_Get_Item_12;                        // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_452[0x6];                                      // 0x0452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Armed_C4_Ref;                   // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_12;             // 0x0468(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_13;                        // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APC_C*>                          CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0488(0x0010)(ReferenceParm)
	TArray<class APlayerController*>              CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0498(0x0010)(ReferenceParm)
	class APC_C*                                  CallFunc_Array_Get_Item_14;                        // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x04C0(0x0010)()
	bool                                          CallFunc_KickPlayer_ReturnValue;                   // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMainGI_C*                              K2Node_DynamicCast_AsMain_GI;                      // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_CustomEvent_Mec;                            // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_GetSteamIdFromPlayerState_ReturnValue_1;  // 0x0508(0x0008)(NoDestructor)
	class FString                                 CallFunc_BreakSteamID_ReturnValue_1;               // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0520(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0530(0x0010)()
	bool                                          CallFunc_KickPlayer_ReturnValue_1;                 // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KickPlayer_ReturnValue_2;                 // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_542[0x6];                                      // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_13;             // 0x0548(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_15;                        // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_565[0x3];                                      // 0x0565(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_14;             // 0x0568(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_16;                        // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Start;                          // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_15;             // 0x0588(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_17;                        // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_16;             // 0x05A0(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item_18;                        // 0x05B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APC_C*                                  K2Node_DynamicCast_AsPC_2;                         // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CA[0x6];                                      // 0x05CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA[0x6];                                      // 0x05DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x05E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x05F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue_1;             // 0x0609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60A[0x2];                                      // 0x060A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_17;             // 0x0610(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_625[0x3];                                      // 0x0625(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x062C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62D[0x3];                                      // 0x062D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWorldItem_C*                           K2Node_DynamicCast_AsWorld_Item;                   // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 K2Node_DynamicCast_AsMec;                          // 0x0648(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_18;             // 0x0658(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_672[0x2];                                      // 0x0672(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x067C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67D[0x3];                                      // 0x067D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_19;             // 0x0680(0x0010)(ReferenceParm)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69A[0x2];                                      // 0x069A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_4;                  // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue_2;             // 0x06A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A6[0x2];                                      // 0x06A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_5;                  // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AC[0x4];                                      // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_BanList_C*                        CallFunc_CreateSaveGameObject_ReturnValue;         // 0x06B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x06C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USave_BanList_C*                        K2Node_DynamicCast_AsSave_Ban_List;                // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D1[0x3];                                      // 0x06D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_All_TP_Orientation_ImplicitCast;          // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_ExecuteUbergraph_GM) == 0x000008, "Wrong alignment on GM_C_ExecuteUbergraph_GM");
static_assert(sizeof(GM_C_ExecuteUbergraph_GM) == 0x0006D8, "Wrong size on GM_C_ExecuteUbergraph_GM");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, EntryPoint) == 0x000000, "Member 'GM_C_ExecuteUbergraph_GM::EntryPoint' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_1) == 0x000008, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_2) == 0x000014, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_3) == 0x000020, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_byte_Variable) == 0x00002C, "Member 'GM_C_ExecuteUbergraph_GM::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_3) == 0x000030, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_4) == 0x000034, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_3) == 0x000038, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_4) == 0x00003C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_4) == 0x000040, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_byte_Variable_1) == 0x000044, "Member 'GM_C_ExecuteUbergraph_GM::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_5) == 0x000048, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_5) == 0x00004C, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_5) == 0x000050, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_6) == 0x000054, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_byte_Variable_2) == 0x000058, "Member 'GM_C_ExecuteUbergraph_GM::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_6) == 0x00005C, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_7) == 0x000060, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_6) == 0x000064, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_7) == 0x000068, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_7) == 0x00006C, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_byte_Variable_3) == 0x000070, "Member 'GM_C_ExecuteUbergraph_GM::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_8) == 0x000074, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_8) == 0x000078, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_8) == 0x00007C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_9) == 0x000080, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_9) == 0x000084, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_9) == 0x000088, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_byte_Variable_4) == 0x00008C, "Member 'GM_C_ExecuteUbergraph_GM::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_10) == 0x000090, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_10) == 0x000094, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_10) == 0x000098, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_11) == 0x00009C, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_11) == 0x0000A0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_11) == 0x0000A4, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Variable) == 0x0000A8, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_byte_Variable_5) == 0x0000AC, "Member 'GM_C_ExecuteUbergraph_GM::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_12) == 0x0000B0, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_12' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_12) == 0x0000B4, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_12) == 0x0000B8, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_12' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_byte_Variable_6) == 0x0000BC, "Member 'GM_C_ExecuteUbergraph_GM::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_byte_Variable_7) == 0x0000BD, "Member 'GM_C_ExecuteUbergraph_GM::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_13) == 0x0000C0, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_13' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CreateDelegate_OutputDelegate) == 0x0000C4, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000D8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_14) == 0x0000E0, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_14' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_13) == 0x0000E4, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_13' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_13) == 0x0000E8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Array_Index_Variable_15) == 0x0000EC, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Array_Index_Variable_15' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F4, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CustomEvent_Mec_2) == 0x0000F8, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CustomEvent_Mec_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Check_Player_List_Index) == 0x000104, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Check_Player_List_Index' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_14) == 0x000108, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Check_Players_Ready_Ready) == 0x00010C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Check_Players_Ready_Ready' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_Event_NewPlayer) == 0x000110, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_Event_NewPlayer' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_Event_ExitingController) == 0x000118, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_Event_ExitingController' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_K2_GetPawn_ReturnValue) == 0x000120, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetPlayerName_ReturnValue) == 0x000128, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_AsPC) == 0x000140, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_AsPC' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetPlayerName_ReturnValue_1) == 0x000150, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_IsValid_ReturnValue_2) == 0x000160, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_AsPC_1) == 0x000168, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_AsPC_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetSteamIdFromPlayerState_ReturnValue) == 0x000178, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetSteamIdFromPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_IsValid_ReturnValue_3) == 0x000180, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_BreakSteamID_ReturnValue) == 0x000188, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Contains_ReturnValue) == 0x000198, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Subtract_IntInt_ReturnValue) == 0x00019C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CustomEvent_Time) == 0x0001A0, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_15) == 0x0001A4, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetActorOfClass_ReturnValue) == 0x0001A8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_14) == 0x0001B0, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_14' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001B4, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_16) == 0x0001B8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CustomEvent_Innocent_Win) == 0x0001BC, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CustomEvent_Innocent_Win' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CustomEvent_Force) == 0x0001BD, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CustomEvent_Force' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Check_Finished_Tasks_End) == 0x0001BE, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Check_Finished_Tasks_End' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CustomEvent_Clear) == 0x0001BF, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CustomEvent_Clear' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetAllActorsOfClass_OutActors) == 0x0001C0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Loop_Counter_Variable_15) == 0x0001D0, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Loop_Counter_Variable_15' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_IntInt_ReturnValue_17) == 0x0001E0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_1) == 0x0001E4, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001EC, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000200, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CustomEvent_Mec_1) == 0x000208, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CustomEvent_Mec_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_Select_Default) == 0x000210, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Check_Deaths_All_Dead) == 0x000211, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Check_Deaths_All_Dead' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Variable_1) == 0x000214, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000218, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_BreakVector_X) == 0x000230, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_BreakVector_Y) == 0x000238, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_BreakVector_Z) == 0x000240, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Variable_2) == 0x000248, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_RandomFloatInRange_ReturnValue) == 0x000250, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000258, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000260, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Variable_3) == 0x000268, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000270, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000278, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_MakeVector_ReturnValue) == 0x000280, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_byte_Variable_8) == 0x000298, "Member 'GM_C_ExecuteUbergraph_GM::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Variable_4) == 0x00029C, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002A0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002B8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Add_VectorVector_ReturnValue) == 0x0002C0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players) == 0x0002D8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_1) == 0x0002E8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_2) == 0x0002F0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002F4, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_1) == 0x0002F8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_2) == 0x000308, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_3) == 0x000310, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_3) == 0x000314, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_2) == 0x000318, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_3) == 0x000328, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_4) == 0x000330, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_4) == 0x000334, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_3) == 0x000338, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_4) == 0x000348, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_5) == 0x000350, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_5) == 0x000354, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_4) == 0x000358, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_5) == 0x000368, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_5) == 0x000378, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_6) == 0x000380, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_6) == 0x000388, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_7) == 0x00038C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_6) == 0x000390, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_7) == 0x000391, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_6) == 0x000398, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_6' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_7) == 0x0003A8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_7' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_7) == 0x0003B8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_8) == 0x0003C0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_8) == 0x0003C8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_9) == 0x0003CC, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_8) == 0x0003D0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_9) == 0x0003D1, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_8) == 0x0003D8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_8' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_9) == 0x0003E8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_9' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_9) == 0x0003F8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_10) == 0x000400, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_10) == 0x000408, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_11) == 0x00040C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_10) == 0x000410, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_11) == 0x000411, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_10) == 0x000418, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_10' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_11) == 0x000428, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_11' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_11) == 0x000438, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_12) == 0x000440, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_12) == 0x000448, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_13) == 0x00044C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_12) == 0x000450, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_13) == 0x000451, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CustomEvent_Armed_C4_Ref) == 0x000458, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CustomEvent_Armed_C4_Ref' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Contains_ReturnValue_1) == 0x000460, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_12) == 0x000468, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_12' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_13) == 0x000478, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_14) == 0x000480, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_14) == 0x000484, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000488, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000498, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_14) == 0x0004A8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_15) == 0x0004B0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0004B4, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_16) == 0x0004B8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_15) == 0x0004BC, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_MakeLiteralText_ReturnValue) == 0x0004C0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_KickPlayer_ReturnValue) == 0x0004D0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_KickPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetGameInstance_ReturnValue) == 0x0004D8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_AsMain_GI) == 0x0004E0, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_AsMain_GI' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_bSuccess_2) == 0x0004E8, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CustomEvent_Mec) == 0x0004F0, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CustomEvent_Mec' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetPlayerController_ReturnValue) == 0x0004F8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_IsValid_ReturnValue_4) == 0x000500, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetSteamIdFromPlayerState_ReturnValue_1) == 0x000508, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetSteamIdFromPlayerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_BreakSteamID_ReturnValue_1) == 0x000510, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_BreakSteamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000520, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000530, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_KickPlayer_ReturnValue_1) == 0x000540, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_KickPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_KickPlayer_ReturnValue_2) == 0x000541, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_KickPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_13) == 0x000548, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_13' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_15) == 0x000558, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_17) == 0x000560, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Less_IntInt_ReturnValue_16) == 0x000564, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_14) == 0x000568, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_14' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_16) == 0x000578, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_CustomEvent_Start) == 0x000580, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_CustomEvent_Start' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_15) == 0x000588, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_15' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_17) == 0x000598, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_16) == 0x0005A0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_16' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Get_Item_18) == 0x0005B0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetPlayerController_ReturnValue_1) == 0x0005B8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_AsPC_2) == 0x0005C0, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_AsPC_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_bSuccess_3) == 0x0005C8, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_SaveGameToSlot_ReturnValue) == 0x0005C9, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_GetPlayerController_ReturnValue_2) == 0x0005D0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0005D8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_DoesSaveGameExist_ReturnValue) == 0x0005D9, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_SelectString_ReturnValue) == 0x0005E0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, Temp_int_Variable_5) == 0x0005F0, "Member 'GM_C_ExecuteUbergraph_GM::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Concat_StrStr_ReturnValue) == 0x0005F8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000608, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_SaveGameToSlot_ReturnValue_1) == 0x000609, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_SaveGameToSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_AddUnique_ReturnValue) == 0x00060C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_17) == 0x000610, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_17' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_18) == 0x000620, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000624, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Multiply_IntInt_ReturnValue) == 0x000628, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_IsValid_ReturnValue_5) == 0x00062C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_Select_Default_1) == 0x000630, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_AsWorld_Item) == 0x000638, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_AsWorld_Item' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_bSuccess_4) == 0x000640, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_AsMec) == 0x000648, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_AsMec' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_bSuccess_5) == 0x000650, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_18) == 0x000658, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_18' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_19) == 0x000668, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_20) == 0x00066C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000670, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000671, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_SelectInt_ReturnValue) == 0x000674, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_SelectInt_ReturnValue_1) == 0x000678, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Greater_IntInt_ReturnValue_5) == 0x00067C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Get_Valid_Players_Players_19) == 0x000680, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Get_Valid_Players_Players_19' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_SelectInt_ReturnValue_2) == 0x000690, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Array_Length_ReturnValue_21) == 0x000694, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Greater_IntInt_ReturnValue_6) == 0x000698, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Greater_IntInt_ReturnValue_7) == 0x000699, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_SelectInt_ReturnValue_3) == 0x00069C, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_SelectInt_ReturnValue_4) == 0x0006A0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_SelectInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_Greater_IntInt_ReturnValue_8) == 0x0006A4, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_SaveGameToSlot_ReturnValue_2) == 0x0006A5, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_SaveGameToSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_SelectInt_ReturnValue_5) == 0x0006A8, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_SelectInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_CreateSaveGameObject_ReturnValue) == 0x0006B0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_Select_Default_2) == 0x0006B8, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_LoadGameFromSlot_ReturnValue) == 0x0006C0, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_AsSave_Ban_List) == 0x0006C8, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_AsSave_Ban_List' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, K2Node_DynamicCast_bSuccess_6) == 0x0006D0, "Member 'GM_C_ExecuteUbergraph_GM::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(GM_C_ExecuteUbergraph_GM, CallFunc_All_TP_Orientation_ImplicitCast) == 0x0006D4, "Member 'GM_C_ExecuteUbergraph_GM::CallFunc_All_TP_Orientation_ImplicitCast' has a wrong offset!");

// Function GM.GM_C.Get Valid Players
// 0x0040 (0x0040 - 0x0000)
struct GM_C_Get_Valid_Players final
{
public:
	TArray<class AMec_C*>                         Players_0;                                         // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AMec_C*>                         Temp_Players;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Get_Valid_Players) == 0x000008, "Wrong alignment on GM_C_Get_Valid_Players");
static_assert(sizeof(GM_C_Get_Valid_Players) == 0x000040, "Wrong size on GM_C_Get_Valid_Players");
static_assert(offsetof(GM_C_Get_Valid_Players, Players_0) == 0x000000, "Member 'GM_C_Get_Valid_Players::Players_0' has a wrong offset!");
static_assert(offsetof(GM_C_Get_Valid_Players, Temp_Players) == 0x000010, "Member 'GM_C_Get_Valid_Players::Temp_Players' has a wrong offset!");
static_assert(offsetof(GM_C_Get_Valid_Players, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GM_C_Get_Valid_Players::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Get_Valid_Players, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GM_C_Get_Valid_Players::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Get_Valid_Players, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GM_C_Get_Valid_Players::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Get_Valid_Players, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'GM_C_Get_Valid_Players::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Get_Valid_Players, CallFunc_Array_Get_Item) == 0x000030, "Member 'GM_C_Get_Valid_Players::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_C_Get_Valid_Players, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'GM_C_Get_Valid_Players::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Get_Valid_Players, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'GM_C_Get_Valid_Players::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Get_Valid_Players, CallFunc_Array_AddUnique_ReturnValue) == 0x00003C, "Member 'GM_C_Get_Valid_Players::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function GM.GM_C.K2_OnLogout
// 0x0008 (0x0008 - 0x0000)
struct GM_C_K2_OnLogout final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_K2_OnLogout) == 0x000008, "Wrong alignment on GM_C_K2_OnLogout");
static_assert(sizeof(GM_C_K2_OnLogout) == 0x000008, "Wrong size on GM_C_K2_OnLogout");
static_assert(offsetof(GM_C_K2_OnLogout, ExitingController) == 0x000000, "Member 'GM_C_K2_OnLogout::ExitingController' has a wrong offset!");

// Function GM.GM_C.K2_PostLogin
// 0x0008 (0x0008 - 0x0000)
struct GM_C_K2_PostLogin final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_K2_PostLogin) == 0x000008, "Wrong alignment on GM_C_K2_PostLogin");
static_assert(sizeof(GM_C_K2_PostLogin) == 0x000008, "Wrong size on GM_C_K2_PostLogin");
static_assert(offsetof(GM_C_K2_PostLogin, NewPlayer) == 0x000000, "Member 'GM_C_K2_PostLogin::NewPlayer' has a wrong offset!");

// Function GM.GM_C.New Player
// 0x0008 (0x0008 - 0x0000)
struct GM_C_New_Player final
{
public:
	class AMec_C*                                 Mec;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_New_Player) == 0x000008, "Wrong alignment on GM_C_New_Player");
static_assert(sizeof(GM_C_New_Player) == 0x000008, "Wrong size on GM_C_New_Player");
static_assert(offsetof(GM_C_New_Player, Mec) == 0x000000, "Member 'GM_C_New_Player::Mec' has a wrong offset!");

// Function GM.GM_C.Resize Player List
// 0x0018 (0x0018 - 0x0000)
struct GM_C_Resize_Player_List final
{
public:
	TArray<class AMec_C*>                         Temp_Players;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Found_Place;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Resize_Player_List) == 0x000008, "Wrong alignment on GM_C_Resize_Player_List");
static_assert(sizeof(GM_C_Resize_Player_List) == 0x000018, "Wrong size on GM_C_Resize_Player_List");
static_assert(offsetof(GM_C_Resize_Player_List, Temp_Players) == 0x000000, "Member 'GM_C_Resize_Player_List::Temp_Players' has a wrong offset!");
static_assert(offsetof(GM_C_Resize_Player_List, Found_Place) == 0x000010, "Member 'GM_C_Resize_Player_List::Found_Place' has a wrong offset!");

// Function GM.GM_C.Select Game Roles
// 0x0058 (0x0058 - 0x0000)
struct GM_C_Select_Game_Roles final
{
public:
	int32                                         Saboters_Count;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         _Temp_Players;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	E_PlayerRole                                  Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerRole                                  Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players;                // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerRole                                  K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMec_C*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Select_Game_Roles) == 0x000008, "Wrong alignment on GM_C_Select_Game_Roles");
static_assert(sizeof(GM_C_Select_Game_Roles) == 0x000058, "Wrong size on GM_C_Select_Game_Roles");
static_assert(offsetof(GM_C_Select_Game_Roles, Saboters_Count) == 0x000000, "Member 'GM_C_Select_Game_Roles::Saboters_Count' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, _Temp_Players) == 0x000008, "Member 'GM_C_Select_Game_Roles::_Temp_Players' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, Temp_byte_Variable) == 0x000018, "Member 'GM_C_Select_Game_Roles::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, Temp_byte_Variable_1) == 0x000019, "Member 'GM_C_Select_Game_Roles::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'GM_C_Select_Game_Roles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'GM_C_Select_Game_Roles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'GM_C_Select_Game_Roles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, CallFunc_Get_Valid_Players_Players) == 0x000028, "Member 'GM_C_Select_Game_Roles::CallFunc_Get_Valid_Players_Players' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'GM_C_Select_Game_Roles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, Temp_bool_Variable) == 0x000039, "Member 'GM_C_Select_Game_Roles::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, K2Node_Select_Default) == 0x00003A, "Member 'GM_C_Select_Game_Roles::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'GM_C_Select_Game_Roles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, CallFunc_Array_Get_Item) == 0x000040, "Member 'GM_C_Select_Game_Roles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'GM_C_Select_Game_Roles::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'GM_C_Select_Game_Roles::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Game_Roles, CallFunc_Array_Add_ReturnValue_1) == 0x000050, "Member 'GM_C_Select_Game_Roles::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function GM.GM_C.Select Players Colors
// 0x0018 (0x0018 - 0x0000)
struct GM_C_Select_Players_Colors final
{
public:
	class AMec_C*                                 Last_Player;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<Enum_SelectedColor>                    Taken_Colors;                                      // 0x0008(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(GM_C_Select_Players_Colors) == 0x000008, "Wrong alignment on GM_C_Select_Players_Colors");
static_assert(sizeof(GM_C_Select_Players_Colors) == 0x000018, "Wrong size on GM_C_Select_Players_Colors");
static_assert(offsetof(GM_C_Select_Players_Colors, Last_Player) == 0x000000, "Member 'GM_C_Select_Players_Colors::Last_Player' has a wrong offset!");
static_assert(offsetof(GM_C_Select_Players_Colors, Taken_Colors) == 0x000008, "Member 'GM_C_Select_Players_Colors::Taken_Colors' has a wrong offset!");

// Function GM.GM_C.Set C4 Ref
// 0x0008 (0x0008 - 0x0000)
struct GM_C_Set_C4_Ref final
{
public:
	class AActor*                                 Armed_C4_Ref_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Set_C4_Ref) == 0x000008, "Wrong alignment on GM_C_Set_C4_Ref");
static_assert(sizeof(GM_C_Set_C4_Ref) == 0x000008, "Wrong size on GM_C_Set_C4_Ref");
static_assert(offsetof(GM_C_Set_C4_Ref, Armed_C4_Ref_0) == 0x000000, "Member 'GM_C_Set_C4_Ref::Armed_C4_Ref_0' has a wrong offset!");

// Function GM.GM_C.Set HackerSphere
// 0x0001 (0x0001 - 0x0000)
struct GM_C_Set_HackerSphere final
{
public:
	bool                                          Clear;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Set_HackerSphere) == 0x000001, "Wrong alignment on GM_C_Set_HackerSphere");
static_assert(sizeof(GM_C_Set_HackerSphere) == 0x000001, "Wrong size on GM_C_Set_HackerSphere");
static_assert(offsetof(GM_C_Set_HackerSphere, Clear) == 0x000000, "Member 'GM_C_Set_HackerSphere::Clear' has a wrong offset!");

// Function GM.GM_C.Set Tutorial Mode
// 0x0001 (0x0001 - 0x0000)
struct GM_C_Set_Tutorial_Mode final
{
public:
	bool                                          Start;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Set_Tutorial_Mode) == 0x000001, "Wrong alignment on GM_C_Set_Tutorial_Mode");
static_assert(sizeof(GM_C_Set_Tutorial_Mode) == 0x000001, "Wrong size on GM_C_Set_Tutorial_Mode");
static_assert(offsetof(GM_C_Set_Tutorial_Mode, Start) == 0x000000, "Member 'GM_C_Set_Tutorial_Mode::Start' has a wrong offset!");

// Function GM.GM_C.Start Game Timer
// 0x0004 (0x0004 - 0x0000)
struct GM_C_Start_Game_Timer final
{
public:
	int32                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Start_Game_Timer) == 0x000004, "Wrong alignment on GM_C_Start_Game_Timer");
static_assert(sizeof(GM_C_Start_Game_Timer) == 0x000004, "Wrong size on GM_C_Start_Game_Timer");
static_assert(offsetof(GM_C_Start_Game_Timer, Time) == 0x000000, "Member 'GM_C_Start_Game_Timer::Time' has a wrong offset!");

// Function GM.GM_C.Switch Player Color
// 0x0108 (0x0108 - 0x0000)
struct GM_C_Switch_Player_Color final
{
public:
	class AMec_C*                                 Mec;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	Enum_SelectedColor                            Color;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Available;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 Owner_0;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<Enum_SelectedColor>                    Available_Colors;                                  // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_SelectedColor>                    AvailableColors;                                   // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ColorLink                         CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ColorLink                         CallFunc_Array_Get_Item_1;                         // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_ColorLink                         CallFunc_Array_Get_Item_2;                         // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ColorLink                         CallFunc_Array_Get_Item_3;                         // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ColorLink                         K2Node_MakeStruct_Str_ColorLink;                   // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_ColorLink                         K2Node_MakeStruct_Str_ColorLink_1;                 // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ColorLink                         CallFunc_Array_Get_Item_4;                         // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Switch_Player_Color) == 0x000008, "Wrong alignment on GM_C_Switch_Player_Color");
static_assert(sizeof(GM_C_Switch_Player_Color) == 0x000108, "Wrong size on GM_C_Switch_Player_Color");
static_assert(offsetof(GM_C_Switch_Player_Color, Mec) == 0x000000, "Member 'GM_C_Switch_Player_Color::Mec' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Color) == 0x000008, "Member 'GM_C_Switch_Player_Color::Color' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Available) == 0x000009, "Member 'GM_C_Switch_Player_Color::Available' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Owner_0) == 0x000010, "Member 'GM_C_Switch_Player_Color::Owner_0' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Available_Colors) == 0x000018, "Member 'GM_C_Switch_Player_Color::Available_Colors' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, AvailableColors) == 0x000028, "Member 'GM_C_Switch_Player_Color::AvailableColors' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Temp_int_Array_Index_Variable) == 0x000038, "Member 'GM_C_Switch_Player_Color::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'GM_C_Switch_Player_Color::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'GM_C_Switch_Player_Color::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'GM_C_Switch_Player_Color::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'GM_C_Switch_Player_Color::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Temp_int_Loop_Counter_Variable_2) == 0x00004C, "Member 'GM_C_Switch_Player_Color::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'GM_C_Switch_Player_Color::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'GM_C_Switch_Player_Color::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Temp_int_Array_Index_Variable_2) == 0x000058, "Member 'GM_C_Switch_Player_Color::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Temp_int_Loop_Counter_Variable_3) == 0x00005C, "Member 'GM_C_Switch_Player_Color::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Add_IntInt_ReturnValue_3) == 0x000060, "Member 'GM_C_Switch_Player_Color::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, Temp_int_Array_Index_Variable_3) == 0x000064, "Member 'GM_C_Switch_Player_Color::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Get_Item) == 0x000068, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'GM_C_Switch_Player_Color::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'GM_C_Switch_Player_Color::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Add_ReturnValue_1) == 0x000090, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'GM_C_Switch_Player_Color::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009D, "Member 'GM_C_Switch_Player_Color::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Get_Item_2) == 0x0000A0, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Get_Item_3) == 0x0000B0, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, K2Node_MakeStruct_Str_ColorLink) == 0x0000C0, "Member 'GM_C_Switch_Player_Color::K2Node_MakeStruct_Str_ColorLink' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D0, "Member 'GM_C_Switch_Player_Color::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Length_ReturnValue_2) == 0x0000D4, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D8, "Member 'GM_C_Switch_Player_Color::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, K2Node_MakeStruct_Str_ColorLink_1) == 0x0000E0, "Member 'GM_C_Switch_Player_Color::K2Node_MakeStruct_Str_ColorLink_1' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Get_Item_4) == 0x0000F0, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Array_Length_ReturnValue_3) == 0x000100, "Member 'GM_C_Switch_Player_Color::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_Less_IntInt_ReturnValue_3) == 0x000104, "Member 'GM_C_Switch_Player_Color::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_IsValid_ReturnValue_2) == 0x000105, "Member 'GM_C_Switch_Player_Color::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_C_Switch_Player_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000106, "Member 'GM_C_Switch_Player_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GM.GM_C.Switch Ready ForPlayer
// 0x0008 (0x0008 - 0x0000)
struct GM_C_Switch_Ready_ForPlayer final
{
public:
	class AMec_C*                                 Mec;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Switch_Ready_ForPlayer) == 0x000008, "Wrong alignment on GM_C_Switch_Ready_ForPlayer");
static_assert(sizeof(GM_C_Switch_Ready_ForPlayer) == 0x000008, "Wrong size on GM_C_Switch_Ready_ForPlayer");
static_assert(offsetof(GM_C_Switch_Ready_ForPlayer, Mec) == 0x000000, "Member 'GM_C_Switch_Ready_ForPlayer::Mec' has a wrong offset!");

// Function GM.GM_C.TP Players on Lobby
// 0x00C0 (0x00C0 - 0x0000)
struct GM_C_TP_Players_on_Lobby final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_Generate_Locations_Locations;             // 0x0050(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_All_TP_Orientation_ImplicitCast;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_TP_Players_on_Lobby) == 0x000008, "Wrong alignment on GM_C_TP_Players_on_Lobby");
static_assert(sizeof(GM_C_TP_Players_on_Lobby) == 0x0000C0, "Wrong size on GM_C_TP_Players_on_Lobby");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GM_C_TP_Players_on_Lobby::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GM_C_TP_Players_on_Lobby::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_BreakVector_X) == 0x000028, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_BreakVector_Y) == 0x000030, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_BreakVector_Z) == 0x000038, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_Array_Get_Item) == 0x000048, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_Generate_Locations_Locations) == 0x000050, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_Generate_Locations_Locations' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_BreakVector_X_1) == 0x000080, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_BreakVector_Y_1) == 0x000088, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_BreakVector_Z_1) == 0x000090, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Lobby, CallFunc_All_TP_Orientation_ImplicitCast) == 0x0000B8, "Member 'GM_C_TP_Players_on_Lobby::CallFunc_All_TP_Orientation_ImplicitCast' has a wrong offset!");

// Function GM.GM_C.TP Players on Start
// 0x00B0 (0x00B0 - 0x0000)
struct GM_C_TP_Players_on_Start final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players;                // 0x0010(0x0010)(ReferenceParm)
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players_1;              // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMec_C*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_Generate_Locations_Locations;             // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_All_TP_Orientation_ImplicitCast;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_TP_Players_on_Start) == 0x000008, "Wrong alignment on GM_C_TP_Players_on_Start");
static_assert(sizeof(GM_C_TP_Players_on_Start) == 0x0000B0, "Wrong size on GM_C_TP_Players_on_Start");
static_assert(offsetof(GM_C_TP_Players_on_Start, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GM_C_TP_Players_on_Start::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GM_C_TP_Players_on_Start::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GM_C_TP_Players_on_Start::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_Get_Valid_Players_Players) == 0x000010, "Member 'GM_C_TP_Players_on_Start::CallFunc_Get_Valid_Players_Players' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_Get_Valid_Players_Players_1) == 0x000020, "Member 'GM_C_TP_Players_on_Start::CallFunc_Get_Valid_Players_Players_1' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'GM_C_TP_Players_on_Start::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_Array_Get_Item) == 0x000038, "Member 'GM_C_TP_Players_on_Start::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_Generate_Locations_Locations) == 0x000040, "Member 'GM_C_TP_Players_on_Start::CallFunc_Generate_Locations_Locations' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'GM_C_TP_Players_on_Start::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'GM_C_TP_Players_on_Start::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'GM_C_TP_Players_on_Start::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_BreakVector_X) == 0x000078, "Member 'GM_C_TP_Players_on_Start::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_BreakVector_Y) == 0x000080, "Member 'GM_C_TP_Players_on_Start::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_BreakVector_Z) == 0x000088, "Member 'GM_C_TP_Players_on_Start::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'GM_C_TP_Players_on_Start::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_TP_Players_on_Start, CallFunc_All_TP_Orientation_ImplicitCast) == 0x0000A8, "Member 'GM_C_TP_Players_on_Start::CallFunc_All_TP_Orientation_ImplicitCast' has a wrong offset!");

// Function GM.GM_C.Update Time
// 0x0030 (0x0030 - 0x0000)
struct GM_C_Update_Time final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMec_C*>                         CallFunc_Get_Valid_Players_Players;                // 0x0010(0x0010)(ReferenceParm)
	class AMec_C*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_C_Update_Time) == 0x000008, "Wrong alignment on GM_C_Update_Time");
static_assert(sizeof(GM_C_Update_Time) == 0x000030, "Wrong size on GM_C_Update_Time");
static_assert(offsetof(GM_C_Update_Time, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GM_C_Update_Time::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Update_Time, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GM_C_Update_Time::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_C_Update_Time, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GM_C_Update_Time::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Update_Time, CallFunc_Get_Valid_Players_Players) == 0x000010, "Member 'GM_C_Update_Time::CallFunc_Get_Valid_Players_Players' has a wrong offset!");
static_assert(offsetof(GM_C_Update_Time, CallFunc_Array_Get_Item) == 0x000020, "Member 'GM_C_Update_Time::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_C_Update_Time, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'GM_C_Update_Time::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_C_Update_Time, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'GM_C_Update_Time::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

