#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Pizzushi

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Task_classes.hpp"
#include "E_Difficulty_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Task_Pizzushi.Task_Pizzushi_C
// 0x0038 (0x03A0 - 0x0368)
class ATask_Pizzushi_C final : public ATask_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Task_Pizzushi_C;                    // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Placed;                                            // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Random;                                            // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APizzushi_Table_C*>              Tables;                                            // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class APizzushi_Table_C*>              Task_Tables;                                       // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         Count;                                             // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Containers;                                        // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Check_Tables();
	void Check_Tables_Finish(bool* Finish, int32* Count_0);
	void Clear();
	void ExecuteUbergraph_Task_Pizzushi(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Select_Tables(int32 Count_0, TArray<class APizzushi_Table_C*>* Task_Tables_0);
	void Start_Task(double Delay);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Task_Pizzushi_C">();
	}
	static class ATask_Pizzushi_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATask_Pizzushi_C>();
	}
};
static_assert(alignof(ATask_Pizzushi_C) == 0x000008, "Wrong alignment on ATask_Pizzushi_C");
static_assert(sizeof(ATask_Pizzushi_C) == 0x0003A0, "Wrong size on ATask_Pizzushi_C");
static_assert(offsetof(ATask_Pizzushi_C, UberGraphFrame_Task_Pizzushi_C) == 0x000368, "Member 'ATask_Pizzushi_C::UberGraphFrame_Task_Pizzushi_C' has a wrong offset!");
static_assert(offsetof(ATask_Pizzushi_C, Placed) == 0x000370, "Member 'ATask_Pizzushi_C::Placed' has a wrong offset!");
static_assert(offsetof(ATask_Pizzushi_C, Random) == 0x000374, "Member 'ATask_Pizzushi_C::Random' has a wrong offset!");
static_assert(offsetof(ATask_Pizzushi_C, Tables) == 0x000378, "Member 'ATask_Pizzushi_C::Tables' has a wrong offset!");
static_assert(offsetof(ATask_Pizzushi_C, Task_Tables) == 0x000388, "Member 'ATask_Pizzushi_C::Task_Tables' has a wrong offset!");
static_assert(offsetof(ATask_Pizzushi_C, Count) == 0x000398, "Member 'ATask_Pizzushi_C::Count' has a wrong offset!");
static_assert(offsetof(ATask_Pizzushi_C, Containers) == 0x00039C, "Member 'ATask_Pizzushi_C::Containers' has a wrong offset!");

}

