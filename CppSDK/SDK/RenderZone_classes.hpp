#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RenderZone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass RenderZone.RenderZone_C
// 0x0058 (0x0300 - 0x02A8)
class ARenderZone_C final : public AActor
{
public:
	class UBoxComponent*                          Box;                                               // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Extent;                                            // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              min_0;                                             // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              max_0;                                             // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           RenderTags;                                        // 0x02E8(0x0010)(Edit, BlueprintVisible)
	int32                                         Priority;                                          // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RenderZone_C">();
	}
	static class ARenderZone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARenderZone_C>();
	}
};
static_assert(alignof(ARenderZone_C) == 0x000008, "Wrong alignment on ARenderZone_C");
static_assert(sizeof(ARenderZone_C) == 0x000300, "Wrong size on ARenderZone_C");
static_assert(offsetof(ARenderZone_C, Box) == 0x0002A8, "Member 'ARenderZone_C::Box' has a wrong offset!");
static_assert(offsetof(ARenderZone_C, DefaultSceneRoot) == 0x0002B0, "Member 'ARenderZone_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ARenderZone_C, Extent) == 0x0002B8, "Member 'ARenderZone_C::Extent' has a wrong offset!");
static_assert(offsetof(ARenderZone_C, min_0) == 0x0002C8, "Member 'ARenderZone_C::min_0' has a wrong offset!");
static_assert(offsetof(ARenderZone_C, max_0) == 0x0002D8, "Member 'ARenderZone_C::max_0' has a wrong offset!");
static_assert(offsetof(ARenderZone_C, RenderTags) == 0x0002E8, "Member 'ARenderZone_C::RenderTags' has a wrong offset!");
static_assert(offsetof(ARenderZone_C, Priority) == 0x0002F8, "Member 'ARenderZone_C::Priority' has a wrong offset!");

}

