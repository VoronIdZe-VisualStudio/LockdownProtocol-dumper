#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayersInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "E_PlayerRole_structs.hpp"
#include "Enum_SelectedColor_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PlayersInfo.W_PlayersInfo_C
// 0x0050 (0x0320 - 0x02D0)
class UW_PlayersInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                color_border;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_582;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           PlayerList;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Role_border;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             txt_color;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             txt_role;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        FPS;                                               // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APC_C*                                  Player_Ref;                                        // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Delta;                                             // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Second_Time;                                       // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_PlayersInfo(int32 EntryPoint);
	void Set_Color(Enum_SelectedColor Color);
	void Set_Role(E_PlayerRole Role);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update_Player_List(const TArray<class AMec_C*>& Mecs);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PlayersInfo_C">();
	}
	static class UW_PlayersInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PlayersInfo_C>();
	}
};
static_assert(alignof(UW_PlayersInfo_C) == 0x000008, "Wrong alignment on UW_PlayersInfo_C");
static_assert(sizeof(UW_PlayersInfo_C) == 0x000320, "Wrong size on UW_PlayersInfo_C");
static_assert(offsetof(UW_PlayersInfo_C, UberGraphFrame) == 0x0002D0, "Member 'UW_PlayersInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PlayersInfo_C, color_border) == 0x0002D8, "Member 'UW_PlayersInfo_C::color_border' has a wrong offset!");
static_assert(offsetof(UW_PlayersInfo_C, Image_582) == 0x0002E0, "Member 'UW_PlayersInfo_C::Image_582' has a wrong offset!");
static_assert(offsetof(UW_PlayersInfo_C, PlayerList) == 0x0002E8, "Member 'UW_PlayersInfo_C::PlayerList' has a wrong offset!");
static_assert(offsetof(UW_PlayersInfo_C, Role_border) == 0x0002F0, "Member 'UW_PlayersInfo_C::Role_border' has a wrong offset!");
static_assert(offsetof(UW_PlayersInfo_C, txt_color) == 0x0002F8, "Member 'UW_PlayersInfo_C::txt_color' has a wrong offset!");
static_assert(offsetof(UW_PlayersInfo_C, txt_role) == 0x000300, "Member 'UW_PlayersInfo_C::txt_role' has a wrong offset!");
static_assert(offsetof(UW_PlayersInfo_C, FPS) == 0x000308, "Member 'UW_PlayersInfo_C::FPS' has a wrong offset!");
static_assert(offsetof(UW_PlayersInfo_C, Player_Ref) == 0x000310, "Member 'UW_PlayersInfo_C::Player_Ref' has a wrong offset!");
static_assert(offsetof(UW_PlayersInfo_C, Delta) == 0x000318, "Member 'UW_PlayersInfo_C::Delta' has a wrong offset!");
static_assert(offsetof(UW_PlayersInfo_C, Second_Time) == 0x00031C, "Member 'UW_PlayersInfo_C::Second_Time' has a wrong offset!");

}

