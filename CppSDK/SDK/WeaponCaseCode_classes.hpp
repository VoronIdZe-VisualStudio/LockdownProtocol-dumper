#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponCaseCode

#include "Basic.hpp"

#include "Str_WeaponCase_Step_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Str_WeaponCase_Result_structs.hpp"
#include "E_NumType_structs.hpp"
#include "E_NumPassState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass WeaponCaseCode.WeaponCaseCode_C
// 0x0100 (0x03A8 - 0x02A8)
class AWeaponCaseCode_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   C_SoundPath;                                       // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WeaponCrate_Laptop_Screen;                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WeaponCrate_Laptop_Base;                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_NumPad;                                          // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UW_WeaponCase_UI_C*                     Screen;                                            // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGM_C*                                  GM_Ref;                                            // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 Process_Values;                                    // 0x02F0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	struct FStr_WeaponCase_Result                 Result;                                            // 0x0300(0x0030)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, HasGetValueTypeHash)
	TArray<uint8>                                 Target_Values;                                     // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Process_Index;                                     // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AItemSlot_C*                            Weapon;                                            // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UData_Gun_C*                            Weapon_Type;                                       // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FStr_WeaponCase_Step                   Step;                                              // 0x0358(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 Result_Values;                                     // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<E_NumType>                             Result_Types;                                      // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Step_Index;                                        // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Step_Target;                                       // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeaponCaseBox_C*                       Box_to_Open;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ASoundPath_C*                           SoundPath;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Open_Delay;                                        // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Opening_Timer;                                     // 0x03A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void All_Opening_bip();
	void Cheat_zgeg();
	void Check_Code();
	void Clear();
	void Clear_Process();
	void Clear_Values();
	void Close_Box();
	void ExecuteUbergraph_WeaponCaseCode(int32 EntryPoint);
	void Generate_Code();
	void Generate_Steps(int32 Step_Count);
	void OnRep_Process_Values();
	void OnRep_Result();
	void OnRep_Step();
	void Open_Crate();
	void Opening_Timer_Tick();
	void Play_State_Sound(E_NumPassState Result_State);
	void Push_Num(uint8 Num);
	void ReceiveBeginPlay();
	void Retry();
	void Start_Opening(int32 Delay);
	void Start_Waiting(int32 Delay);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WeaponCaseCode_C">();
	}
	static class AWeaponCaseCode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeaponCaseCode_C>();
	}
};
static_assert(alignof(AWeaponCaseCode_C) == 0x000008, "Wrong alignment on AWeaponCaseCode_C");
static_assert(sizeof(AWeaponCaseCode_C) == 0x0003A8, "Wrong size on AWeaponCaseCode_C");
static_assert(offsetof(AWeaponCaseCode_C, UberGraphFrame) == 0x0002A8, "Member 'AWeaponCaseCode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, C_SoundPath) == 0x0002B0, "Member 'AWeaponCaseCode_C::C_SoundPath' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, WeaponCrate_Laptop_Screen) == 0x0002B8, "Member 'AWeaponCaseCode_C::WeaponCrate_Laptop_Screen' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, WeaponCrate_Laptop_Base) == 0x0002C0, "Member 'AWeaponCaseCode_C::WeaponCrate_Laptop_Base' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Widget) == 0x0002C8, "Member 'AWeaponCaseCode_C::Widget' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, C_NumPad) == 0x0002D0, "Member 'AWeaponCaseCode_C::C_NumPad' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, DefaultSceneRoot) == 0x0002D8, "Member 'AWeaponCaseCode_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Screen) == 0x0002E0, "Member 'AWeaponCaseCode_C::Screen' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, GM_Ref) == 0x0002E8, "Member 'AWeaponCaseCode_C::GM_Ref' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Process_Values) == 0x0002F0, "Member 'AWeaponCaseCode_C::Process_Values' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Result) == 0x000300, "Member 'AWeaponCaseCode_C::Result' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Target_Values) == 0x000330, "Member 'AWeaponCaseCode_C::Target_Values' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Process_Index) == 0x000340, "Member 'AWeaponCaseCode_C::Process_Index' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Weapon) == 0x000348, "Member 'AWeaponCaseCode_C::Weapon' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Weapon_Type) == 0x000350, "Member 'AWeaponCaseCode_C::Weapon_Type' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Step) == 0x000358, "Member 'AWeaponCaseCode_C::Step' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Result_Values) == 0x000360, "Member 'AWeaponCaseCode_C::Result_Values' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Result_Types) == 0x000370, "Member 'AWeaponCaseCode_C::Result_Types' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Step_Index) == 0x000380, "Member 'AWeaponCaseCode_C::Step_Index' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Step_Target) == 0x000384, "Member 'AWeaponCaseCode_C::Step_Target' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Box_to_Open) == 0x000388, "Member 'AWeaponCaseCode_C::Box_to_Open' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, SoundPath) == 0x000390, "Member 'AWeaponCaseCode_C::SoundPath' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Open_Delay) == 0x000398, "Member 'AWeaponCaseCode_C::Open_Delay' has a wrong offset!");
static_assert(offsetof(AWeaponCaseCode_C, Opening_Timer) == 0x0003A0, "Member 'AWeaponCaseCode_C::Opening_Timer' has a wrong offset!");

}

