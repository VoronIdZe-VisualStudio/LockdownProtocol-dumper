#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayerDoorInfo

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_PlayerDoorInfo.W_PlayerDoorInfo_C.ExecuteUbergraph_W_PlayerDoorInfo
// 0x01F0 (0x01F0 - 0x0000)
struct W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Name;                           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C0(0x0010)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00E0(0x0010)()
	class UObject*                                K2Node_CustomEvent_Image;                          // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0100(0x00B0)()
	bool                                          K2Node_CustomEvent_Ready;                          // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01C8(0x0010)()
	bool                                          K2Node_CustomEvent_Hide;                           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo) == 0x000010, "Wrong alignment on W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo");
static_assert(sizeof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo) == 0x0001F0, "Wrong size on W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, EntryPoint) == 0x000000, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, Temp_int_Variable) == 0x000004, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, Temp_string_Variable) == 0x000008, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, Temp_string_Variable_1) == 0x000018, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, Temp_string_Variable_2) == 0x000028, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, Temp_string_Variable_3) == 0x000038, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, Temp_string_Variable_4) == 0x000048, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, Temp_string_Variable_5) == 0x000058, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, Temp_string_Variable_6) == 0x000068, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, Temp_string_Variable_7) == 0x000078, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, Temp_string_Variable_8) == 0x000088, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, K2Node_CustomEvent_Index) == 0x000098, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, K2Node_CustomEvent_Name) == 0x0000A0, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, K2Node_Select_Default) == 0x0000B0, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C0, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000E0, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, K2Node_CustomEvent_Image) == 0x0000F0, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::K2Node_CustomEvent_Image' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, K2Node_MakeStruct_SlateBrush) == 0x000100, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, K2Node_CustomEvent_Ready) == 0x0001B0, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::K2Node_CustomEvent_Ready' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, CallFunc_SelectString_ReturnValue) == 0x0001B8, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001C8, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, K2Node_CustomEvent_Hide) == 0x0001D8, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::K2Node_CustomEvent_Hide' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, CallFunc_SelectFloat_ReturnValue) == 0x0001E0, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0001E8, "Member 'W_PlayerDoorInfo_C_ExecuteUbergraph_W_PlayerDoorInfo::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_PlayerDoorInfo.W_PlayerDoorInfo_C.Set Hidder
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerDoorInfo_C_Set_Hidder final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerDoorInfo_C_Set_Hidder) == 0x000001, "Wrong alignment on W_PlayerDoorInfo_C_Set_Hidder");
static_assert(sizeof(W_PlayerDoorInfo_C_Set_Hidder) == 0x000001, "Wrong size on W_PlayerDoorInfo_C_Set_Hidder");
static_assert(offsetof(W_PlayerDoorInfo_C_Set_Hidder, Hide) == 0x000000, "Member 'W_PlayerDoorInfo_C_Set_Hidder::Hide' has a wrong offset!");

// Function W_PlayerDoorInfo.W_PlayerDoorInfo_C.Set Image
// 0x0008 (0x0008 - 0x0000)
struct W_PlayerDoorInfo_C_Set_Image final
{
public:
	class UObject*                                Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerDoorInfo_C_Set_Image) == 0x000008, "Wrong alignment on W_PlayerDoorInfo_C_Set_Image");
static_assert(sizeof(W_PlayerDoorInfo_C_Set_Image) == 0x000008, "Wrong size on W_PlayerDoorInfo_C_Set_Image");
static_assert(offsetof(W_PlayerDoorInfo_C_Set_Image, Image) == 0x000000, "Member 'W_PlayerDoorInfo_C_Set_Image::Image' has a wrong offset!");

// Function W_PlayerDoorInfo.W_PlayerDoorInfo_C.Set Index
// 0x0004 (0x0004 - 0x0000)
struct W_PlayerDoorInfo_C_Set_Index final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerDoorInfo_C_Set_Index) == 0x000004, "Wrong alignment on W_PlayerDoorInfo_C_Set_Index");
static_assert(sizeof(W_PlayerDoorInfo_C_Set_Index) == 0x000004, "Wrong size on W_PlayerDoorInfo_C_Set_Index");
static_assert(offsetof(W_PlayerDoorInfo_C_Set_Index, Index_0) == 0x000000, "Member 'W_PlayerDoorInfo_C_Set_Index::Index_0' has a wrong offset!");

// Function W_PlayerDoorInfo.W_PlayerDoorInfo_C.Set Name
// 0x0010 (0x0010 - 0x0000)
struct W_PlayerDoorInfo_C_Set_Name final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerDoorInfo_C_Set_Name) == 0x000008, "Wrong alignment on W_PlayerDoorInfo_C_Set_Name");
static_assert(sizeof(W_PlayerDoorInfo_C_Set_Name) == 0x000010, "Wrong size on W_PlayerDoorInfo_C_Set_Name");
static_assert(offsetof(W_PlayerDoorInfo_C_Set_Name, Name_0) == 0x000000, "Member 'W_PlayerDoorInfo_C_Set_Name::Name_0' has a wrong offset!");

// Function W_PlayerDoorInfo.W_PlayerDoorInfo_C.Set Ready
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerDoorInfo_C_Set_Ready final
{
public:
	bool                                          Ready;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerDoorInfo_C_Set_Ready) == 0x000001, "Wrong alignment on W_PlayerDoorInfo_C_Set_Ready");
static_assert(sizeof(W_PlayerDoorInfo_C_Set_Ready) == 0x000001, "Wrong size on W_PlayerDoorInfo_C_Set_Ready");
static_assert(offsetof(W_PlayerDoorInfo_C_Set_Ready, Ready) == 0x000000, "Member 'W_PlayerDoorInfo_C_Set_Ready::Ready' has a wrong offset!");

}

