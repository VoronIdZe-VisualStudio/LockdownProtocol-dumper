#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tuto_Check

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Tuto_Check.Tuto_Check_C
// 0x0080 (0x0328 - 0x02A8)
class ATuto_Check_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Value_68E6D92647C86DA361A57AB38A93349D;   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_68E6D92647C86DA361A57AB38A93349D; // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Check_M;                                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Flash_Color;                                       // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Constant_Color;                                    // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Checked;                                           // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Default;                                           // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 Room)>    Update_Check;                                      // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Lock;                                              // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Room;                                              // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_C*                                  GM_Ref;                                            // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Door;                                              // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Check(bool Force);
	void Clear();
	void Error(bool Force);
	void ExecuteUbergraph_Tuto_Check(int32 EntryPoint);
	void Flash(const struct FLinearColor& Flash_Color_0, const struct FLinearColor& Constant_Color_0);
	void Get_Key(class AActor** Key);
	void Get_Name(class AMec_C* Mec, class FString* Name_0);
	void Local_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Net_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void Other_Interaction(int32 Index_0, class AActor* Source, const struct FStr_ItemState& Item_State);
	void ReceiveBeginPlay();
	void Reset();
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void UserConstructionScript();
	void Validation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Tuto_Check_C">();
	}
	static class ATuto_Check_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATuto_Check_C>();
	}
};
static_assert(alignof(ATuto_Check_C) == 0x000008, "Wrong alignment on ATuto_Check_C");
static_assert(sizeof(ATuto_Check_C) == 0x000328, "Wrong size on ATuto_Check_C");
static_assert(offsetof(ATuto_Check_C, UberGraphFrame) == 0x0002A8, "Member 'ATuto_Check_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Plane) == 0x0002B0, "Member 'ATuto_Check_C::Plane' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, DefaultSceneRoot) == 0x0002B8, "Member 'ATuto_Check_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Timeline_Value_68E6D92647C86DA361A57AB38A93349D) == 0x0002C0, "Member 'ATuto_Check_C::Timeline_Value_68E6D92647C86DA361A57AB38A93349D' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Timeline__Direction_68E6D92647C86DA361A57AB38A93349D) == 0x0002C4, "Member 'ATuto_Check_C::Timeline__Direction_68E6D92647C86DA361A57AB38A93349D' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Timeline) == 0x0002C8, "Member 'ATuto_Check_C::Timeline' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Check_M) == 0x0002D0, "Member 'ATuto_Check_C::Check_M' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Flash_Color) == 0x0002D8, "Member 'ATuto_Check_C::Flash_Color' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Constant_Color) == 0x0002E8, "Member 'ATuto_Check_C::Constant_Color' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Checked) == 0x0002F8, "Member 'ATuto_Check_C::Checked' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Default) == 0x0002F9, "Member 'ATuto_Check_C::Default' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Update_Check) == 0x000300, "Member 'ATuto_Check_C::Update_Check' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Lock) == 0x000310, "Member 'ATuto_Check_C::Lock' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Room) == 0x000314, "Member 'ATuto_Check_C::Room' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, GM_Ref) == 0x000318, "Member 'ATuto_Check_C::GM_Ref' has a wrong offset!");
static_assert(offsetof(ATuto_Check_C, Door) == 0x000320, "Member 'ATuto_Check_C::Door' has a wrong offset!");

}

