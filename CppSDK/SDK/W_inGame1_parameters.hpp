#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_inGame1

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_inGame1.W_inGame1_C.Death Hidders
// 0x0001 (0x0001 - 0x0000)
struct W_inGame1_C_Death_Hidders final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame1_C_Death_Hidders) == 0x000001, "Wrong alignment on W_inGame1_C_Death_Hidders");
static_assert(sizeof(W_inGame1_C_Death_Hidders) == 0x000001, "Wrong size on W_inGame1_C_Death_Hidders");
static_assert(offsetof(W_inGame1_C_Death_Hidders, TRUE_0) == 0x000000, "Member 'W_inGame1_C_Death_Hidders::TRUE_0' has a wrong offset!");

// Function W_inGame1.W_inGame1_C.ExecuteUbergraph_W_inGame1
// 0x0170 (0x0170 - 0x0000)
struct W_inGame1_C_ExecuteUbergraph_W_inGame1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Employee_Wins;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Is_Employee;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Delta__;                                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_True_3;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hacker;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_True_2;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_True_1;                         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Key;                            // 0x00A0(0x0010)()
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_True;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue_1;          // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMainGI_C*                              K2Node_DynamicCast_AsMain_GI;                      // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x012C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame1_C_ExecuteUbergraph_W_inGame1) == 0x000008, "Wrong alignment on W_inGame1_C_ExecuteUbergraph_W_inGame1");
static_assert(sizeof(W_inGame1_C_ExecuteUbergraph_W_inGame1) == 0x000170, "Wrong size on W_inGame1_C_ExecuteUbergraph_W_inGame1");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, EntryPoint) == 0x000000, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_CustomEvent_Employee_Wins) == 0x000004, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_CustomEvent_Employee_Wins' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_CustomEvent_Is_Employee) == 0x000005, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_CustomEvent_Is_Employee' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_Delta__) == 0x000008, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_Delta__' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_CustomEvent_True_3) == 0x000010, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_CustomEvent_True_3' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_CustomEvent_Hacker) == 0x000011, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_CustomEvent_Hacker' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_GetEffectMaterial_ReturnValue) == 0x000018, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_GetEffectMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000020, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000030, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000048, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_PlayAnimationForward_ReturnValue) == 0x000050, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_CustomEvent_True_2) == 0x000058, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_CustomEvent_True_2' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_CustomEvent_True_1) == 0x000059, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_CustomEvent_True_1' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00005A, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_BreakVector_X) == 0x000060, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_BreakVector_Y) == 0x000068, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_BreakVector_Z) == 0x000070, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_CustomEvent_Key) == 0x0000A0, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_VInterpTo_ReturnValue) == 0x0000B0, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_CustomEvent_True) == 0x0000C8, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_CustomEvent_True' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000CC, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_MakeStruct_LinearColor) == 0x0000DC, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0000F0, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0000F8, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_PlayAnimation_ReturnValue) == 0x000100, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_PlayAnimation_ReturnValue_1) == 0x000108, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_GetGameInstance_ReturnValue) == 0x000110, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_GetEffectMaterial_ReturnValue_1) == 0x000118, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_GetEffectMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_DynamicCast_AsMain_GI) == 0x000120, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_DynamicCast_AsMain_GI' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_Event_MyGeometry) == 0x00012C, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_Event_InDeltaTime) == 0x000164, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, K2Node_Event_IsDesignTime) == 0x000168, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_ExecuteUbergraph_W_inGame1, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x00016C, "Member 'W_inGame1_C_ExecuteUbergraph_W_inGame1::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function W_inGame1.W_inGame1_C.Game End
// 0x0002 (0x0002 - 0x0000)
struct W_inGame1_C_Game_End_0 final
{
public:
	bool                                          Employee_Wins;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Employee;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame1_C_Game_End_0) == 0x000001, "Wrong alignment on W_inGame1_C_Game_End_0");
static_assert(sizeof(W_inGame1_C_Game_End_0) == 0x000002, "Wrong size on W_inGame1_C_Game_End_0");
static_assert(offsetof(W_inGame1_C_Game_End_0, Employee_Wins) == 0x000000, "Member 'W_inGame1_C_Game_End_0::Employee_Wins' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_Game_End_0, Is_Employee) == 0x000001, "Member 'W_inGame1_C_Game_End_0::Is_Employee' has a wrong offset!");

// Function W_inGame1.W_inGame1_C.Game Start
// 0x0001 (0x0001 - 0x0000)
struct W_inGame1_C_Game_Start_0 final
{
public:
	bool                                          Hacker;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame1_C_Game_Start_0) == 0x000001, "Wrong alignment on W_inGame1_C_Game_Start_0");
static_assert(sizeof(W_inGame1_C_Game_Start_0) == 0x000001, "Wrong size on W_inGame1_C_Game_Start_0");
static_assert(offsetof(W_inGame1_C_Game_Start_0, Hacker) == 0x000000, "Member 'W_inGame1_C_Game_Start_0::Hacker' has a wrong offset!");

// Function W_inGame1.W_inGame1_C.Hide HUD
// 0x0001 (0x0001 - 0x0000)
struct W_inGame1_C_Hide_HUD final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame1_C_Hide_HUD) == 0x000001, "Wrong alignment on W_inGame1_C_Hide_HUD");
static_assert(sizeof(W_inGame1_C_Hide_HUD) == 0x000001, "Wrong size on W_inGame1_C_Hide_HUD");
static_assert(offsetof(W_inGame1_C_Hide_HUD, TRUE_0) == 0x000000, "Member 'W_inGame1_C_Hide_HUD::TRUE_0' has a wrong offset!");

// Function W_inGame1.W_inGame1_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_inGame1_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame1_C_PreConstruct) == 0x000001, "Wrong alignment on W_inGame1_C_PreConstruct");
static_assert(sizeof(W_inGame1_C_PreConstruct) == 0x000001, "Wrong size on W_inGame1_C_PreConstruct");
static_assert(offsetof(W_inGame1_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_inGame1_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_inGame1.W_inGame1_C.Set Tablet Help Key
// 0x0010 (0x0010 - 0x0000)
struct W_inGame1_C_Set_Tablet_Help_Key final
{
public:
	class FText                                   Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_inGame1_C_Set_Tablet_Help_Key) == 0x000008, "Wrong alignment on W_inGame1_C_Set_Tablet_Help_Key");
static_assert(sizeof(W_inGame1_C_Set_Tablet_Help_Key) == 0x000010, "Wrong size on W_inGame1_C_Set_Tablet_Help_Key");
static_assert(offsetof(W_inGame1_C_Set_Tablet_Help_Key, Key) == 0x000000, "Member 'W_inGame1_C_Set_Tablet_Help_Key::Key' has a wrong offset!");

// Function W_inGame1.W_inGame1_C.Show Tablet Help
// 0x0001 (0x0001 - 0x0000)
struct W_inGame1_C_Show_Tablet_Help final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame1_C_Show_Tablet_Help) == 0x000001, "Wrong alignment on W_inGame1_C_Show_Tablet_Help");
static_assert(sizeof(W_inGame1_C_Show_Tablet_Help) == 0x000001, "Wrong size on W_inGame1_C_Show_Tablet_Help");
static_assert(offsetof(W_inGame1_C_Show_Tablet_Help, TRUE_0) == 0x000000, "Member 'W_inGame1_C_Show_Tablet_Help::TRUE_0' has a wrong offset!");

// Function W_inGame1.W_inGame1_C.Show Task Tab
// 0x0001 (0x0001 - 0x0000)
struct W_inGame1_C_Show_Task_Tab final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame1_C_Show_Task_Tab) == 0x000001, "Wrong alignment on W_inGame1_C_Show_Task_Tab");
static_assert(sizeof(W_inGame1_C_Show_Task_Tab) == 0x000001, "Wrong size on W_inGame1_C_Show_Task_Tab");
static_assert(offsetof(W_inGame1_C_Show_Task_Tab, TRUE_0) == 0x000000, "Member 'W_inGame1_C_Show_Task_Tab::TRUE_0' has a wrong offset!");

// Function W_inGame1.W_inGame1_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_inGame1_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_inGame1_C_Tick) == 0x000004, "Wrong alignment on W_inGame1_C_Tick");
static_assert(sizeof(W_inGame1_C_Tick) == 0x00003C, "Wrong size on W_inGame1_C_Tick");
static_assert(offsetof(W_inGame1_C_Tick, MyGeometry) == 0x000000, "Member 'W_inGame1_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_inGame1_C_Tick, InDeltaTime) == 0x000038, "Member 'W_inGame1_C_Tick::InDeltaTime' has a wrong offset!");

}

