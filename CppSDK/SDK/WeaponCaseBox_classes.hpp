#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponCaseBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_Sectors_structs.hpp"
#include "Enum_WeaponListCase_structs.hpp"
#include "Str_WeaponFoam_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass WeaponCaseBox.WeaponCaseBox_C
// 0x00E0 (0x0388 - 0x02A8)
class AWeaponCaseBox_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   C_SoundPath;                                       // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WeaponCrate_FoamBot;                               // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WeaponCrate_FoamTop;                               // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WeaponCrate_Small_Top;                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WeaponCrate_Small;                                 // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ItemSlot;                                          // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Case_Opening_Rotation_6640B30A41CCDEB064DF0CB3341161C5; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Case_Opening__Direction_6640B30A41CCDEB064DF0CB3341161C5; // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Case_Opening;                                   // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Case_Open;                                         // 0x02F8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UData_Gun_C*                            Selected_Weapon_qsdsf;                             // 0x0300(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AItemSlot_C*                            Item_Slot;                                         // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	Enum_WeaponListCase                           Selected_Weapon;                                   // 0x0310(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASoundPath_C*                           SoundPath;                                         // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	Enum_Sectors                                  Sector;                                            // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<Enum_WeaponListCase, struct FStr_WeaponFoam> AssociatedFoam;                                // 0x0328(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               M_FoamBot;                                         // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AWeaponCaseCode_C*                      PC_Ref;                                            // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	void All_Set_AO(double Intensity);
	void BndEvt__WeaponCaseBox_Item_Slot_K2Node_ComponentBoundEvent_0_Take_Item__DelegateSignature();
	void Clear();
	void ExecuteUbergraph_WeaponCaseBox(int32 EntryPoint);
	void OnRep_Case_Open();
	void OnRep_Selected_Weapon();
	void Open_Case();
	void ReceiveBeginPlay();
	void Set_Weapon(Enum_WeaponListCase Weapon);
	void TL_Case_Opening__FinishedFunc();
	void TL_Case_Opening__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WeaponCaseBox_C">();
	}
	static class AWeaponCaseBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeaponCaseBox_C>();
	}
};
static_assert(alignof(AWeaponCaseBox_C) == 0x000008, "Wrong alignment on AWeaponCaseBox_C");
static_assert(sizeof(AWeaponCaseBox_C) == 0x000388, "Wrong size on AWeaponCaseBox_C");
static_assert(offsetof(AWeaponCaseBox_C, UberGraphFrame) == 0x0002A8, "Member 'AWeaponCaseBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, C_SoundPath) == 0x0002B0, "Member 'AWeaponCaseBox_C::C_SoundPath' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, WeaponCrate_FoamBot) == 0x0002B8, "Member 'AWeaponCaseBox_C::WeaponCrate_FoamBot' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, WeaponCrate_FoamTop) == 0x0002C0, "Member 'AWeaponCaseBox_C::WeaponCrate_FoamTop' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, WeaponCrate_Small_Top) == 0x0002C8, "Member 'AWeaponCaseBox_C::WeaponCrate_Small_Top' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, WeaponCrate_Small) == 0x0002D0, "Member 'AWeaponCaseBox_C::WeaponCrate_Small' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, ItemSlot) == 0x0002D8, "Member 'AWeaponCaseBox_C::ItemSlot' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, DefaultSceneRoot) == 0x0002E0, "Member 'AWeaponCaseBox_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, TL_Case_Opening_Rotation_6640B30A41CCDEB064DF0CB3341161C5) == 0x0002E8, "Member 'AWeaponCaseBox_C::TL_Case_Opening_Rotation_6640B30A41CCDEB064DF0CB3341161C5' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, TL_Case_Opening__Direction_6640B30A41CCDEB064DF0CB3341161C5) == 0x0002EC, "Member 'AWeaponCaseBox_C::TL_Case_Opening__Direction_6640B30A41CCDEB064DF0CB3341161C5' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, TL_Case_Opening) == 0x0002F0, "Member 'AWeaponCaseBox_C::TL_Case_Opening' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, Case_Open) == 0x0002F8, "Member 'AWeaponCaseBox_C::Case_Open' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, Selected_Weapon_qsdsf) == 0x000300, "Member 'AWeaponCaseBox_C::Selected_Weapon_qsdsf' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, Item_Slot) == 0x000308, "Member 'AWeaponCaseBox_C::Item_Slot' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, Selected_Weapon) == 0x000310, "Member 'AWeaponCaseBox_C::Selected_Weapon' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, SoundPath) == 0x000318, "Member 'AWeaponCaseBox_C::SoundPath' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, Sector) == 0x000320, "Member 'AWeaponCaseBox_C::Sector' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, AssociatedFoam) == 0x000328, "Member 'AWeaponCaseBox_C::AssociatedFoam' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, M_FoamBot) == 0x000378, "Member 'AWeaponCaseBox_C::M_FoamBot' has a wrong offset!");
static_assert(offsetof(AWeaponCaseBox_C, PC_Ref) == 0x000380, "Member 'AWeaponCaseBox_C::PC_Ref' has a wrong offset!");

}

