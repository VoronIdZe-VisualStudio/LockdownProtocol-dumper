#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Scanner_TargetDot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Scanner_TargetDot.W_Scanner_TargetDot_C
// 0x0060 (0x0330 - 0x02D0)
class UW_Scanner_TargetDot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 TargetDot;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TargetDot_1;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Partner_Room;                                      // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Underscore;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x02F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               M_Circle;                                          // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Location;                                          // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Process(int32 TRUE_0);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_W_Scanner_TargetDot(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Scanner_TargetDot_C">();
	}
	static class UW_Scanner_TargetDot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Scanner_TargetDot_C>();
	}
};
static_assert(alignof(UW_Scanner_TargetDot_C) == 0x000008, "Wrong alignment on UW_Scanner_TargetDot_C");
static_assert(sizeof(UW_Scanner_TargetDot_C) == 0x000330, "Wrong size on UW_Scanner_TargetDot_C");
static_assert(offsetof(UW_Scanner_TargetDot_C, UberGraphFrame) == 0x0002D0, "Member 'UW_Scanner_TargetDot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Scanner_TargetDot_C, TargetDot) == 0x0002D8, "Member 'UW_Scanner_TargetDot_C::TargetDot' has a wrong offset!");
static_assert(offsetof(UW_Scanner_TargetDot_C, TargetDot_1) == 0x0002E0, "Member 'UW_Scanner_TargetDot_C::TargetDot_1' has a wrong offset!");
static_assert(offsetof(UW_Scanner_TargetDot_C, Partner_Room) == 0x0002E8, "Member 'UW_Scanner_TargetDot_C::Partner_Room' has a wrong offset!");
static_assert(offsetof(UW_Scanner_TargetDot_C, Underscore) == 0x0002F0, "Member 'UW_Scanner_TargetDot_C::Underscore' has a wrong offset!");
static_assert(offsetof(UW_Scanner_TargetDot_C, Rotation) == 0x0002F8, "Member 'UW_Scanner_TargetDot_C::Rotation' has a wrong offset!");
static_assert(offsetof(UW_Scanner_TargetDot_C, M_Circle) == 0x000310, "Member 'UW_Scanner_TargetDot_C::M_Circle' has a wrong offset!");
static_assert(offsetof(UW_Scanner_TargetDot_C, Radius) == 0x000318, "Member 'UW_Scanner_TargetDot_C::Radius' has a wrong offset!");
static_assert(offsetof(UW_Scanner_TargetDot_C, Location) == 0x000320, "Member 'UW_Scanner_TargetDot_C::Location' has a wrong offset!");

}

