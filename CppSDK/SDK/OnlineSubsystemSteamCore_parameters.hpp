#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemSteamCore

#include "Basic.hpp"

#include "SteamCoreShared_structs.hpp"


namespace SDK::Params
{

// Function OnlineSubsystemSteamCore.OnlineSessionInterfaceSteamCoreUtils.GetJoinedLobbyIds
// 0x0010 (0x0010 - 0x0000)
struct OnlineSessionInterfaceSteamCoreUtils_GetJoinedLobbyIds final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSessionInterfaceSteamCoreUtils_GetJoinedLobbyIds) == 0x000008, "Wrong alignment on OnlineSessionInterfaceSteamCoreUtils_GetJoinedLobbyIds");
static_assert(sizeof(OnlineSessionInterfaceSteamCoreUtils_GetJoinedLobbyIds) == 0x000010, "Wrong size on OnlineSessionInterfaceSteamCoreUtils_GetJoinedLobbyIds");
static_assert(offsetof(OnlineSessionInterfaceSteamCoreUtils_GetJoinedLobbyIds, ReturnValue) == 0x000000, "Member 'OnlineSessionInterfaceSteamCoreUtils_GetJoinedLobbyIds::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemSteamCore.OnlineSessionInterfaceSteamCoreUtils.GetLastJoinedLobbyId
// 0x0010 (0x0010 - 0x0000)
struct OnlineSessionInterfaceSteamCoreUtils_GetLastJoinedLobbyId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OnlineSessionInterfaceSteamCoreUtils_GetLastJoinedLobbyId) == 0x000008, "Wrong alignment on OnlineSessionInterfaceSteamCoreUtils_GetLastJoinedLobbyId");
static_assert(sizeof(OnlineSessionInterfaceSteamCoreUtils_GetLastJoinedLobbyId) == 0x000010, "Wrong size on OnlineSessionInterfaceSteamCoreUtils_GetLastJoinedLobbyId");
static_assert(offsetof(OnlineSessionInterfaceSteamCoreUtils_GetLastJoinedLobbyId, ReturnValue) == 0x000000, "Member 'OnlineSessionInterfaceSteamCoreUtils_GetLastJoinedLobbyId::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemSteamCore.SteamCoreSubsystemUtilities.GetExtraSessionSettings
// 0x0010 (0x0010 - 0x0000)
struct SteamCoreSubsystemUtilities_GetExtraSessionSettings final
{
public:
	TArray<struct FSteamSessionSetting>           SessionSettings;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamCoreSubsystemUtilities_GetExtraSessionSettings) == 0x000008, "Wrong alignment on SteamCoreSubsystemUtilities_GetExtraSessionSettings");
static_assert(sizeof(SteamCoreSubsystemUtilities_GetExtraSessionSettings) == 0x000010, "Wrong size on SteamCoreSubsystemUtilities_GetExtraSessionSettings");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetExtraSessionSettings, SessionSettings) == 0x000000, "Member 'SteamCoreSubsystemUtilities_GetExtraSessionSettings::SessionSettings' has a wrong offset!");

// Function OnlineSubsystemSteamCore.SteamCoreSubsystemUtilities.GetSessionSettings
// 0x0038 (0x0038 - 0x0000)
struct SteamCoreSubsystemUtilities_GetSessionSettings final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSteamSessionSetting>           SessionSettings;                                   // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SessionName;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPlayers;                                        // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowInvites;                                     // 0x002C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsesPresence;                                     // 0x002D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowJoinInProgress;                              // 0x002E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowJoinViaPresence;                             // 0x002F(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowJoinViaPresenceFriendsOnly;                  // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAntiCheatProtected;                               // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsesStats;                                        // 0x0032(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldAdvertise;                                  // 0x0033(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbiesIfAvailable;                            // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbiesVoiceChatIfAvailable;                   // 0x0035(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamCoreSubsystemUtilities_GetSessionSettings) == 0x000008, "Wrong alignment on SteamCoreSubsystemUtilities_GetSessionSettings");
static_assert(sizeof(SteamCoreSubsystemUtilities_GetSessionSettings) == 0x000038, "Wrong size on SteamCoreSubsystemUtilities_GetSessionSettings");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, WorldContextObject) == 0x000000, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, SessionSettings) == 0x000008, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::SessionSettings' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, SessionName) == 0x000018, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::SessionName' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, MaxPlayers) == 0x000028, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::MaxPlayers' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, bAllowInvites) == 0x00002C, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::bAllowInvites' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, bUsesPresence) == 0x00002D, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::bUsesPresence' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, bAllowJoinInProgress) == 0x00002E, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::bAllowJoinInProgress' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, bAllowJoinViaPresence) == 0x00002F, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::bAllowJoinViaPresence' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, bAllowJoinViaPresenceFriendsOnly) == 0x000030, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::bAllowJoinViaPresenceFriendsOnly' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, bAntiCheatProtected) == 0x000031, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::bAntiCheatProtected' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, bUsesStats) == 0x000032, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::bUsesStats' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, bShouldAdvertise) == 0x000033, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::bShouldAdvertise' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, bUseLobbiesIfAvailable) == 0x000034, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::bUseLobbiesIfAvailable' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_GetSessionSettings, bUseLobbiesVoiceChatIfAvailable) == 0x000035, "Member 'SteamCoreSubsystemUtilities_GetSessionSettings::bUseLobbiesVoiceChatIfAvailable' has a wrong offset!");

// Function OnlineSubsystemSteamCore.SteamCoreSubsystemUtilities.SendSessionInviteToFriend
// 0x0020 (0x0020 - 0x0000)
struct SteamCoreSubsystemUtilities_SendSessionInviteToFriend final
{
public:
	int32                                         LocalUserNum;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FriendSteamId;                                     // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamCoreSubsystemUtilities_SendSessionInviteToFriend) == 0x000008, "Wrong alignment on SteamCoreSubsystemUtilities_SendSessionInviteToFriend");
static_assert(sizeof(SteamCoreSubsystemUtilities_SendSessionInviteToFriend) == 0x000020, "Wrong size on SteamCoreSubsystemUtilities_SendSessionInviteToFriend");
static_assert(offsetof(SteamCoreSubsystemUtilities_SendSessionInviteToFriend, LocalUserNum) == 0x000000, "Member 'SteamCoreSubsystemUtilities_SendSessionInviteToFriend::LocalUserNum' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_SendSessionInviteToFriend, FriendSteamId) == 0x000008, "Member 'SteamCoreSubsystemUtilities_SendSessionInviteToFriend::FriendSteamId' has a wrong offset!");
static_assert(offsetof(SteamCoreSubsystemUtilities_SendSessionInviteToFriend, ReturnValue) == 0x000018, "Member 'SteamCoreSubsystemUtilities_SendSessionInviteToFriend::ReturnValue' has a wrong offset!");

}

