#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TaskManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_WeaponListCase_structs.hpp"
#include "Str_GameSetting_Category_structs.hpp"
#include "E_Difficulty_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TaskManager.TaskManager_C
// 0x0190 (0x0438 - 0x02A8)
class ATaskManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Root;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UW_TaskList_C*                          TaskList;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ATask_C*>                        Session_Tasks;                                     // 0x02C0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, RepNotify)
	class UW_TaskMap2_C*                          TaskMap;                                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Clear_Item_Spawners;                               // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UW_TaskInfo_C*                          TaskInfo;                                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Focused_Task;                                      // 0x02F0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATaskKeyboard_C*                        Keyboard_Ref;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AGM_C*                                  GM_Ref;                                            // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AAlimBox_C*>                     Alimentations;                                     // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ATask_C*>                        All_Tasks;                                         // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ATask_PlantAnalysis_C*                  Task_Plant;                                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ATask_Vents_C*                          Task_Vents;                                        // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ATask_DelivryIn_C*                      Task_Delivery_In;                                  // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Tasks_Count;                                       // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Alim_Batteries;                                    // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItemSpawn_Handler_C*                   Spawn_Handler;                                     // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Weapons;                                           // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Alim_Fuze;                                         // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATask_Machine_C*                        Task_Machines;                                     // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(TArray<class ATask_C*>& Tasks)> Update_Tasks;                      // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ATask_Data_C*                           Task_Data;                                         // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Check_Task_Count;                                  // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<int32>                                 Music_Selection;                                   // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_Difficulty                                  Difficulty;                                        // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Player_Count;                                      // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AWeaponCaseBox_C*>               All_Weapon_Cases;                                  // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<Enum_WeaponListCase>                   Weapons_for_Cases;                                 // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AAlarmButton_C*>                 AlarmBoxs;                                         // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UW_NewMenu_C*                           Menu_Ref;                                          // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStr_GameSetting_Category>      Settion_Dettings;                                  // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, int32>                      Settings;                                          // 0x03E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void All_Join_Update(TArray<class ATask_C*>& Tasks);
	void Check_Finished_Tasks(bool* End);
	void Check_Tasks_End();
	void Clear_Tasks();
	void ExecuteUbergraph_TaskManager(int32 EntryPoint);
	void Focus_Task(bool Next);
	void Generate_Tasks(int32 Task_Count, E_Difficulty Difficulty_0, int32 Player_Count_0);
	void Get_Available_Tasks(TArray<class ATask_C*>* Tasks, int32* Count);
	void Join_Update();
	void OnRep_Focused_Task();
	void OnRep_Session_Tasks();
	void ReceiveBeginPlay();
	void Set_Session_Tasks(int32 Task_Count, TArray<class ATask_C*>* Selected_Tasks);
	void Spawn_Weapons();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TaskManager_C">();
	}
	static class ATaskManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATaskManager_C>();
	}
};
static_assert(alignof(ATaskManager_C) == 0x000008, "Wrong alignment on ATaskManager_C");
static_assert(sizeof(ATaskManager_C) == 0x000438, "Wrong size on ATaskManager_C");
static_assert(offsetof(ATaskManager_C, UberGraphFrame) == 0x0002A8, "Member 'ATaskManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Root) == 0x0002B0, "Member 'ATaskManager_C::Root' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, TaskList) == 0x0002B8, "Member 'ATaskManager_C::TaskList' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Session_Tasks) == 0x0002C0, "Member 'ATaskManager_C::Session_Tasks' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, TaskMap) == 0x0002D0, "Member 'ATaskManager_C::TaskMap' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Clear_Item_Spawners) == 0x0002D8, "Member 'ATaskManager_C::Clear_Item_Spawners' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, TaskInfo) == 0x0002E8, "Member 'ATaskManager_C::TaskInfo' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Focused_Task) == 0x0002F0, "Member 'ATaskManager_C::Focused_Task' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Keyboard_Ref) == 0x0002F8, "Member 'ATaskManager_C::Keyboard_Ref' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, GM_Ref) == 0x000300, "Member 'ATaskManager_C::GM_Ref' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Alimentations) == 0x000308, "Member 'ATaskManager_C::Alimentations' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, All_Tasks) == 0x000318, "Member 'ATaskManager_C::All_Tasks' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Task_Plant) == 0x000328, "Member 'ATaskManager_C::Task_Plant' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Task_Vents) == 0x000330, "Member 'ATaskManager_C::Task_Vents' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Task_Delivery_In) == 0x000338, "Member 'ATaskManager_C::Task_Delivery_In' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Tasks_Count) == 0x000340, "Member 'ATaskManager_C::Tasks_Count' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Alim_Batteries) == 0x000344, "Member 'ATaskManager_C::Alim_Batteries' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Spawn_Handler) == 0x000348, "Member 'ATaskManager_C::Spawn_Handler' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Weapons) == 0x000350, "Member 'ATaskManager_C::Weapons' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Alim_Fuze) == 0x000354, "Member 'ATaskManager_C::Alim_Fuze' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Task_Machines) == 0x000358, "Member 'ATaskManager_C::Task_Machines' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Update_Tasks) == 0x000360, "Member 'ATaskManager_C::Update_Tasks' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Task_Data) == 0x000370, "Member 'ATaskManager_C::Task_Data' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Check_Task_Count) == 0x000378, "Member 'ATaskManager_C::Check_Task_Count' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Music_Selection) == 0x000388, "Member 'ATaskManager_C::Music_Selection' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Difficulty) == 0x000398, "Member 'ATaskManager_C::Difficulty' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Player_Count) == 0x00039C, "Member 'ATaskManager_C::Player_Count' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, All_Weapon_Cases) == 0x0003A0, "Member 'ATaskManager_C::All_Weapon_Cases' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Weapons_for_Cases) == 0x0003B0, "Member 'ATaskManager_C::Weapons_for_Cases' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, AlarmBoxs) == 0x0003C0, "Member 'ATaskManager_C::AlarmBoxs' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Menu_Ref) == 0x0003D0, "Member 'ATaskManager_C::Menu_Ref' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Settion_Dettings) == 0x0003D8, "Member 'ATaskManager_C::Settion_Dettings' has a wrong offset!");
static_assert(offsetof(ATaskManager_C, Settings) == 0x0003E8, "Member 'ATaskManager_C::Settings' has a wrong offset!");

}

