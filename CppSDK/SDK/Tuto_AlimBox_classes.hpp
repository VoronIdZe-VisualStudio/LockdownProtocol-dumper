#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tuto_AlimBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_Alim_FuzeState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_Sectors_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Tuto_AlimBox.Tuto_AlimBox_C
// 0x0180 (0x0428 - 0x02A8)
class ATuto_AlimBox_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Collisions;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_SoundPath;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Map_Position;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PowerLine;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fuse_In;                                           // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fuse_Out;                                          // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass;                                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Battery;                                         // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Fuze_2;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   C_Fuze_1;                                          // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_LightAnim_Drain_5505FD94465C8D458C825BA53946E233; // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_LightAnim_Request_5505FD94465C8D458C825BA53946E233; // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_LightAnim__Direction_5505FD94465C8D458C825BA53946E233; // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_LightAnim;                                      // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AItemSlot_C*>                    Fuzes;                                             // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         In_Color;                                          // 0x0338(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Out_Color;                                         // 0x033C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Alim_FuzeState                              Fuze_State;                                        // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Battery_Value;                                     // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItemSlot_C*                            battery;                                           // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Alimented;                                         // 0x0350(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Fuzes_Values;                                      // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AItemSpawn_Handler_C*                   Spawner;                                           // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Alim_Spawns;                                       // 0x0370(0x0010)(Edit, BlueprintVisible)
	int32                                         Batteries_Count;                                   // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Fuze_Count;                                        // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fuse_Shuffle_Side;                                 // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              Alim_Full;                                         // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           Timer;                                             // 0x03A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_GenericMachine_Jauge_C*              Task_Jauge;                                        // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Battery_Jauge_C*                     Battery_Jauge;                                     // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Task_Value;                                        // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       PowerLine_M;                                       // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Glass_Location;                                    // 0x03D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Glass_Rotation;                                    // 0x03E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ASoundPath_C*                           SoundPath;                                         // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Finished;                                          // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Sectors                                  Sector;                                            // 0x0409(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A[0x6];                                      // 0x040A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATuto_Check_C*                          Check_Ref_Battery;                                 // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ATuto_Check_C*                          Check_Ref_Fuse_Left;                               // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ATuto_Check_C*                          Check_Ref_Fuse_Right;                              // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	void All_Set_Glass_State(bool Close);
	void BndEvt__AlimBox_Battery_K2Node_ComponentBoundEvent_0_Place_Item__DelegateSignature();
	void BndEvt__AlimBox_Battery_K2Node_ComponentBoundEvent_1_Take_Item__DelegateSignature();
	void Check_Fuzes();
	void Clear();
	void ExecuteUbergraph_Tuto_AlimBox(int32 EntryPoint);
	void Generate_Fuzes();
	void Get_MapPosition(struct FVector* Location);
	void Place_Fuses();
	void ReceiveBeginPlay();
	void Set_Light_State();
	void Set_Request_Colors(int32 In_Color_0, int32 Out_Color_0);
	void Spawn_Batteries(int32 Count, int32 Min_Charge, int32 Max_Charge, TArray<struct FStr_Item>* Array);
	void Start_Light_Anim();
	void Stop_Light_Anim();
	void TL_LightAnim__FinishedFunc();
	void TL_LightAnim__UpdateFunc();
	void Update_PowerLine(const struct FLinearColor& Request_A, const struct FLinearColor& Request_B, const struct FLinearColor& Valid_A, const struct FLinearColor& Valid_B, const struct FLinearColor& Drain_A, const struct FLinearColor& Drain_B);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Tuto_AlimBox_C">();
	}
	static class ATuto_AlimBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATuto_AlimBox_C>();
	}
};
static_assert(alignof(ATuto_AlimBox_C) == 0x000008, "Wrong alignment on ATuto_AlimBox_C");
static_assert(sizeof(ATuto_AlimBox_C) == 0x000428, "Wrong size on ATuto_AlimBox_C");
static_assert(offsetof(ATuto_AlimBox_C, UberGraphFrame) == 0x0002A8, "Member 'ATuto_AlimBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Collisions) == 0x0002B0, "Member 'ATuto_AlimBox_C::Collisions' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, C_SoundPath) == 0x0002B8, "Member 'ATuto_AlimBox_C::C_SoundPath' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Map_Position) == 0x0002C0, "Member 'ATuto_AlimBox_C::Map_Position' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, PowerLine) == 0x0002C8, "Member 'ATuto_AlimBox_C::PowerLine' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Fuse_In) == 0x0002D0, "Member 'ATuto_AlimBox_C::Fuse_In' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Fuse_Out) == 0x0002D8, "Member 'ATuto_AlimBox_C::Fuse_Out' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Glass) == 0x0002E0, "Member 'ATuto_AlimBox_C::Glass' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, C_Battery) == 0x0002E8, "Member 'ATuto_AlimBox_C::C_Battery' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, C_Fuze_2) == 0x0002F0, "Member 'ATuto_AlimBox_C::C_Fuze_2' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, C_Fuze_1) == 0x0002F8, "Member 'ATuto_AlimBox_C::C_Fuze_1' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Root) == 0x000300, "Member 'ATuto_AlimBox_C::Root' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Cube) == 0x000308, "Member 'ATuto_AlimBox_C::Cube' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, TL_LightAnim_Drain_5505FD94465C8D458C825BA53946E233) == 0x000310, "Member 'ATuto_AlimBox_C::TL_LightAnim_Drain_5505FD94465C8D458C825BA53946E233' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, TL_LightAnim_Request_5505FD94465C8D458C825BA53946E233) == 0x000314, "Member 'ATuto_AlimBox_C::TL_LightAnim_Request_5505FD94465C8D458C825BA53946E233' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, TL_LightAnim__Direction_5505FD94465C8D458C825BA53946E233) == 0x000318, "Member 'ATuto_AlimBox_C::TL_LightAnim__Direction_5505FD94465C8D458C825BA53946E233' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, TL_LightAnim) == 0x000320, "Member 'ATuto_AlimBox_C::TL_LightAnim' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Fuzes) == 0x000328, "Member 'ATuto_AlimBox_C::Fuzes' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, In_Color) == 0x000338, "Member 'ATuto_AlimBox_C::In_Color' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Out_Color) == 0x00033C, "Member 'ATuto_AlimBox_C::Out_Color' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Fuze_State) == 0x000340, "Member 'ATuto_AlimBox_C::Fuze_State' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Battery_Value) == 0x000344, "Member 'ATuto_AlimBox_C::Battery_Value' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, battery) == 0x000348, "Member 'ATuto_AlimBox_C::battery' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Alimented) == 0x000350, "Member 'ATuto_AlimBox_C::Alimented' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Fuzes_Values) == 0x000358, "Member 'ATuto_AlimBox_C::Fuzes_Values' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Spawner) == 0x000368, "Member 'ATuto_AlimBox_C::Spawner' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Alim_Spawns) == 0x000370, "Member 'ATuto_AlimBox_C::Alim_Spawns' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Batteries_Count) == 0x000380, "Member 'ATuto_AlimBox_C::Batteries_Count' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Fuze_Count) == 0x000384, "Member 'ATuto_AlimBox_C::Fuze_Count' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Fuse_Shuffle_Side) == 0x000388, "Member 'ATuto_AlimBox_C::Fuse_Shuffle_Side' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Alim_Full) == 0x000390, "Member 'ATuto_AlimBox_C::Alim_Full' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Timer) == 0x0003A0, "Member 'ATuto_AlimBox_C::Timer' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Task_Jauge) == 0x0003A8, "Member 'ATuto_AlimBox_C::Task_Jauge' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Battery_Jauge) == 0x0003B0, "Member 'ATuto_AlimBox_C::Battery_Jauge' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Task_Value) == 0x0003B8, "Member 'ATuto_AlimBox_C::Task_Value' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, PowerLine_M) == 0x0003C0, "Member 'ATuto_AlimBox_C::PowerLine_M' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Glass_Location) == 0x0003D0, "Member 'ATuto_AlimBox_C::Glass_Location' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Glass_Rotation) == 0x0003E8, "Member 'ATuto_AlimBox_C::Glass_Rotation' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, SoundPath) == 0x000400, "Member 'ATuto_AlimBox_C::SoundPath' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Finished) == 0x000408, "Member 'ATuto_AlimBox_C::Finished' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Sector) == 0x000409, "Member 'ATuto_AlimBox_C::Sector' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Check_Ref_Battery) == 0x000410, "Member 'ATuto_AlimBox_C::Check_Ref_Battery' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Check_Ref_Fuse_Left) == 0x000418, "Member 'ATuto_AlimBox_C::Check_Ref_Fuse_Left' has a wrong offset!");
static_assert(offsetof(ATuto_AlimBox_C, Check_Ref_Fuse_Right) == 0x000420, "Member 'ATuto_AlimBox_C::Check_Ref_Fuse_Right' has a wrong offset!");

}

