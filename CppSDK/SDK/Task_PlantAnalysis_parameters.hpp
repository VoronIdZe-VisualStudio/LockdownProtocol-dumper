#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_PlantAnalysis

#include "Basic.hpp"

#include "Str_ItemState_structs.hpp"
#include "Str_ItemSpawnLocation_structs.hpp"
#include "E_Difficulty_structs.hpp"
#include "Str_Item_structs.hpp"
#include "Str_ItemSpawnRequest_structs.hpp"


namespace SDK::Params
{

// Function Task_PlantAnalysis.Task_PlantAnalysis_C.ExecuteUbergraph_Task_PlantAnalysis
// 0x0090 (0x0090 - 0x0000)
struct Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemState                         K2Node_MakeStruct_Str_ItemState;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_Item                              K2Node_MakeStruct_Str_Item;                        // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemSpawnRequest                  K2Node_MakeStruct_Str_ItemSpawnRequest;            // 0x0020(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemSpawnRequest                  K2Node_MakeStruct_Str_ItemSpawnRequest_1;          // 0x0028(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemSpawnRequest                  K2Node_MakeStruct_Str_ItemSpawnRequest_2;          // 0x0030(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemSpawnRequest                  K2Node_MakeStruct_Str_ItemSpawnRequest_3;          // 0x0038(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Difficulty                                  Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStr_ItemSpawnRequest>          K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlant_C*>                       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_ItemSpawnLocation                 CallFunc_Spawn_Item_Location;                      // 0x0084(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis) == 0x000008, "Wrong alignment on Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis");
static_assert(sizeof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis) == 0x000090, "Wrong size on Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, EntryPoint) == 0x000000, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, K2Node_MakeStruct_Str_ItemState) == 0x000004, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::K2Node_MakeStruct_Str_ItemState' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, K2Node_MakeStruct_Str_Item) == 0x000010, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::K2Node_MakeStruct_Str_Item' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, K2Node_MakeStruct_Str_ItemSpawnRequest) == 0x000020, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::K2Node_MakeStruct_Str_ItemSpawnRequest' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, K2Node_MakeStruct_Str_ItemSpawnRequest_1) == 0x000028, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::K2Node_MakeStruct_Str_ItemSpawnRequest_1' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, K2Node_MakeStruct_Str_ItemSpawnRequest_2) == 0x000030, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::K2Node_MakeStruct_Str_ItemSpawnRequest_2' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, K2Node_MakeStruct_Str_ItemSpawnRequest_3) == 0x000038, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::K2Node_MakeStruct_Str_ItemSpawnRequest_3' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, Temp_byte_Variable) == 0x000040, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, K2Node_MakeArray_Array) == 0x000048, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, Temp_int_Variable) == 0x000058, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, K2Node_Event_Delay) == 0x000060, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, CallFunc_GetAllActorsOfClass_OutActors) == 0x000068, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, Temp_int_Variable_1) == 0x000078, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00007C, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, CallFunc_Spawn_Item_Location) == 0x000084, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::CallFunc_Spawn_Item_Location' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, K2Node_Select_Default) == 0x000088, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis, CallFunc_Delay_Duration_ImplicitCast) == 0x00008C, "Member 'Task_PlantAnalysis_C_ExecuteUbergraph_Task_PlantAnalysis::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function Task_PlantAnalysis.Task_PlantAnalysis_C.Set Plants
// 0x0028 (0x0028 - 0x0000)
struct Task_PlantAnalysis_C_Set_Plants final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlant_C*                               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_PlantAnalysis_C_Set_Plants) == 0x000008, "Wrong alignment on Task_PlantAnalysis_C_Set_Plants");
static_assert(sizeof(Task_PlantAnalysis_C_Set_Plants) == 0x000028, "Wrong size on Task_PlantAnalysis_C_Set_Plants");
static_assert(offsetof(Task_PlantAnalysis_C_Set_Plants, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Task_PlantAnalysis_C_Set_Plants::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_Set_Plants, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Task_PlantAnalysis_C_Set_Plants::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_Set_Plants, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Task_PlantAnalysis_C_Set_Plants::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_Set_Plants, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Task_PlantAnalysis_C_Set_Plants::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_Set_Plants, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'Task_PlantAnalysis_C_Set_Plants::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_Set_Plants, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000014, "Member 'Task_PlantAnalysis_C_Set_Plants::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_Set_Plants, CallFunc_Array_Get_Item) == 0x000018, "Member 'Task_PlantAnalysis_C_Set_Plants::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_Set_Plants, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Task_PlantAnalysis_C_Set_Plants::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_PlantAnalysis_C_Set_Plants, CallFunc_Less_IntInt_ReturnValue_1) == 0x000024, "Member 'Task_PlantAnalysis_C_Set_Plants::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Task_PlantAnalysis.Task_PlantAnalysis_C.Start Task
// 0x0008 (0x0008 - 0x0000)
struct Task_PlantAnalysis_C_Start_Task final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_PlantAnalysis_C_Start_Task) == 0x000008, "Wrong alignment on Task_PlantAnalysis_C_Start_Task");
static_assert(sizeof(Task_PlantAnalysis_C_Start_Task) == 0x000008, "Wrong size on Task_PlantAnalysis_C_Start_Task");
static_assert(offsetof(Task_PlantAnalysis_C_Start_Task, Delay) == 0x000000, "Member 'Task_PlantAnalysis_C_Start_Task::Delay' has a wrong offset!");

}

